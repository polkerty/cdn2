! function() {
    function a() {
        e = window.jQuery.noConflict(!0), b()
    }

    function b() {
        d(), e(document).ready(function(a) {
            function b() {
                a(u).html(CP.Templates["js/templates/widget.hbs"](i)), i.has_leads === !0 && i.phone_number_enabled && a("#cp_leads_required_phone_number").mask("(999) 999-9999")
				
								/**
				* Simple, lightweight, usable local autocomplete library for modern browsers
				* Because there weren’t enough autocomplete scripts in the world? Because I’m completely insane and have NIH syndrome? Probably both. :P
				* @author Lea Verou http://leaverou.github.io/awesomplete
				* MIT license
				*/

				(function () {

				var _ = function (input, o) {
				var me = this;

				// Setup

				this.isOpened = false;

				this.input = $(input);
				this.input.setAttribute("autocomplete", "off");
				this.input.setAttribute("aria-autocomplete", "list");

				o = o || {};

				configure(this, {
					minChars: 2,
					maxItems: 10,
					autoFirst: false,
					data: _.DATA,
					filter: _.FILTER_CONTAINS,
					sort: _.SORT_BYLENGTH,
					item: _.ITEM,
					replace: _.REPLACE
				}, o);

				this.index = -1;

				// Create necessary elements

				this.container = $.create("div", {
					className: "awesomplete",
					around: input
				});

				this.ul = $.create("ul", {
					hidden: "hidden",
					inside: this.container
				});

				this.status = $.create("span", {
					className: "visually-hidden",
					role: "status",
					"aria-live": "assertive",
					"aria-relevant": "additions",
					inside: this.container
				});

				// Bind events

				$.bind(this.input, {
					"input": this.evaluate.bind(this),
					"blur": this.close.bind(this, { reason: "blur" }),
					"keydown": function(evt) {
						var c = evt.keyCode;

						// If the dropdown `ul` is in view, then act on keydown for the following keys:
						// Enter / Esc / Up / Down
						if(me.opened) {
							if (c === 13 && me.selected) { // Enter
								evt.preventDefault();
								me.select();
							}
							else if (c === 27) { // Esc
								me.close({ reason: "esc" });
							}
							else if (c === 38 || c === 40) { // Down/Up arrow
								evt.preventDefault();
								me[c === 38? "previous" : "next"]();
							}
						}
					}
				});

				$.bind(this.input.form, {"submit": this.close.bind(this, { reason: "submit" })});

				$.bind(this.ul, {"mousedown": function(evt) {
					var li = evt.target;

					if (li !== this) {

						while (li && !/li/i.test(li.nodeName)) {
							li = li.parentNode;
						}

						if (li && evt.button === 0) {  // Only select on left click
							evt.preventDefault();
							me.select(li, evt.target);
						}
					}
				}});

				if (this.input.hasAttribute("list")) {
					this.list = "#" + this.input.getAttribute("list");
					this.input.removeAttribute("list");
				}
				else {
					this.list = this.input.getAttribute("data-list") || o.list || [];
				}

				_.all.push(this);
				};

				_.prototype = {
				set list(list) {
					if (Array.isArray(list)) {
						this._list = list;
					}
					else if (typeof list === "string" && list.indexOf(",") > -1) {
							this._list = list.split(/\s*,\s*/);
					}
					else { // Element or CSS selector
						list = $(list);

						if (list && list.children) {
							var items = [];
							slice.apply(list.children).forEach(function (el) {
								if (!el.disabled) {
									var text = el.textContent.trim();
									var value = el.value || text;
									var label = el.label || text;
									if (value !== "") {
										items.push({ label: label, value: value });
									}
								}
							});
							this._list = items;
						}
					}

					if (document.activeElement === this.input) {
						this.evaluate();
					}
				},

				get selected() {
					return this.index > -1;
				},

				get opened() {
					return this.isOpened;
				},

				close: function (o) {
					if (!this.opened) {
						return;
					}

					this.ul.setAttribute("hidden", "");
					this.isOpened = false;
					this.index = -1;

					$.fire(this.input, "awesomplete-close", o || {});
				},

				open: function () {
					this.ul.removeAttribute("hidden");
					this.isOpened = true;

					if (this.autoFirst && this.index === -1) {
						this.goto(0);
					}

					$.fire(this.input, "awesomplete-open");
				},

				next: function () {
					var count = this.ul.children.length;
					this.goto(this.index < count - 1 ? this.index + 1 : (count ? 0 : -1) );
				},

				previous: function () {
					var count = this.ul.children.length;
					var pos = this.index - 1;

					this.goto(this.selected && pos !== -1 ? pos : count - 1);
				},

				// Should not be used, highlights specific item without any checks!
				goto: function (i) {
					var lis = this.ul.children;

					if (this.selected) {
						lis[this.index].setAttribute("aria-selected", "false");
					}

					this.index = i;

					if (i > -1 && lis.length > 0) {
						lis[i].setAttribute("aria-selected", "true");
						this.status.textContent = lis[i].textContent;

						$.fire(this.input, "awesomplete-highlight", {
							text: this.suggestions[this.index]
						});
					}
				},

				select: function (selected, origin) {
					if (selected) {
						this.index = $.siblingIndex(selected);
					} else {
						selected = this.ul.children[this.index];
					}

					if (selected) {
						var suggestion = this.suggestions[this.index];

						var allowed = $.fire(this.input, "awesomplete-select", {
							text: suggestion,
							origin: origin || selected
						});

						if (allowed) {
							this.replace(suggestion);
							this.close({ reason: "select" });
							$.fire(this.input, "awesomplete-selectcomplete", {
								text: suggestion
							});
						}
					}
				},

				evaluate: function() {
					var me = this;
					var value = this.input.value;

					if (value.length >= this.minChars && this._list.length > 0) {
						this.index = -1;
						// Populate list with options that match
						this.ul.innerHTML = "";

						this.suggestions = this._list
							.map(function(item) {
								return new Suggestion(me.data(item, value));
							})
							.filter(function(item) {
								return me.filter(item, value);
							})
							.sort(this.sort)
							.slice(0, this.maxItems);

						this.suggestions.forEach(function(text) {
								me.ul.appendChild(me.item(text, value));
							});

						if (this.ul.children.length === 0) {
							this.close({ reason: "nomatches" });
						} else {
							this.open();
						}
					}
					else {
						this.close({ reason: "nomatches" });
					}
				}
				};

				// Static methods/properties

				_.all = [];

				_.FILTER_CONTAINS = function (text, input) {
				return RegExp($.regExpEscape(input.trim()), "i").test(text);
				};

				_.FILTER_STARTSWITH = function (text, input) {
				return RegExp("^" + $.regExpEscape(input.trim()), "i").test(text);
				};

				_.SORT_BYLENGTH = function (a, b) {
				if (a.length !== b.length) {
					return a.length - b.length;
				}

				return a < b? -1 : 1;
				};

				_.ITEM = function (text, input) {
				var html = input.trim() === '' ? text : text.replace(RegExp($.regExpEscape(input.trim()), "gi"), "<mark>$&</mark>");
				return $.create("li", {
					innerHTML: html,
					"aria-selected": "false"
				});
				};

				_.REPLACE = function (text) {
				this.input.value = text.value;
				};

				_.DATA = function (item/*, input*/) { return item; };

				// Private functions

				function Suggestion(data) {
				var o = Array.isArray(data)
				  ? { label: data[0], value: data[1] }
				  : typeof data === "object" && "label" in data && "value" in data ? data : { label: data, value: data };

				this.label = o.label || o.value;
				this.value = o.value;
				}
				Object.defineProperty(Suggestion.prototype = Object.create(String.prototype), "length", {
				get: function() { return this.label.length; }
				});
				Suggestion.prototype.toString = Suggestion.prototype.valueOf = function () {
				return "" + this.label;
				};

				function configure(instance, properties, o) {
				for (var i in properties) {
					var initial = properties[i],
						attrValue = instance.input.getAttribute("data-" + i.toLowerCase());

					if (typeof initial === "number") {
						instance[i] = parseInt(attrValue);
					}
					else if (initial === false) { // Boolean options must be false by default anyway
						instance[i] = attrValue !== null;
					}
					else if (initial instanceof Function) {
						instance[i] = null;
					}
					else {
						instance[i] = attrValue;
					}

					if (!instance[i] && instance[i] !== 0) {
						instance[i] = (i in o)? o[i] : initial;
					}
				}
				}

				// Helpers

				var slice = Array.prototype.slice;

				function $(expr, con) {
				return typeof expr === "string"? (con || document).querySelector(expr) : expr || null;
				}

				function $$(expr, con) {
				return slice.call((con || document).querySelectorAll(expr));
				}

				$.create = function(tag, o) {
				var element = document.createElement(tag);

				for (var i in o) {
					var val = o[i];

					if (i === "inside") {
						$(val).appendChild(element);
					}
					else if (i === "around") {
						var ref = $(val);
						ref.parentNode.insertBefore(element, ref);
						element.appendChild(ref);
					}
					else if (i in element) {
						element[i] = val;
					}
					else {
						element.setAttribute(i, val);
					}
				}

				return element;
				};

				$.bind = function(element, o) {
				if (element) {
					for (var event in o) {
						var callback = o[event];

						event.split(/\s+/).forEach(function (event) {
							element.addEventListener(event, callback);
						});
					}
				}
				};

				$.fire = function(target, type, properties) {
				var evt = document.createEvent("HTMLEvents");

				evt.initEvent(type, true, true );

				for (var j in properties) {
					evt[j] = properties[j];
				}

				return target.dispatchEvent(evt);
				};

				$.regExpEscape = function (s) {
				return s.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&");
				};

				$.siblingIndex = function (el) {
				/* eslint-disable no-cond-assign */
				for (var i = 0; el = el.previousElementSibling; i++);
				return i;
				};

				// Initialization

				function init() {
				$$("input.awesomplete").forEach(function (input) {
					new _(input);
				});
				}

				// Are we in a browser? Check for Document constructor
				if (typeof Document !== "undefined") {
				// DOM already loaded?
				if (document.readyState !== "loading") {
					init();
				}
				else {
					// Wait for it
					document.addEventListener("DOMContentLoaded", init);
				}
				}

				_.$ = $;
				_.$$ = $$;

				// Make sure to export Awesomplete on self when in a browser
				if (typeof self !== "undefined") {
				window.Awesomplete = _;
				}

				// Expose Awesomplete as a CJS module
				if (typeof module === "object" && module.exports) {
				module.exports = _;
				}

				return _;

				}());

				var ips = document.getElementsByClassName("inputArea");
				var input = ips[0];
				var output = ips[2];
				input.focus();
				var ia = new Awesomplete(input, {
				list: ["Almond Milk, Long Life","Alvarado Sprouted Multigrain Bread","Amaranth - Arrowhead Mills Organic Whole Grain","Barley, Bobs Red Mill (dry)","Bean Threads, Lungkow","Beans, Black, Eden Organic (canned)","Beans, Bushs Cannellini White Kidney Beans","Beans, Bushs Reduced Sodium Black Beans","Beans, Goya Black Beans","Beans, Pinto, Fat Free","Beans, Red Kidney (Publix)","Beans, Kidney Bushs Reduced Sodium","Beans, Kidney, Eden Organic No Salt Added (canned)","Beans, Navy","Beans, Refried Black Beans, Fat Free","Beans, Refried Black Casa Fiesta -low Fat","Beans, Trader Joes Black Beans","Bobs Red Mill Organic Oat Bran","Bobs Red Mill Mighty Tasty Hot Cereal","Beets","Bobs Red Mill Organic Steel Cut Oats","Bobs Red Mill Organic Oat Groats","Bread, 365 Organic Pizza Crust, Whole Wheat","Bread, Arnold Sandwich Thins","Bread, Bakestone Bros Multigrain Thin Bun","Bread, Burgen Fruit Toast","Bread, Daves Killer Bread","Bread, Dempsters Boost My Protein","Bread, Canyon Bakehouse, 7-Grain (gluten Free)","Bread, English Muffin, Tiptop","Bread, Ezekiel Muffin","Bread, Ezekiel 4:9 Sprouted English Muffin","Bread, Dempsters No Sugar","Bread, Ezekial","Bread, Kangaroo Salad Pockets","Bread, Helgas Rye","Bread, Food For Life, Multi-See Rice Bread","Bread, Food For Life, Brown Rice (gluten Free)","Bread, Flat Out Thin Crust Flatbread","Bread, Little Big Bread","Bread, Molenburg Wholemeal","Bread, Multigrain Gluten-Free, Essential Baking Co","Bread, Natures Own 100% Whole Wheat","Bread, Orowheat Pocket Thins Flatbread","Bread, Rudis Gluten Free Multigrain","Bread, Orowheat Sandwich Thins, Honey Wheat","Bread, Pepperidge Farm Pumpkin Spice Swirl","Bread, Rudolphs Bavarian Multi Grain","Bread, Sara Lee (45 Cal)","Bread, Trader Joes, Multigrain Slims","Bread, Thomas Pumpkin Spice English Muffin","Bread, Three Grain, Mestemacher","Bread, Warburtons Seeded","Bread, Udis Whole Grain Gluten Free","Bread, Whole Grain PC Blue Menu PC Thins","Bread, Wasa Light Rye Crisp","Buckwheat","Buckwheat Soba Noodles","Bulgar Wheat (boiled)","Bulgur, Bobs Red Mill (cooked)","Cereal-Corn Flakes","Carrots","Cereal, Cheerios, Uncle Tobys (Australia)","Cereal-Kix","Cereal, Chex Mix Traditional","Cereal, Ezekiel 4:9 Sprouted Whole Grain","Cereal, Fiber One","Cereal, Kelloggs All-Bran Buds","Cereal, Kind Cinnamon Oat Clusters","Cereal, Manischewitz Creamy Hot Wheat","Cereal, Natures Path Organic Kamut Puffs","Cereal, Quaker Oatmeal Squares","Chia Seeds","Cereal, Shredded Wheat Kellogs Mini Wheats (Unfrosted)","Cereal, Shredded Wheat","Chickpeas","Coconut Flour, Tiana","Coconut Chips, Creative Snack Co., Organic Toasted","Coconut Chips, C20 Baked","Chips, Popped Quaker, Blackberry Pomegranate","Chickpeas, PC Organics","Cous Cous, Lundberg Plain Brown Rice (DRY)","Cous Cous, Far East Herbed Chicken (with Water Only) Cooked)","Cous Cous","Cous Cous, Manitou Mediterranean Blend","Corn (yellow, Canned)","Corn Thins, Multigrain (Real Foods Brand)","Crackers, Food Should Taste Good, Roasted Red Pepper Brown Rice","Cream Of Wheat","Crackers, Miltons, Everything","Cream Of Rice","Cream Of Wheat, Whole Grain","English Muffin, Oakrun Farm Whole Grain","English Muffin, Genius (gluten Free)","English Muffin, Healthy Life Multi Grain","English Muffin, Old Mill Vieux Moulin","English Muffin, Thomas Light Multi Grain","English Muffin, Tip Top Wholemeal","English Muffins, Food For Life 100% Flourless Sprouted Whole Grain","Farina, Bobs Red Mill","Flat Bread, Joseph Multi Grain","Farro, Cooked","Flat Bread, Mountain Bread Organic","Flatbread, Flat Out Artisian Thin Crust Spicy Italian","Flat Bread, Trader Joes, Gluten Free","Flour, Kuttu","Flour, Coconut-Bobs Red Mill","Flatbread, Flat Out Artisian Thin Pizza Crust, Rustic White","Granola, Bear Naked Fit","Freekeh (cooked)","Granola, Five Grain (Hazelnut Honey)","Granola, Nature Valley Protein (Cranberry Almond)","Greek Yogurt, Chobani Almond Coco Loco","Greek Yogurt, Chobani With Pineapple","Greek Yogurt, Chobani Simply 100 (all Flavors)","Grits","Greek Yogurt, Oikos 2% Vanilla","Greek Yogurt, Kirkland (Fat Free Fruit Flavoured)","Grits, Corn","Honeyville Oat FIber","Lavash, Trader Joes Oven Baked Whole Wheat","Kasha, Wolffs","Lentils, Black Beluga, Archer Farms","Kasha, Shiloh Farms Organic","Jicama","Lavash, California Lavash Whole Grain","Lentils, Goya","Lentils, Kroger","Lentils, Madras Lentils, Tasty Bite","Malt-O-Meal (dry)","Lentils, Red, Dry (cooked)","Matzo Farfel, Streits","Matzo Meal, Manischewitz, Whole Grain","Matzo, Manischewitz Organic Spelt","Matzos, Streits Whole Wheat","Milk, Skim DLite","Milk, Cows Grass Fed","Matzos, Manischewitz, Whole Wheat","Millet Grits, Bobs Red Mill (dry)","Oat Bran, Hodgeson Mills","Oat Bran, Bobs Red Mill High Fiber Hot Cereal","Muffin, Thomas Hearty Multi-Grain","Oat Bran, Quaker","Oat Bran, Old Wessex","Oat Bran, Trader Joes","Oat Bran, Whole Foods Organic","Oat Flour, Bobs Red Mill","Oatcakes, Narnins","Oatmeal, Old Fashioned","Oatmeal, Better Oats-Oat Revolution Maple And Brown Sugar","Oatmeal, Only Oats","Oats, Bobs Red Mill (Extra Thick)","Oatmeal, Steel Cut","Oatmeal, Simple Truth Organic, Instant Original","Oats, Gluten Free-Trader Joes","Oats, Bobs Red Mill Quick Cooking Rolled","Oats, Bobs Red Mill Steel Cut (Gluten Free)","Oats, Bobs Red Mill, Quick Cooking Oats, Gluten Free","Oats, Trader Joes Quick Cook (Steel Cut)","Pancake Mix, Bobs Red Mill Gluten Free","Pancake Mix, Bobs Red Mill","Pancake Mix, Flap Jacked","Pancake Mix, Kodiak Cakes, Crunchy Peanut Butter","Pancake Mix, Hungry Jack Funfetti","Pancake Mix, Kodiak Cakes, Whole Wheat And Honey","Pancake Mix, Pamelas Gluten Free","Pancake Mix, Power Cakes (KodiakCakes)","Pancake/Waffle Mix, Birch Benders","Pasta, Barilla Plus Multigrain","Parsnips (raw)","Pasta Sauce-Tomato Based","Pasta, Brown Rice, Timkyada","Pasta, Barilla Whole Grain Penne","Pasta, Dreamfield Low Carb","Pasta, Ezekiel Sprouted Grain Spaghetti","Pasta, Chickpeas, Banza","Pasta, Jovial Brown Rice Pasta","Pasta, Jovial Whole Grain Pasta","Pasta, Lundberg Brown Rice Pasta (organic)","Pasta, No Yolk","Pasta, Quinoa, Ancient Harvest (dry)","Pasta, Rice Noodles LungKow Vermicelli (cooked)","Pasta, Organic Red Lentil Penne, Tolerant","Pasta, Ronzoni 150 (dry)","Pasta, Rizopia, Rice Spaghetti Pasta (dry)","Pasta, San Remo Cannelloni","Pasta, Simple Truth, Organic Whole Wheat Spaghetti (dry)","Pasta, Vermicelli","Peanut Spread, Nuts N More Toffee Crunch","Peas (canned)","Pita, Damascus","Peas, Black Eyed, Kroger (uncooked)","Pita, Josephs Pita Bread","Pita, Hannas Whole Wheat","Pita, Josephs- Flax Oat Bran And Whole Wheat","Pita, Toufayan Bread (White)","Plantains (raw)","Pocket Thin, Orowheat 8 Grain","Poi (cooked)","Popcorn, Orville Redenbacher (original Kernels, Unpopped)","Polenta (dry)","Popcorn, Skinny Pop","Potaotes OBrien, Ore Ida","Potato, Little Potato Company- Little Charmers","Potato, New Baby","Potato, Red","Potato, Oriental Japanese Sweet","Potato, Ruby Lou","Potato, Russet","Potato, Russet Ore Ida","Potato, Simply Potatoes Shredded Hash Browns","Potato, Sweet","Potato, Sweet Mc Cain","Potato, Yukon Gold","Potato, Sweet Ore Ida","Potatoes, Ore Ida Hash Browns","Potatoes, Safeway Kitchens Country Style Hash Browns","Puffed Corn, Arrowhead Mills","Potatoes, Trader Joes Frozen Hashbrowns","Pumpkin","Quinoa","Quinoa Flakes","Quinoa Macaroni, GoGo Quinoa","Quinoa, Ancient Harvest Flakes","Quinoa, Ancient Harvest Pasta (dry)","Quinoa, Bobs Red Mill (dry)","Quinoa, Roland (DRY)","Quinoa, Roland Garden Vegetable (dry)","Rice And Beans, Eden Organic Cajun (canned)","Quinoa, Roland Roasted Garlic (dry)","Rice And Beans, Eden Organic Carribean (canned)","Rice Cake, Butter Toffee","Rice Cake, Caramel Chocolate Chip","Rice Cake, Lundberg Brown Rice","Rice Cakes, Caramel","Rice Cakes, Mini Caramel Corn","Rice Cakes, Lundberg Brown","Rice Cakes, Quaker Apple Cinnamon","Rice Cakes, Quaker Butter Popcorn Minis","Rice Cakes, Quaker Chocolate Chunk","Rice Cakes, Quaker Ranch","Rice Cakes, Quaker Mini Cheddar","Rice Cakes, Quaker White Cheddar","Rice Sticks, Dynasty Dry","Rice, Annie Chuns, White Sticky","Rice, Basmati (Kirkland)","Rice, Brown","Rice, Basmati","Rice, Brown Basmati, Good Health","Rice, Brown Basmati (Ecolife), Cooked","Rice, Brown Medley (Trader Joes) Cooked","Rice, Brown Trader Joes Instant","Rice, Brown Jasmine Rice, Trader Joes (cooked)","Rice, Brown Trader Joes Medley (dry)","Rice, Jasmine, Thai Hom Mali (cooked)","Rice, Brown, Sprouts Long Grain Basmati","Rice, Carolina Jasmine Rice (dry)","Rice, Heirloom Forbidden Rice (dry)","Rice, Minute Brown (cooked)","Rice, Minute Multi-Grain Medley W/ Quinoa, Cooked","Rice, Natures Path Organic Crispy Brown","Rice, Nishiki White Sushi (uncooked)","Rice, Sticky White","Rice, Sukoyaka Genmai Brown Rice (pre-cooked)","Rice, Uncle Bens Bistro Express Cheddar Cheese","Rice, Uncle Bens Ready Rice In Brown Basmati","Rice, Uncle Bens Ready Rice- Basmati","Rice, Uncle Bens Spanish Style Ready Rice","Rice, Uncle Bens, Original Ready Rice","Rice, Uncle Bens Ready Rice (whole Grain Brown Variety)","Rice, White","Rudis Organic Multi-Grain English Muffin","Rice, Wild","Rutabagas","Squash, Acorn","Squash, Butternut","Squash, Kabocha","Squash, Delicata (Cooked)","Squash, Spaghetti","Suzies Whole Grain Thin Cakes All Natural Puffed Crackers","Tapioca, Swad","Thin Cakes, Multigrain (Suzies)","Tortilla, 365 Every Day Organic Corn Tortilla","Tortilla, Chi Chi","Tortilla, Casa Mendosa","Tortilla, Dempsters Whole Wheat","Tortilla, Don Pancho Whole Wheat","Tortilla, Don Julio","Tortilla, Dona Elsita, White Corn","Tortilla, Eating Right 100% Whole Grain","Tortilla, Ezekial Brown Rice","Tortilla, Ezekiel Sprouted Grain (large)","Tortilla, Ezekiel Sprouted Grain (small)","Tortilla, Food For Life-Brown Rice","Tortilla, Food For Life, Brown Rice","Tortilla, Home Brand","Tortilla, La Banderita Low-Carb","Tortilla, La Tortilla (Large)","Tortilla, La Tortilla OIive Oil Wrap","Tortilla, La Tortilla (Small)","Tortilla, LaTortilla, Wheat/Gluten Free Ancient Grain Ivory Teff","Tortilla, Mama Lupes Yellow Corn","Tortilla, Los Taquitos, Small Corn, Gluten Free","Tortilla, Marcella Valladolid Corn","Tortilla, Mission Foods Carb Balance Whole Wheat","Tortilla, Mission White Corn","Tortilla, Mission Life Balance Whole Wheat","Tortilla, Mission Yellow (extra Thin) Gluten Free","Tortilla, Presidents Choice (Large)","Tortilla, Mission Yellow Corn (6-in)","Tortilla, Que Pasa Corn","Tortilla, Rudis Gluten Free (plain)","Tortilla, Santa Fe Chopper Wheat","Tortilla, TortillaLand, Gluten-Free Corn","Tortilla, Santa Maria","Tortilla, Trader Joes Reduced Carb Whole Wheat","Tortilla, Tumaros Gourmet (Multi-Grain)","Tortilla, Trader Joes White Corn","Tortilla, Udis Gluten Free","Tortilla, Tumaros Salsa","Tortilla, Weight Watchers 100% Whole Wheat","Tortilla, Whole Wheat Central Market","Tortilla, Whole Wheat- Trader Joes","Tortilla, Whole Wheat Mission","Tortilla, Whole Grain Flour, Trader Joses","Tortilla, Whole Wheat, Xtreme Wellness","Tortilla, Xtreme Wellness Tomato Basil","Tortilla, Xtreme Wellness, Spinach And Herbs","Waffles, Eggo, Whole Grain, Low Fat","Waffles, NutriGrain, Whole Grain","Waffles, Vans Lite 97% Fat-Free","Waffles, Vans Gluten Free","Waffles, Vans Blueberry","Whole Grain Deli Flats (Pepperidge Farms)","Wrap, Farrah Wholemeal Wrap","Wrap, Ezekiel","Whole Wheat English Muffin (Dempsters)","Wrap, FlatOut Foldit-5 Grain Flax","Wrap, Flatout Light Original Flatbread","Wrap, Flatout Italian Herb","Wrap, Flat Out Original","Wrap, Flat Out Sun Dried Tomato","Wrap, Flatout Multi-Grain","Wrap, LBC Mountain Bread Light Barley","Wrap, Ole Mexican Food","Wrap, Trader Joes Clay Oven Bakes Lavash Bread","Wrap, Newburn Bakehouse","Wrap, Tumaro, Whole Wheat (low Carb)","Wrap, Tumaros Whole Wheat Low-Carb (8 In)","Wrap, Tumaros Low-Carb (9 Grain W/ Chia)","Wrap, Tumaros Garden Veggie Wrap","Wrap, Wattle Lite Soft Wrap","Wrap, Wattle Balley","Wrap, Wattle Valley Sourdough","Wrap, Wrap-Itz Gluten Free","Wrap, Weight Watchers","Wraps, Won Ton","Yautia Root","Yams (raw)","Wraps, La Banderita Soft Taco","Yogurt, Grass Fed, Whole Milk","Yogurt, Jalna","Yogurt, Light N Fit Vanilla","Yogurt, Source","Yogurt, Yoplait Light","Arrowhead Mills Rice & Shine Hot Cereal","Bread, Fit & Active","Bread, Ezekiel Prophet’s Pocket Bread","Cream Of Wheat, Bobâ€™s Red Mill Hot Cereal","Flatbread, Flat Out Artisian Thin Crust Rosemary & Olive Oil","Bread, Josephs Flax Oat Bran & Wheat Lavash","Bread, StoneMill Bakehouse, Sprouted 3 Grains & Oatmeal","Oatmeal, Quaker Apples & Cinnamon (low Sugar)","Oatmeal, Quaker Cinnamon & Spice (low Sugar)","Oatmeal, Quaker, Maple & Brown Sugar (low Sugar)","Pasta, Brown Rice Spaghetti, Fit & Active","Pancakes & Waffle Mix, Crunchy Peanut Butter, Kodiak Cakes,","Pancake & Waffle Mix, Full Circle (gluten Free)","Pita, Josephs, Flax Oat Bran & Whole Wheat","Quinoa & Flax, Hodgson Mill, Hot Cereal","Rice Cakes, Sunrice Sea Salt & Balsamic Vinegar","Rice, Brown Y&Y Vermicelli","Rice, Organic Millet & Brown Rice Ramen","Rice, Uncle Bens Red Beans & Rice, Ready Rice","Salsa, Newmans Own Black Bean & Corn","Soup, Roasted Red Pepper & Tomato","Suzies Corn, Quinoa & Sesame Cakes","Tortilla, Fit & Active, Whole Wheat Flour","Wrap, FlatOut Foldit-Rosemary & Olive Oil","Wrap, Flat Out Multi Grain & Flax","Wrap, Superfoods Organic, Chia, Spinach, Kale & Broccoli","Almond Butter, Almond Butter: MaraNatha Natural -Roasted No Sodium","Almond Butter, Barney","Almond Butter, Ds Natural Fluffbutter, Bananas Foster","Almond Butter, Justins Organic Maple","Almond Butter, Ds Natural Fluffbutter, Smores","Almond Butter, Kirkland (creamy)","Almond Butter, MaraNatha Creamy No-Stir","Almond Butter, Justins Vanilla","Almond Butter, MaraNatha Crunchy","Almond Butter, Natural","Almond Butter, MaraNatha Dark Chocolate Almond Spread","Almond Butter, Vermont Champlain Cherry","Almond Butter, Snickerdoodle, Buff Bake","Almond Milk, Unsweetened","Artisana Sesame Tahini","Avocado","Almond Spread, Buff Bake Snickerdoodle","Butter","Butter, Artisans Macadamia","Butter, Cashew","Butter, Country Crock Light","Butter, Lurpak Lighter Slightly Salted Spreadable","Butter, Nature Whipped","Butter, Smart Balance","Cacoa Nibs","Cheese, American (full Fat)","Cheese, Cheddar","Cheese, Cabot Extra Sharp","Cheese, Brie","Cheese, Blue","Cheese, Gouda","Cheese, Gorgonzola","Cheese, Goat","Cheese, Feta","Cheese, Colby Jack","Cheese, Chihuahua Mexican Quesadilla","Cheese, Mozzerella (part Skim)","Cheese, Muenster","Cheese, Natural Valley Goat Mozzarella","Cheese, Kirkland Mexican Blend","Cheese, Jarlsberg Deli Thin Sliced Swiss, Reduced Fat","Cheese, Havarti","Cheese, Natural Valley Goat, Colby Jack","Cheese, Natural Valley Goat, Medium Cheddar","Cheese, Parmesan","Cheese, Pepper Jack","Cheese, Presidents Choice Blue Menu Cream Cheese","Cheese, Provolone","Cheese, Ricotta (Whole)","Cheese, Sargento Colby Jack Sticks","Cheese, Pecorino Romano (shredded)","Coconut Butter, Artisana, Cacao Bliss","Cheese, Tillamook Sharp Cheddar Slices","Coconut Butter","Cheese, Swiss","Coconut Butter, MaraNatha","Coconut Butter, Sweet Spread Maple Pancake","Coconut Butter, Sweet Spread Vanilla Cupcake","Coconut Butter, Sweet Spread White Chocolate","Coconut Butter, Sweet Spreads Chocolate Brownie","Coconut Butter, Nutiva","Coconut Butter, Sweet Spread Cinnamon Roll","Coconut Milk (100%), Aroy-D","Coconut Milk, Thai Kitchen Lite","Coconut, Bobs Red Mill Unsweetened Raw","Coconut, Unsweetened","Coconut, Sprouts, Shredded Light","Cookie Butter","Greek Yogurt, Astro Original","Flour, Almond","Flaxseed, Whole","Egg, Yolk","Cream Cheese, Greek Yogurt (everything Bagel Flavor)","Guacamole, GoodFoods","Hazelnut Butter","Hazelnuts","Hazelnut Butter, Justins Organic Chocolate","Guacamole, Wholly Classic Mini Cup","Kirkland, Natural Peanut Butter Chunky","Hummus, Roasted Red Pepper (Publix)","Hummus, Hannah Classic","Hempseed Butter","Macro Natural Almond Spread","Mayonnaise, Hellmans Light","Mayonnaise, Neal Brother","Milk, So Delicious Unsweetened Coconut","Nuts, Almond","Mayonnaise, Best Foods Light","Nuts, Almond Emerald Cocoa Or Vanilla","Nuts, Almonds Blue Diamond Mocha","Nuts, Almonds Blue Diamond Smokehouse","Nuts, Almonds Blue Diamond Toasted Coconut","Nuts, Brazil","Nuts, Cashew","Nuts, Kirkland Whole Mixed Nuts","Nuts, Almonds Planters Pumpkin Spice","Nuts, Macadamia","Nuts, Pecan","Nuts, Walnut","Oil, Avocado, Avolio (Costco)","Oil, Coconut","Oil, Extra Virgin Olive","Peanut Butter, Adams 100% Natural","Oil, Fish (capsule)","Oil, Flaxseed","Oil, Macadamia","Oil, Udos Choice","Olives","Peanut Butter, Blonde Peanut Butter Cup","Peanut Butter, Crazy Richards","Peanut Butter, Earth Balance Coconut And Peanut Spread","Peanut Butter, Dark Chocolate Dreams By The Peanut Butter Co.","Peanut Butter, Earths Pride Organic Creamy","Peanut Butter, Field Day (crunchy)","Peanut Butter, Jif Natural Creamy","Peanut Butter, Jif Whips Salty Caramel","Peanut Butter, Jif Whips W/ Salted Caramel","Peanut Butter, Jif Whips, Maple Brown Sugar","Peanut Butter, Kraft Cinnamon Granola Raisin","Peanut Butter, Krema Crunchy Natural","Peanut Butter, Justins","Peanut Butter, Maranatha","Peanut Butter, Monkey Butter, Dark Choc Cherry","Peanut Butter, Monkey Butter, White Choc Raspberry","Peanut Butter, Naturally More","Peanut Butter, Natural","Peanut Butter, Naturally Nutty-Mocha PB","Peanut Butter, Naturally Nutty-Chocolate Butter Toffee","Peanut Butter, Parkers","Peanut Butter, PB Crave Choco Choco","Peanut Butter, PB Crave Cookie Nookie","Peanut Butter, PB Crave Razzle Dazzle","Peanut Butter, Pics","Peanut Butter, Sanitarium","Peanut Butter, Smart Balance Creamy","Peanut Butter, Skippy Natural","Peanut Butter, Smuckers Natural","Peanut Butter, Smuckers","Peanut Butter, Trader Joes (Creamy Salted)","Peanut Butter, Tree Of Life (crunchy)","Peanut Butter, Wild Friends, All Natural Honey (crunchy)","Peanut Butter, White Rose (crunchy)","Peanuts, Planters Salted","Pecan Butter, Artisana","Pesto, Three Bridges Superfood Pesto Sauce","Pesto, Green","Pistachios","Power Butter","Pumpkin Seeds, In Shell","Salad Dressing, Caesar (Kens Steakhouse Lite)","Salad Dressing, Opa Greek Yogurt, Feta Dill","Seeds, Sesame (kernels, Dried)","Sour Cream, Daisy","Seeds, Sunflower (kernels, Dried)","Sour Cream, Gay Lea","Sunbutter","Sunflower Seed Butter","Sunflower Seed Butter, Once Again Organic","Sunflower Seeds, Trader Joes, Raw","Turkey Bacon (smoked), Shady Brook Farms","Turkey Bacon, Oscar Mayer (cooked)","Walnut Butter","Yumm! Sauce, Cafe Yumm","Coconut & Peanut Spread, Earth Balance","Nut & Seed Butter, Nuttzo Organic Seven","Peanut Butter, Naturally Nutty â€“ Honey Roasted Cinnamon","Peanut Butter, Krema, Smooth & Creamy","Peanut Butter, Naturally Nutty â€“ Chocolate Cherry","Peanut Butter, Peanut Butter & Co. Cinnamon Raisin Swirl","Peanut Butter, Peanut Butter & Co. Mighty Maple","Peanut Butter, White Chocolate Wonderful By The Peanut Butter & Co","Peanut Spread, Earth Balance, Coconut & Peanut","Apple (with Skin)","Apple (without Skin)","Apples (frozen)","Apricots","Blackberries","Banana","Blueberries","Blueberries (frozen)","Cantaloupe","Casaba Melon","Cherries (red, Sour)","Cherries (sweet)","Clementines","Dates (with Pit)","Figs","Cranberries","Fruit, Giant Brand Tropical Fruit Medley","Grapefruit","Grapes (red Or Green)","Guavas","Honeydew Melon","Kiwi","Kumquats","Lychee","Mango","Mango Chunks, Dole, Frozen","Mango, Trader Joes Frozen Mango Chunks","Mulberries","Nectarines","Orange","Peach","Persimmons (native)","Persimmons (japanese)","Pear (asian)","Pear","Plum","Plantain","Pineapple","Pomegranate","Pumpkin, Canned","Raspberries","Pineapple, Trader Joes Frozen","Tangerine","Strawberries","Rhubarb","Strawberries (frozen)","Watermelon","Salsa, Santa Barbara Mango & Peach","Artisan Gluten Flour","Beef, 95% Lean (cooked)","Beef Stick, Grass Run Farms, Original","Bacon, Coles Australian Shortcut (raw)","Beef, 85% Lean Ground","Beef, 90% Lean","Beef, 92% Lean, Lauras, Cooked","Beef, Canada Safeway Extra Lean","Beef, Eye Fillet (raw)","Beef, 96% Ground Beef (pan Fried)","Beef, Flank Steak","Beef, Ground 93%","Beef, Moose Steak","Beef, New York Strip (lean)","Beef, Rib-Eye Steak","Beef, Morrisons British Lean Diced Casserole (Raw)","Beef, Tenderloin","Beef, Top Sirloin","Beef, Tesco Diced (raw)","Beef, Top Round","Bison, Ground (cooked)","Bison, Top Sirloin","Carbmasters Yogurt","Caribou","Cheese, 2% Cheddar","Cheese, Allegro 16%","Cheese, Cache Valley String Cheese","Cheese, Feta (Fat-Free)","Cheese, Mozzarella Fat-Free","Cheese, Life Time Fat Free All Types","Cheese, Monterrey Jack Cheese (Reduced Fat Organic Valley Brand)","Cheese, Philadelphia Lightest Soft Cheese","Cheese, Ricotta Fat Free (Precious)","Cheese, Rocky Mountain Quark","Cheese, Ricotta Low-Fat (Precious)","Cheese, Skinny Cow Light (Wedge)","Cheese, Valio-Edam 17%.","Chicken Breast, Maple Leaf Nat. Selections Shaved","Chicken Burger, Trader Joes, Chili Lime","Chicken Sausage, Applegate Chicken And Maple","Chicken Sausage, Coleman Organic Spinach Florentine (Costco)","Chicken, Breast","Chicken, Canned (Kirkland)","Chicken, Coleman Links (uncooked)","Chicken, Cutlets Perdue","Chicken, Ground (Smart Chicken Brand)","Chicken, Daily Chef (canned)","Chicken, Ground, Lean","Chicken, Kirkland Chicken Strips (cooked)","Chicken, Land O Frost Premium Oven Roasted Slices","Chicken, Lau Lau","Chicken, Life Smart","Chicken, Oscar Meyer Carving Board (Breast)","Chicken, Sausage","Chicken, Sausage Al Fresco Apple Maple (raw Weight)","Chicken, Sausage-Tecumseh Farms (uncooked)","Chicken, Sunrise Farms Chicken Breast Burger (cooked)","Chicken, Swanson Canned (strained)","Chicken, Tenderloins, Trader Joes","Chicken, Thigh (boneless Skinless)","Chicken, Trader Joes Premium White Chicken In Water (canned)","Chicken, Wing","Chuck Roast, Lean, (raw)","Cottage Cheese, Albertsons (Fat Free)","Cottage Cheese, Beatrice 1%","Cottage Cheese, Borden","Cottage Cheese, Breakstone (2%)","Cottage Cheese, Breakstones (Fat Free)","Cottage Cheese, Breakstone No-Salt (1%)","Cottage Cheese, Bulla (97% FF)","Cottage Cheese, Daily Chef (2%)","Cottage Cheese, Cabot (Fat-Free)","Cottage Cheese, Coles Farmland (Low Fat)","Cottage Cheese, Dairy Farmers","Cottage Cheese, Dairy Farmers Low-Fat","Cottage Cheese, Dairy Farmers","Cottage Cheese, Dairyland (2%)","Cottage Cheese, Dairyland (Dry Curd)","Cottage Cheese, Dairyland 1%","Cottage Cheese, Darigold (2%)","Cottage Cheese, Deans 1%","Cottage Cheese, Friendship (1%)","Cottage Cheese, Great Value (Fat-Free)","Cottage Cheese, Harris Teeter (Low-Fat)","Cottage Cheese, Hiland (2%)","Cottage Cheese, Horizons Organic 2%","Cottage Cheese, Island Farms 1%","Cottage Cheese, Kraft 2%","Cottage Cheese, Kroger Fat Free","Cottage Cheese, Lactaid (1%)","Cottage Cheese, Land O Lakes (1%)","Cottage Cheese, Meadow Gold","Cottage Cheese, Lucerne (Fat Free)","Cottage Cheese, Meijer 1%","Cottage Cheese, Nordica 1%","Cottage Cheese, Nordica Fat-Free","Cottage Cheese, Organic 365 Brand (Fat Free)","Cottage Cheese, Organic Valley (2%)","Cottage Cheese, Sealtest (1%)","Cottage Cheese, Roberts Dairy (Low-Fat)","Cottage Cheese, Shamrock Farms Low Fat","Cottage Cheese, Trader Joes (Fat Free)","Cottage Cheese, Tesco Light Choices","Cottage Cheese, Trader Joes (Non-Fat)","Cottage Cheese, Trader Joes Cottage Cheese, Low Fat, 1.5% Milkfat","Cottage Cheese, Viva Fat-Free","Cottage Cheese, Weight Watchers","Cottage Cheese, Weight Watchers (Low-Fat)","Egg White (large)","Egg Whites, Egg Beaters","Egg White, Muscle Eggs","Egg Whites, Egg Whites International","Egg Whites, Liquid (All Whites)","Egg Whites, Liquid (Daily Chef)","Egg Whites, Liquid (Muscle Egg)","Egg Whites, Liquid (Muscle Egg) Chocolate And Chocolate Caramel","Egg Whites, Liquid (Organic 365)","Egg Whites, Liquid (Organic Valley)","Egg Whites, Liquid (Presidents Choice Blue Menu)","Egg Whites, Naturegg Simply","Egg Whites, Muscle Eggs, Key Lime","Egg, Muscle Egg Whites (Vanilla)","Egg, Whole","Egg, Whites (Golden Egg)","Elk (raw)","Eggs, Kirkland Real Egg Product","Goat Milk, Redwood Hill Farm","Greek Yogurt, Activia (2%)","Greek Yogurt, Anchor","Greek Yogurt, Chobani (Fat-Free)","Greek Yogurt, Black Swan (Fat-Free)","Greek Yogurt, Dannon (Fat-Free)","Greek Yogurt, Fage (Fat-Free)","Greek Yogurt, Fage 2%","Greek Yogurt, Farmers Union (Light)","Greek Yogurt, Fred Meyer Light","Greek Yogurt, Greek Gods 0%","Greek Yogurt, Giant Eagle (0% Fat)","Greek Yogurt, Hy-vee Plain (fat Free)","Greek Yogurt, Kirkland Signature (Plain/Fat-Free)","Greek Yogurt, Kroger (0%)","Greek Yogurt, Liberte (Low-Fat)","Greek Yogurt, Liberte Blueberry (0%)","Greek Yogurt, Liberte (lactose Free)","Greek Yogurt, Nostimo Nonfat","Greek Yogurt, Liberte Organic (Fat-Free)","Greek Yogurt, Oikos (Fat-Free)","Greek Yogurt, Olympic Krema (fat Free, Plain)","Greek Yogurt, Oikos 0% Fat, Vanilla","Greek Yogurt, Presidents Choice (0%)","Greek Yogurt, Siggis (Fat-Free)","Greek Yogurt, Skotidakis 0% Plain","Greek Yogurt, Trader Joes (Non-Fat)","Greek Yogurt, Trader Joes (Fat Free)","Greek Yogurt, Voskos (Fat-Free)","Ham, Applegate Black Forest","Greek Yogurt, Yoplait (0%)","Ground Turkey, Lilydale, Extra Lean","Ham, Kirkland Extra Lean (sliced)","Ham, Boars Head Tavern","Ham, Kirkland Smoked Black Forest","Ham, Maple Leaf Natural Selections, Smoked Black Forest","Ham, Oscar Meyer Deli Slices","Ham, Pillers Black Forest Deli","Ham, Pillers Simply Free Smoked Breakfast","Ice Cream, Cool Whey","Jerky, Jack Links","Jerky, Caveman Chicken, Chipotle Honey","Jerky, Turkey Perky","Kanga Bangas","Kangaroo Filet (raw)","Kangaroo Mince (raw)","Kangaroo Steak (raw)","Kangaroon Roasts (raw)","Moose","Lamb, Lean Heartsmart (raw)","Liberte Quark","Octopus","Ostrich, Ground","Ostrich, Steak","Pepperoni, Applegate Naturals Uncured Turkey","Pasta, Black Bean Spaghetti (dry)","Pork, Boneless Center Cut Lean","Pork, Ham (cooked)","Pork, Oscar Meyer Carving Board Ham","Pork, Canadian Bacon Slices, Land-O-Frost","Pork, Pork Chops, Roseland Boneless (raw)","Pork, Sirloin Tip Roast - 98% Fat-free (Kirkland)","Pork, Tenderloin","Pork, Oscar Meyer Carving Board Pulled Pork","Protein Powder, 1st Phorm, Formula-1 Looped Fruit","Protein Powder, 365 Whey Chocolate","Protein Powder, About Time 100% Whey Protein Isolate (all Flavours)","Protein Powder, 310 Shake","Protein Powder, 365 Whey Vanilla","Protein Powder, 4everfit Fruit Blast Isolate","Protein Powder, About Time Casein, Chocolate","Protein Powder, Amplify XL Double Chocolate Explosion","Protein Powder, Allmax Isoflex Whey (all Flavors)","Protein Powder, Advocare","Protein Powder, About Time Casein, Peanut Butter","Protein Powder, Alkaline Extreme Whey","Protein Powder, Annex Elite Gold, Chocolate Peanut Butter","Protein Powder, Arbonne","Protein Powder, Balance Vanilla Whey","Protein Powder, Beverly International Muscle Provider","Protein Powder, Amplify XL Strawberry Slam","Protein Powder, Beverly International Ultimate Muscle Protein","Protein Powder, Beverly International Ultimate Muscle Provider","Protein Powder, Big Bitch Formula","Protein Powder, Bio Trust Protein Blend","Protein Powder, BioFlex Hydroflex","Protein Powder, Biochem Whey","Protein Powder, BioFlex Biofurnace","Protein Powder, BioX Protein Fusion","Protein Powder, BioX Power Whey Isolate","Protein Powder, BioFlex Proflex","Protein Powder, Biotrust, Low Carb","Protein Powder, Bluebonnet Whey Isolate","Protein Powder, Body Nutrition, Gardenia Choc. Cacao","Protein Powder, Body Fortress Vanilla","Protein Powder, Body Basix Isolate (Chocolate)","Protein Powder, Body Nutrition, Gardenia Vanilla Bean","Protein Powder, Body Tech Whey Tech","Protein Powder, BodyTech, Rich Chocolate","Protein Powder, BRNG Proto Whey","Protein Powder, BodyTech PrimalPro, Chocolate","Protein Powder, BPI Sports Whey-HD","Protein Powder, BSN Lean Dessert Banana Nut","Protein Powder, BSN-Syntha 6 Isolate","Protein Powder, Captain Anabolic Pro Peptide R22","Protein Powder, Bulk Nutrients WPC Strawberry And Banana","Protein Powder, Bulk Nutrients WPC Chocolate","Protein Powder, Bulk Nutrients WPC Vanilla","Protein Powder, Cell Biology, Chocolate","Protein Powder, Cellucor Cor Performance, Cookies N Cream","Protein Powder, Cellucor Cor-Performance Whey","Protein Powder, Cellucor, Peanut Butter Marshmallow","Protein Powder, Champion Cookies And Cream Pure Whey","Protein Powder, Clutch Bodyshop","Protein Powder, Core Pro, Peanut Butter Ice Cream","Protein Powder, Creamy Choc Fudge (plant)","Protein Powder, DaVinci Chocolate Whey","Protein Powder, DeNovo Nutrition Max MPS Pure Whey Protein Isolate","Protein Powder, Dales Raw Foods","Protein Powder, Cytosport","Protein Powder, Designer Whey Natural","Protein Powder, Diesel Nutrition Banana Flavor","Protein Powder, Dot Fit Whey Smooth-Chocolate","Protein Powder, Diesel, Vanilla","Protein Powder, Dream Protein","Protein Powder, Dymatize Elite Vanilla","Protein Powder, Dymatize Elite Casein Cookies N Cream","Protein Powder, Dymatize Blueberry Muffin","Protein Powder, Dymatize Elite, Pina Colada","Protein Powder, Dymatize Elite, Cinnamon Bun","Protein Powder, Dymatize Elite, Chocolate Cake Batter","Protein Powder, Dymatize Elite Whey (Chocolate Fudge)","Protein Powder, EAS Whey (Vanilla)","Protein Powder, Dynamite ISO 100, Gourmet Chocolate","Protein Powder, Dymatize Nutrition Elite XT (Rich Chocolate)","Protein Powder, Dymatize ISO","Protein Powder, Elite Whey Protein Isolate (chocolate Mint)","Protein Powder, EvoChem Hydropro","Protein Powder, EX-2","Protein Powder, Extreme Mass (Strawberry)","Protein Powder, Gemma Pea Isolate","Protein Powder, Giant Sports (chocolate)","Protein Powder, Garden Of Life Raw","Protein Powder, GNC 100% Casein","Protein Powder, Gladiator By Smoothie King","Protein Powder, GNC Performance Pro 100% Whey Vanilla","Protein Powder, GNC Whey ISO Burst Protein Powder, Vanilla","Protein Powder, GNC Amplified Wheybolic","Protein Powder, GNC Whey Isolate","Protein Powder, Go Vita Whey Isolate","Protein Powder, Goldtouch Whey Vanilla","Protein Powder, Growing Naturals Pea Original","Protein Powder, Growing Naturals Rice Vanilla","Protein Powder, Growing Naturals Rice Chocolate","Protein Powder, Harmonized Vegan","Protein Powder, Harmonized","Protein Powder, Healthy N Fit 100% Egg","Protein Powder, HPN ProZero, Chocolate","Protein Powder, Hit, Core Evolution","Protein Powder, Heartland Gold Sprouted Brown Rice","Protein Powder, Intek (all Flavors)","Protein Powder, Interactive Absolute Vegetarian","Protein Powder, HPN ProZero, Vanilla","Protein Powder, Intek Evolution","Protein Powder, IntraPro Whey Isolate","Protein Powder, IronVegan, Sprouted Protein (vanilla)","Protein Powder, Isagenix IsaPro Whey","Protein Powder, ISO XP-Whey Isolate Vanilla","Protein Powder, ISO-95 Caruso Fitness Nutrition, Vanilla","Protein Powder, Isoflex","Protein Powder, Isology All Flavours","Protein Powder, Isofusion Vanilla Ice Cream","Protein Powder, Isomorph 28 Chocolate","Protein Powder, Isopure LowCarb Dutch Chocolate","Protein Powder, Isopure Zero Carb Creamy Vanilla","Protein Powder, Jay Robs","Protein Powder, Isopure Natural Chocolate","Protein Powder, Labrada Lean Body For Her Isolate (vanilla)","Protein Powder, Kaizen","Protein Powder, Jay Robb Egg White -All Flavors","Protein Powder, Lean Fit, Chocolate","Protein Powder, Lifetime Lifes Basic Vanilla","Protein Powder, Lifetime Fitness","Protein Powder, Lifetime Whey Isolate","Protein Powder, Magnum Quattro (chocolate)","Protein Powder, Manitoba Harvest Hemp","Protein Powder, Market Pantry Chocolate","Protein Powder, Maxs Super Whey (Banana)","Protein Powder, Mediclear Plus","Protein Powder, Metabolic Drive","Protein Powder, Metagenics Unipro","Protein Powder, MGN Cake Batter","Protein Powder, Maxx Essentials","Protein Powder, MHP Paleo Protein, Triple Chocolate","Protein Powder, MGN Premium Protein Blend","Protein Powder, MRM Veggie Elite- Chocolate Mocha","Protein Powder, MRM Whey","Protein Powder, MMI Premium Whey","Protein Powder, MRM Whey (rich Vanilla)","Protein Powder, MTS, Apple Pie","Protein Powder, MRMs Veggie Protein (Chocolate)","Protein Powder, MTS, Cinnagram","Protein Powder, MTS Nutrition","Protein Powder, MTS, Pumpkin Pie","Protein Powder, Muscle Max Maxpro","Protein Powder, MTS, Red Velvet","Protein Powder, Muscle Max Whey","Protein Powder, Muscle Milk Protein Plus","Protein Powder, Musclefeast Whey Isolate Chocolate","Protein Powder, Musclepharm, Chocolate Peanut Butter","Protein Powder, Musclepharm, Strawberry Cheesecake","Protein Powder, Muscletech 100% Whey","Protein Powder, Musclepharm Combat Powder","Protein Powder, Muscletech Anabolic Halo Chocolate","Protein Powder, Myofusion (Probiotic Version)","Protein Powder, Myofusion Advanced","Protein Powder, Myofusion (old Version-all Flavours)","Protein Powder, Mutant IsoSurge Birthday Cake","Protein Powder, Myofusion Elite","Protein Powder, Natural Whey Isolate","Protein Powder, Natera Hemp","Protein Powder, Myprotein Power, Chocolate","Protein Powder, Natures Best JavaPro (French Vanilla)","Protein Powder, New Solutions Nutrition, Chocolate","Protein Powder, Nitro Peak","Protein Powder, Nitro Pro Whey Isolate","Protein Powder, NLA Her Whey","Protein Powder, NNW Healthy Whey","Protein Powder, North Coast Naturals, 100% Iso, Chocolate","Protein Powder, NOW Pea","Protein Powder, NOW Whey Pure Isolate","Protein Powder, NRG-X Sublime Chocolate Chip","Protein Powder, NutriBiotic Rice Protein","Protein Powder, Nutrition Direct Whey","Protein Powder, Nytrowhey Ultra Elite-Chocolate","Protein Powder, Optimum Nutrition 100% Gold Standard Whey, Chocolate","Protein Powder, Optimum Nutrition 100% Standard Whey, Double Chocolate","Protein Powder, Optimum Nutrition 100% Whey Gold Standard","Protein Powder, Optimum Nutrition Chocolate Egg White","Protein Powder, Optimum Nutrition Casein","Protein Powder, Optimum Nutrition Gold Standard Whey","Protein Powder, Optimum Nutrition Performance Whey","Protein Powder, Optimum Nutrition, Platinum Hydro Whey","Protein Powder, Optimum Nutrition Platinum Tri-celle Casein Chocolate Decadence Flavor","Protein Powder, Optimum Whey","Protein Powder, Orgain, Organic Creamy Chocolate (plant Based)","Protein Powder, PES Select","Protein Powder, PEScience, Blondie","Protein Powder, PEScience, Cookies N Cream","Protein Powder, PEScience, Peanut Butter Cup","Protein Powder, PHD Whey","Protein Powder, PHD Diet Whey","Protein Powder, PhD Pharma Pure","Protein Powder, Pierce Performance Nutrition Vanilla","Protein Powder, Phoenix Rising","Protein Powder, Plant Fusion","Protein Powder, Power Whey Isolate","Protein Powder, Precision Engineer Whey","Protein Powder, Pro V 60","Protein Powder, Professional Whey Micellar Casein","Protein Powder, Professional Whey WPI","Protein Powder, Progressive Organics, Brown Rice, Natural Vanilla","Protein Powder, ProJym Chocolate Cookie Crunch","Protein Powder, ProJym Cookies And Cream","Protein Powder, Promasil","Protein Powder, Protizyme","Protein Powder, Pure Protein","Protein Powder, PurePaleo Chocolate","Protein Powder, Pure Protein Natural Whey (Chocolate)","Protein Powder, PVL Iso Sport Whey, Vanilla","Protein Powder, PVL Isogold, Cookies And Cream","Protein Powder, PVL Whey Gourmet - Peanut Butter Chocolate","Protein Powder, Quest Cookies And Cream","Protein Powder, Quest Multi Purpose Mix","Protein Powder, Quest Peanut Butter","Protein Powder, Quest Salted Caramel","Protein Powder, Quest, Chocolate Milkshake","Protein Powder, Quest, Vanilla Milkshake","Protein Powder, Reflex Instant Whey PRO","Protein Powder, Reserveage Grass Fed Whey Protein (Chocolate)","Protein Powder, Revolutionary Nutrition Bionic Edge Whey","Protein Powder, RSP Nutrition, Vanilla Whey","Protein Powder, Scivation Whey","Protein Powder, Shakeology Chocolate","Protein Powder, SNI, Pro Whey PW-30","Protein Powder, Spiru-Tein, French Vanilla","Protein Powder, Sun Warrior","Protein Powder, Sunwarrior, Warrior Blend, Vanilla","Protein Powder, Syntrax Nectar","Protein Powder, Syntha-6","Protein Powder, Teras Whey","Protein Powder, Teras Whey, Chocolate (grass Fed)","Protein Powder, Tested Nutrition - Chocolate","Protein Powder, Titan Complete Nutrition","Protein Powder, True Nutrition Vegan","Protein Powder, True Protein Whey Protein Isolate Cold-Filtration. Unflavored/unsweetened","Protein Powder, Trutein Pumpkin Pie","Protein Powder, Trutein, Banana Cream","Protein Powder, Trutein, Choc Truffle","Protein Powder, Trutein, Chocolate Mint","Protein Powder, Trutein, Chocolate PB Cup","Protein Powder, Trutein, Cinnabun","Protein Powder, Trutein, Lemon Meringue Pie","Protein Powder, Trutein, Mocha Caramel","Protein Powder, Trutein, Orange Creamsicle","Protein Powder, Trutein, PB Marshmallow Cookie","Protein Powder, Trutein, Red Velvet","Protein Powder, Trutein, Smores","Protein Powder, Trutein, Shamrock Shake","Protein Powder, Trutein, Vanilla","Protein Powder, Ultimate Nutrition Bioactive Whey Sensation 81","Protein Powder, Ultimate Nutrition Iso Sensation","Protein Powder, USN Ultra Whey -100 Premium","Protein Powder, Vega One","Protein Powder, Vega Sport","Protein Powder, VP2","Protein Powder, Vega One Nutritional Shake","Protein Powder, V-Core Complete Nutrition","Protein Powder, Warrior Blend, Vanilla","Protein Powder, Whey Gourmet","Protein Powder, Woman Incredible","Protein Powder, Wheyology All Flavours","Protein Powder, VPX Zero Carb","Ricotta Cheese, Sargento Fat-Free","Sausage, Jimmy Dean","Seafood, Ahi Tuna Sashimi (uncooked)","Seafood, Barramundi","Seafood, Catfish Fillets (Delta Pride)","Seafood, Crab","Seafood, Cod","Seafood, Crawfish (cooked)","Seafood, Flathead","Seafood, Haddock","Seafood, Grouper (cooked)","Seafood, Lobster","Seafood, Kirkland Wild Alaska Sockeye Salmon (canned)","Seafood, Halibut","Seafood, Hake (uncooked)","Seafood, Orange Roughy","Seafood, Monkfish (cooked)","Seafood, Mahi Mahi Grande Gourmet Burger","Seafood, Mahi Mahi","Seafood, Mahi Burger Inland Market","Seafood, Oysters (Raw)","Seafood, Pacific Salmon (raw)","Seafood, Perch","Seafood, Pollock","Seafood, Salmon (Atlantic/Wild)","Seafood, Raincoast Skipjack Tuna (drained)","Seafood, Salmon Pate (John West)","Seafood, Salmon Burger (Alaskan), Trident","Seafood, Salmon (pink, Canned, Bumble Bee Brand)","Seafood, Salmon-Lomi (raw)","Seafood, Salmon, 365 Alaskan Wild (canned)","Seafood, Salmon, Atlantic, Farmed (cooked","Seafood, Sardines, In Extra Virgin Olive Oil","Seafood, Sashimi, Salmon","Seafood, Scallops","Seafood, Sea Bass","Seafood, Snapper","Seafood, Shrimp","Seafood, Sole/Flounder","Seafood, Squid Calamari (uncooked)","Seafood, Swai","Seafood, Tuna Pate (John West)","Seafood, Tilapia","Seafood, Tuna (Yellowfin)","Seafood, Trout","Seafood, Tilefish (cooked)","Turkey Bacon, Columbus","Turkey Bacon, Butterball Fully Cooked","Spiru-Tein Unsweetened (all Flavors)","Seafood, Wild Swordfish Steaks - Whole Catch Brand (from Whole Foods) -","Seafood, Tuna, Canned","Seafood, Tuna Wild Planet Wild Albacore","Turkey Breast, Market Pantry, Oven Roasted Slices","Turkey Breast, Kirkland Oven Browned","Turkey Breast, Butterball Oven Roasted Slices","Turkey Breast, Artisan Slow Roasted","Turkey Bacon, Mattessons Smoked Turkey Rashers (2 Rashers)","Turkey Breast, Oven Roasted (Lillydale)","Turkey Burger, Metro","Turkey Breast, Shady Brook Farms","Turkey Burger, Fresca Naturals","Turkey Burger, Marc Angelo (raw)","Turkey Burger, Perdue 93% Lean","Turkey Ham, Jennie-O","Turkey Pepperoni, Kroger (low Fat)","Turkey Pepperoni, Butterball","Turkey Pepperettes","Turkey Sausage, Applegate, Naturals Savory","Turkey Slices, Applegate","Turkey, Applegate Natural Breast","Turkey Sausage, Marc Angelo Extra Lean","Turkey, Bacon LillyDale Extra Lean","Turkey, Applegate Naturals Uncured Turkey Bacon","Turkey, Boars Head, All Types (oven Roasted, Smoked, Etc)","Turkey, Boarshead All Natural Smoked Breast","Turkey, Burger (Kirkland)","Turkey, Burger Butterball","Turkey, Crumbles, Jimmy Dean","Turkey, Cutlets (Butterball)","Turkey, Cutlets-Honeysuckle White Boneless 99% Fat-Free","Turkey, El Pozo Breast","Turkey, Fresh Creations Sausage","Turkey, Breast","Turkey, Ground, 93% Fat-Free","Turkey, Grimms Farmer Sausage","Turkey, Ground Butterball 98% Lean","Turkey, Ground, Kirkland And Presidents Choice Lean (raw Weight)","Turkey, Ground, 99% Fat-Free","Turkey, Ground, 97% Fat-Free","Turkey, Jennie O Smoked Breast","Turkey, Jenni-O Extra Lean Bacon","Turkey, Jenni-O Thick Cut Bacon","Turkey, Jennie-O (60% Less Fat) Bacon","Turkey, Jennie-O All Natural 95/5 Burger","Turkey, Jennie-O Lean Ham","Turkey, Kirkland Burger (raw)","Turkey, Jennie-O, Mild Breakfast Sausage","Turkey, Jimmy Dean Sausage","Turkey, Kielbasa, Hillshire Farms","Turkey, Lean Bratwurst","Turkey, Lean N Fit Bacon","Turkey, Pepperoni Slices (70% Less Fat)","Turkey, Lily Dale Daystarters Extra Lean Bacon","Turkey, Maple Leaf Natural Selection, Hickory Smoked","Turkey, Oscar Meyer Carving Board Breast","Turkey, Life Smart","Turkey, Presidents Choice Blue Menu Bacon","Turkey, Prime Extra Lean","Turkey, Trader Joes 94% Fat Free Bacon","Veal Cutlets (cooked)","Veal, Cubed (raw)","Venison, Ground 80/20 (venison/beef)","Venison (deer Loin-lean)","Yeast, Whole Foods","Cheese, Lifetime JalapeÃ±o Jack (Fat-Free)","Cheese, Black Diamond String","Chicken, Perdue Fit & Easy Extra Lean Ground (cooked)","Chicken, Boars Head Blazing Buffalo® Style Roasted","Cottage Cheese, Bison Fat-Free","Chips, Quest Protein, All Flavors (BBQ, Sea Salt, Cheddar Sour Cream, Sour Cream & Onion)","Cottage Cheese, Flair","Cottage Cheese, Daisy (Low-Fat)","Cottage Cheese, Kraft Fat-Free","Cottage Cheese, Michigan","Cottage Cheese, Nancy’s Organic Cultured Low Fat","Greek Yogurt, Fage Total, Plain (full Fat)","Greek Yogurt, HEB (Fat-Free)","Protein Powder, MTS, Mint Cookies & Cream","Protein Powder, Isopure Zero Carb Cookies & Cream","Protein Powder, Elite Whey & Casein Blend","Protein Powder, MTS, PB Cookies & Cream","Protein Powder, Muscleology Nitro-Pro Cookies & Cream","Protein Powder, MyProtein True Whey Cookies & Cream","Protein Powder, Quest, Strawberries & Cream","Seafood, Salmon, Bear & Wolf (canned)"],
				maxItems:100
				});
				var oa = new Awesomplete(output, {
				list: [],
				maxItems:100
				});

				var check = {"Almond Milk, Long Life":"Carbs","Alvarado Sprouted Multigrain Bread":"Carbs","Amaranth - Arrowhead Mills Organic Whole Grain":"Carbs","Barley, Bobs Red Mill (dry)":"Carbs","Bean Threads, Lungkow":"Carbs","Beans, Black, Eden Organic (canned)":"Carbs","Beans, Bushs Cannellini White Kidney Beans":"Carbs","Beans, Bushs Reduced Sodium Black Beans":"Carbs","Beans, Goya Black Beans":"Carbs","Beans, Pinto, Fat Free":"Carbs","Beans, Red Kidney (Publix)":"Carbs","Beans, Kidney Bushs Reduced Sodium":"Carbs","Beans, Kidney, Eden Organic No Salt Added (canned)":"Carbs","Beans, Navy":"Carbs","Beans, Refried Black Beans, Fat Free":"Carbs","Beans, Refried Black Casa Fiesta -low Fat":"Carbs","Beans, Trader Joes Black Beans":"Carbs","Bobs Red Mill Organic Oat Bran":"Carbs","Bobs Red Mill Mighty Tasty Hot Cereal":"Carbs","Beets":"Carbs","Bobs Red Mill Organic Steel Cut Oats":"Carbs","Bobs Red Mill Organic Oat Groats":"Carbs","Bread, 365 Organic Pizza Crust, Whole Wheat":"Carbs","Bread, Arnold Sandwich Thins":"Carbs","Bread, Bakestone Bros Multigrain Thin Bun":"Carbs","Bread, Burgen Fruit Toast":"Carbs","Bread, Daves Killer Bread":"Carbs","Bread, Dempsters Boost My Protein":"Carbs","Bread, Canyon Bakehouse, 7-Grain (gluten Free)":"Carbs","Bread, English Muffin, Tiptop":"Carbs","Bread, Ezekiel Muffin":"Carbs","Bread, Ezekiel 4:9 Sprouted English Muffin":"Carbs","Bread, Dempsters No Sugar":"Carbs","Bread, Ezekial":"Carbs","Bread, Kangaroo Salad Pockets":"Carbs","Bread, Helgas Rye":"Carbs","Bread, Food For Life, Multi-See Rice Bread":"Carbs","Bread, Food For Life, Brown Rice (gluten Free)":"Carbs","Bread, Flat Out Thin Crust Flatbread":"Carbs","Bread, Little Big Bread":"Carbs","Bread, Molenburg Wholemeal":"Carbs","Bread, Multigrain Gluten-Free, Essential Baking Co":"Carbs","Bread, Natures Own 100% Whole Wheat":"Carbs","Bread, Orowheat Pocket Thins Flatbread":"Carbs","Bread, Rudis Gluten Free Multigrain":"Carbs","Bread, Orowheat Sandwich Thins, Honey Wheat":"Carbs","Bread, Pepperidge Farm Pumpkin Spice Swirl":"Carbs","Bread, Rudolphs Bavarian Multi Grain":"Carbs","Bread, Sara Lee (45 Cal)":"Carbs","Bread, Trader Joes, Multigrain Slims":"Carbs","Bread, Thomas Pumpkin Spice English Muffin":"Carbs","Bread, Three Grain, Mestemacher":"Carbs","Bread, Warburtons Seeded":"Carbs","Bread, Udis Whole Grain Gluten Free":"Carbs","Bread, Whole Grain PC Blue Menu PC Thins":"Carbs","Bread, Wasa Light Rye Crisp":"Carbs","Buckwheat":"Carbs","Buckwheat Soba Noodles":"Carbs","Bulgar Wheat (boiled)":"Carbs","Bulgur, Bobs Red Mill (cooked)":"Carbs","Cereal-Corn Flakes":"Carbs","Carrots":"Carbs","Cereal, Cheerios, Uncle Tobys (Australia)":"Carbs","Cereal-Kix":"Carbs","Cereal, Chex Mix Traditional":"Carbs","Cereal, Ezekiel 4:9 Sprouted Whole Grain":"Carbs","Cereal, Fiber One":"Carbs","Cereal, Kelloggs All-Bran Buds":"Carbs","Cereal, Kind Cinnamon Oat Clusters":"Carbs","Cereal, Manischewitz Creamy Hot Wheat":"Carbs","Cereal, Natures Path Organic Kamut Puffs":"Carbs","Cereal, Quaker Oatmeal Squares":"Carbs","Chia Seeds":"Carbs","Cereal, Shredded Wheat Kellogs Mini Wheats (Unfrosted)":"Carbs","Cereal, Shredded Wheat":"Carbs","Chickpeas":"Carbs","Coconut Flour, Tiana":"Carbs","Coconut Chips, Creative Snack Co., Organic Toasted":"Carbs","Coconut Chips, C20 Baked":"Carbs","Chips, Popped Quaker, Blackberry Pomegranate":"Carbs","Chickpeas, PC Organics":"Carbs","Cous Cous, Lundberg Plain Brown Rice (DRY)":"Carbs","Cous Cous, Far East Herbed Chicken (with Water Only) Cooked)":"Carbs","Cous Cous":"Carbs","Cous Cous, Manitou Mediterranean Blend":"Carbs","Corn (yellow, Canned)":"Carbs","Corn Thins, Multigrain (Real Foods Brand)":"Carbs","Crackers, Food Should Taste Good, Roasted Red Pepper Brown Rice":"Carbs","Cream Of Wheat":"Carbs","Crackers, Miltons, Everything":"Carbs","Cream Of Rice":"Carbs","Cream Of Wheat, Whole Grain":"Carbs","English Muffin, Oakrun Farm Whole Grain":"Carbs","English Muffin, Genius (gluten Free)":"Carbs","English Muffin, Healthy Life Multi Grain":"Carbs","English Muffin, Old Mill Vieux Moulin":"Carbs","English Muffin, Thomas Light Multi Grain":"Carbs","English Muffin, Tip Top Wholemeal":"Carbs","English Muffins, Food For Life 100% Flourless Sprouted Whole Grain":"Carbs","Farina, Bobs Red Mill":"Carbs","Flat Bread, Joseph Multi Grain":"Carbs","Farro, Cooked":"Carbs","Flat Bread, Mountain Bread Organic":"Carbs","Flatbread, Flat Out Artisian Thin Crust Spicy Italian":"Carbs","Flat Bread, Trader Joes, Gluten Free":"Carbs","Flour, Kuttu":"Carbs","Flour, Coconut-Bobs Red Mill":"Carbs","Flatbread, Flat Out Artisian Thin Pizza Crust, Rustic White":"Carbs","Granola, Bear Naked Fit":"Carbs","Freekeh (cooked)":"Carbs","Granola, Five Grain (Hazelnut Honey)":"Carbs","Granola, Nature Valley Protein (Cranberry Almond)":"Carbs","Greek Yogurt, Chobani Almond Coco Loco":"Carbs","Greek Yogurt, Chobani With Pineapple":"Carbs","Greek Yogurt, Chobani Simply 100 (all Flavors)":"Carbs","Grits":"Carbs","Greek Yogurt, Oikos 2% Vanilla":"Carbs","Greek Yogurt, Kirkland (Fat Free Fruit Flavoured)":"Carbs","Grits, Corn":"Carbs","Honeyville Oat FIber":"Carbs","Lavash, Trader Joes Oven Baked Whole Wheat":"Carbs","Kasha, Wolffs":"Carbs","Lentils, Black Beluga, Archer Farms":"Carbs","Kasha, Shiloh Farms Organic":"Carbs","Jicama":"Carbs","Lavash, California Lavash Whole Grain":"Carbs","Lentils, Goya":"Carbs","Lentils, Kroger":"Carbs","Lentils, Madras Lentils, Tasty Bite":"Carbs","Malt-O-Meal (dry)":"Carbs","Lentils, Red, Dry (cooked)":"Carbs","Matzo Farfel, Streits":"Carbs","Matzo Meal, Manischewitz, Whole Grain":"Carbs","Matzo, Manischewitz Organic Spelt":"Carbs","Matzos, Streits Whole Wheat":"Carbs","Milk, Skim DLite":"Carbs","Milk, Cows Grass Fed":"Carbs","Matzos, Manischewitz, Whole Wheat":"Carbs","Millet Grits, Bobs Red Mill (dry)":"Carbs","Oat Bran, Hodgeson Mills":"Carbs","Oat Bran, Bobs Red Mill High Fiber Hot Cereal":"Carbs","Muffin, Thomas Hearty Multi-Grain":"Carbs","Oat Bran, Quaker":"Carbs","Oat Bran, Old Wessex":"Carbs","Oat Bran, Trader Joes":"Carbs","Oat Bran, Whole Foods Organic":"Carbs","Oat Flour, Bobs Red Mill":"Carbs","Oatcakes, Narnins":"Carbs","Oatmeal, Old Fashioned":"Carbs","Oatmeal, Better Oats-Oat Revolution Maple And Brown Sugar":"Carbs","Oatmeal, Only Oats":"Carbs","Oats, Bobs Red Mill (Extra Thick)":"Carbs","Oatmeal, Steel Cut":"Carbs","Oatmeal, Simple Truth Organic, Instant Original":"Carbs","Oats, Gluten Free-Trader Joes":"Carbs","Oats, Bobs Red Mill Quick Cooking Rolled":"Carbs","Oats, Bobs Red Mill Steel Cut (Gluten Free)":"Carbs","Oats, Bobs Red Mill, Quick Cooking Oats, Gluten Free":"Carbs","Oats, Trader Joes Quick Cook (Steel Cut)":"Carbs","Pancake Mix, Bobs Red Mill Gluten Free":"Carbs","Pancake Mix, Bobs Red Mill":"Carbs","Pancake Mix, Flap Jacked":"Carbs","Pancake Mix, Kodiak Cakes, Crunchy Peanut Butter":"Carbs","Pancake Mix, Hungry Jack Funfetti":"Carbs","Pancake Mix, Kodiak Cakes, Whole Wheat And Honey":"Carbs","Pancake Mix, Pamelas Gluten Free":"Carbs","Pancake Mix, Power Cakes (KodiakCakes)":"Carbs","Pancake/Waffle Mix, Birch Benders":"Carbs","Pasta, Barilla Plus Multigrain":"Carbs","Parsnips (raw)":"Carbs","Pasta Sauce-Tomato Based":"Carbs","Pasta, Brown Rice, Timkyada":"Carbs","Pasta, Barilla Whole Grain Penne":"Carbs","Pasta, Dreamfield Low Carb":"Carbs","Pasta, Ezekiel Sprouted Grain Spaghetti":"Carbs","Pasta, Chickpeas, Banza":"Carbs","Pasta, Jovial Brown Rice Pasta":"Carbs","Pasta, Jovial Whole Grain Pasta":"Carbs","Pasta, Lundberg Brown Rice Pasta (organic)":"Carbs","Pasta, No Yolk":"Carbs","Pasta, Quinoa, Ancient Harvest (dry)":"Carbs","Pasta, Rice Noodles LungKow Vermicelli (cooked)":"Carbs","Pasta, Organic Red Lentil Penne, Tolerant":"Carbs","Pasta, Ronzoni 150 (dry)":"Carbs","Pasta, Rizopia, Rice Spaghetti Pasta (dry)":"Carbs","Pasta, San Remo Cannelloni":"Carbs","Pasta, Simple Truth, Organic Whole Wheat Spaghetti (dry)":"Carbs","Pasta, Vermicelli":"Carbs","Peanut Spread, Nuts N More Toffee Crunch":"Carbs","Peas (canned)":"Carbs","Pita, Damascus":"Carbs","Peas, Black Eyed, Kroger (uncooked)":"Carbs","Pita, Josephs Pita Bread":"Carbs","Pita, Hannas Whole Wheat":"Carbs","Pita, Josephs- Flax Oat Bran And Whole Wheat":"Carbs","Pita, Toufayan Bread (White)":"Carbs","Plantains (raw)":"Carbs","Pocket Thin, Orowheat 8 Grain":"Carbs","Poi (cooked)":"Carbs","Popcorn, Orville Redenbacher (original Kernels, Unpopped)":"Carbs","Polenta (dry)":"Carbs","Popcorn, Skinny Pop":"Carbs","Potaotes OBrien, Ore Ida":"Carbs","Potato, Little Potato Company- Little Charmers":"Carbs","Potato, New Baby":"Carbs","Potato, Red":"Carbs","Potato, Oriental Japanese Sweet":"Carbs","Potato, Ruby Lou":"Carbs","Potato, Russet":"Carbs","Potato, Russet Ore Ida":"Carbs","Potato, Simply Potatoes Shredded Hash Browns":"Carbs","Potato, Sweet":"Carbs","Potato, Sweet Mc Cain":"Carbs","Potato, Yukon Gold":"Carbs","Potato, Sweet Ore Ida":"Carbs","Potatoes, Ore Ida Hash Browns":"Carbs","Potatoes, Safeway Kitchens Country Style Hash Browns":"Carbs","Puffed Corn, Arrowhead Mills":"Carbs","Potatoes, Trader Joes Frozen Hashbrowns":"Carbs","Pumpkin":"Carbs","Quinoa":"Carbs","Quinoa Flakes":"Carbs","Quinoa Macaroni, GoGo Quinoa":"Carbs","Quinoa, Ancient Harvest Flakes":"Carbs","Quinoa, Ancient Harvest Pasta (dry)":"Carbs","Quinoa, Bobs Red Mill (dry)":"Carbs","Quinoa, Roland (DRY)":"Carbs","Quinoa, Roland Garden Vegetable (dry)":"Carbs","Rice And Beans, Eden Organic Cajun (canned)":"Carbs","Quinoa, Roland Roasted Garlic (dry)":"Carbs","Rice And Beans, Eden Organic Carribean (canned)":"Carbs","Rice Cake, Butter Toffee":"Carbs","Rice Cake, Caramel Chocolate Chip":"Carbs","Rice Cake, Lundberg Brown Rice":"Carbs","Rice Cakes, Caramel":"Carbs","Rice Cakes, Mini Caramel Corn":"Carbs","Rice Cakes, Lundberg Brown":"Carbs","Rice Cakes, Quaker Apple Cinnamon":"Carbs","Rice Cakes, Quaker Butter Popcorn Minis":"Carbs","Rice Cakes, Quaker Chocolate Chunk":"Carbs","Rice Cakes, Quaker Ranch":"Carbs","Rice Cakes, Quaker Mini Cheddar":"Carbs","Rice Cakes, Quaker White Cheddar":"Carbs","Rice Sticks, Dynasty Dry":"Carbs","Rice, Annie Chuns, White Sticky":"Carbs","Rice, Basmati (Kirkland)":"Carbs","Rice, Brown":"Carbs","Rice, Basmati":"Carbs","Rice, Brown Basmati, Good Health":"Carbs","Rice, Brown Basmati (Ecolife), Cooked":"Carbs","Rice, Brown Medley (Trader Joes) Cooked":"Carbs","Rice, Brown Trader Joes Instant":"Carbs","Rice, Brown Jasmine Rice, Trader Joes (cooked)":"Carbs","Rice, Brown Trader Joes Medley (dry)":"Carbs","Rice, Jasmine, Thai Hom Mali (cooked)":"Carbs","Rice, Brown, Sprouts Long Grain Basmati":"Carbs","Rice, Carolina Jasmine Rice (dry)":"Carbs","Rice, Heirloom Forbidden Rice (dry)":"Carbs","Rice, Minute Brown (cooked)":"Carbs","Rice, Minute Multi-Grain Medley W/ Quinoa, Cooked":"Carbs","Rice, Natures Path Organic Crispy Brown":"Carbs","Rice, Nishiki White Sushi (uncooked)":"Carbs","Rice, Sticky White":"Carbs","Rice, Sukoyaka Genmai Brown Rice (pre-cooked)":"Carbs","Rice, Uncle Bens Bistro Express Cheddar Cheese":"Carbs","Rice, Uncle Bens Ready Rice In Brown Basmati":"Carbs","Rice, Uncle Bens Ready Rice- Basmati":"Carbs","Rice, Uncle Bens Spanish Style Ready Rice":"Carbs","Rice, Uncle Bens, Original Ready Rice":"Carbs","Rice, Uncle Bens Ready Rice (whole Grain Brown Variety)":"Carbs","Rice, White":"Carbs","Rudis Organic Multi-Grain English Muffin":"Carbs","Rice, Wild":"Carbs","Rutabagas":"Carbs","Squash, Acorn":"Carbs","Squash, Butternut":"Carbs","Squash, Kabocha":"Carbs","Squash, Delicata (Cooked)":"Carbs","Squash, Spaghetti":"Carbs","Suzies Whole Grain Thin Cakes All Natural Puffed Crackers":"Carbs","Tapioca, Swad":"Carbs","Thin Cakes, Multigrain (Suzies)":"Carbs","Tortilla, 365 Every Day Organic Corn Tortilla":"Carbs","Tortilla, Chi Chi":"Carbs","Tortilla, Casa Mendosa":"Carbs","Tortilla, Dempsters Whole Wheat":"Carbs","Tortilla, Don Pancho Whole Wheat":"Carbs","Tortilla, Don Julio":"Carbs","Tortilla, Dona Elsita, White Corn":"Carbs","Tortilla, Eating Right 100% Whole Grain":"Carbs","Tortilla, Ezekial Brown Rice":"Carbs","Tortilla, Ezekiel Sprouted Grain (large)":"Carbs","Tortilla, Ezekiel Sprouted Grain (small)":"Carbs","Tortilla, Food For Life-Brown Rice":"Carbs","Tortilla, Food For Life, Brown Rice":"Carbs","Tortilla, Home Brand":"Carbs","Tortilla, La Banderita Low-Carb":"Carbs","Tortilla, La Tortilla (Large)":"Carbs","Tortilla, La Tortilla OIive Oil Wrap":"Carbs","Tortilla, La Tortilla (Small)":"Carbs","Tortilla, LaTortilla, Wheat/Gluten Free Ancient Grain Ivory Teff":"Carbs","Tortilla, Mama Lupes Yellow Corn":"Carbs","Tortilla, Los Taquitos, Small Corn, Gluten Free":"Carbs","Tortilla, Marcella Valladolid Corn":"Carbs","Tortilla, Mission Foods Carb Balance Whole Wheat":"Carbs","Tortilla, Mission White Corn":"Carbs","Tortilla, Mission Life Balance Whole Wheat":"Carbs","Tortilla, Mission Yellow (extra Thin) Gluten Free":"Carbs","Tortilla, Presidents Choice (Large)":"Carbs","Tortilla, Mission Yellow Corn (6-in)":"Carbs","Tortilla, Que Pasa Corn":"Carbs","Tortilla, Rudis Gluten Free (plain)":"Carbs","Tortilla, Santa Fe Chopper Wheat":"Carbs","Tortilla, TortillaLand, Gluten-Free Corn":"Carbs","Tortilla, Santa Maria":"Carbs","Tortilla, Trader Joes Reduced Carb Whole Wheat":"Carbs","Tortilla, Tumaros Gourmet (Multi-Grain)":"Carbs","Tortilla, Trader Joes White Corn":"Carbs","Tortilla, Udis Gluten Free":"Carbs","Tortilla, Tumaros Salsa":"Carbs","Tortilla, Weight Watchers 100% Whole Wheat":"Carbs","Tortilla, Whole Wheat Central Market":"Carbs","Tortilla, Whole Wheat- Trader Joes":"Carbs","Tortilla, Whole Wheat Mission":"Carbs","Tortilla, Whole Grain Flour, Trader Joses":"Carbs","Tortilla, Whole Wheat, Xtreme Wellness":"Carbs","Tortilla, Xtreme Wellness Tomato Basil":"Carbs","Tortilla, Xtreme Wellness, Spinach And Herbs":"Carbs","Waffles, Eggo, Whole Grain, Low Fat":"Carbs","Waffles, NutriGrain, Whole Grain":"Carbs","Waffles, Vans Lite 97% Fat-Free":"Carbs","Waffles, Vans Gluten Free":"Carbs","Waffles, Vans Blueberry":"Carbs","Whole Grain Deli Flats (Pepperidge Farms)":"Carbs","Wrap, Farrah Wholemeal Wrap":"Carbs","Wrap, Ezekiel":"Carbs","Whole Wheat English Muffin (Dempsters)":"Carbs","Wrap, FlatOut Foldit-5 Grain Flax":"Carbs","Wrap, Flatout Light Original Flatbread":"Carbs","Wrap, Flatout Italian Herb":"Carbs","Wrap, Flat Out Original":"Carbs","Wrap, Flat Out Sun Dried Tomato":"Carbs","Wrap, Flatout Multi-Grain":"Carbs","Wrap, LBC Mountain Bread Light Barley":"Carbs","Wrap, Ole Mexican Food":"Carbs","Wrap, Trader Joes Clay Oven Bakes Lavash Bread":"Carbs","Wrap, Newburn Bakehouse":"Carbs","Wrap, Tumaro, Whole Wheat (low Carb)":"Carbs","Wrap, Tumaros Whole Wheat Low-Carb (8 In)":"Carbs","Wrap, Tumaros Low-Carb (9 Grain W/ Chia)":"Carbs","Wrap, Tumaros Garden Veggie Wrap":"Carbs","Wrap, Wattle Lite Soft Wrap":"Carbs","Wrap, Wattle Balley":"Carbs","Wrap, Wattle Valley Sourdough":"Carbs","Wrap, Wrap-Itz Gluten Free":"Carbs","Wrap, Weight Watchers":"Carbs","Wraps, Won Ton":"Carbs","Yautia Root":"Carbs","Yams (raw)":"Carbs","Wraps, La Banderita Soft Taco":"Carbs","Yogurt, Grass Fed, Whole Milk":"Carbs","Yogurt, Jalna":"Carbs","Yogurt, Light N Fit Vanilla":"Carbs","Yogurt, Source":"Carbs","Yogurt, Yoplait Light":"Carbs","Arrowhead Mills Rice & Shine Hot Cereal":"Carbs","Bread, Fit & Active":"Carbs","Bread, Ezekiel Prophet’s Pocket Bread":"Carbs","Cream Of Wheat, Bobâ€™s Red Mill Hot Cereal":"Carbs","Flatbread, Flat Out Artisian Thin Crust Rosemary & Olive Oil":"Carbs","Bread, Josephs Flax Oat Bran & Wheat Lavash":"Carbs","Bread, StoneMill Bakehouse, Sprouted 3 Grains & Oatmeal":"Carbs","Oatmeal, Quaker Apples & Cinnamon (low Sugar)":"Carbs","Oatmeal, Quaker Cinnamon & Spice (low Sugar)":"Carbs","Oatmeal, Quaker, Maple & Brown Sugar (low Sugar)":"Carbs","Pasta, Brown Rice Spaghetti, Fit & Active":"Carbs","Pancakes & Waffle Mix, Crunchy Peanut Butter, Kodiak Cakes,":"Carbs","Pancake & Waffle Mix, Full Circle (gluten Free)":"Carbs","Pita, Josephs, Flax Oat Bran & Whole Wheat":"Carbs","Quinoa & Flax, Hodgson Mill, Hot Cereal":"Carbs","Rice Cakes, Sunrice Sea Salt & Balsamic Vinegar":"Carbs","Rice, Brown Y&Y Vermicelli":"Carbs","Rice, Organic Millet & Brown Rice Ramen":"Carbs","Rice, Uncle Bens Red Beans & Rice, Ready Rice":"Carbs","Salsa, Newmans Own Black Bean & Corn":"Carbs","Soup, Roasted Red Pepper & Tomato":"Carbs","Suzies Corn, Quinoa & Sesame Cakes":"Carbs","Tortilla, Fit & Active, Whole Wheat Flour":"Carbs","Wrap, FlatOut Foldit-Rosemary & Olive Oil":"Carbs","Wrap, Flat Out Multi Grain & Flax":"Carbs","Wrap, Superfoods Organic, Chia, Spinach, Kale & Broccoli":"Carbs","Almond Butter, Almond Butter: MaraNatha Natural -Roasted No Sodium":"Fat","Almond Butter, Barney":"Fat","Almond Butter, Ds Natural Fluffbutter, Bananas Foster":"Fat","Almond Butter, Justins Organic Maple":"Fat","Almond Butter, Ds Natural Fluffbutter, Smores":"Fat","Almond Butter, Kirkland (creamy)":"Fat","Almond Butter, MaraNatha Creamy No-Stir":"Fat","Almond Butter, Justins Vanilla":"Fat","Almond Butter, MaraNatha Crunchy":"Fat","Almond Butter, Natural":"Fat","Almond Butter, MaraNatha Dark Chocolate Almond Spread":"Fat","Almond Butter, Vermont Champlain Cherry":"Fat","Almond Butter, Snickerdoodle, Buff Bake":"Fat","Almond Milk, Unsweetened":"Fat","Artisana Sesame Tahini":"Fat","Avocado":"Fat","Almond Spread, Buff Bake Snickerdoodle":"Fat","Butter":"Fat","Butter, Artisans Macadamia":"Fat","Butter, Cashew":"Fat","Butter, Country Crock Light":"Fat","Butter, Lurpak Lighter Slightly Salted Spreadable":"Fat","Butter, Nature Whipped":"Fat","Butter, Smart Balance":"Fat","Cacoa Nibs":"Fat","Cheese, American (full Fat)":"Fat","Cheese, Cheddar":"Fat","Cheese, Cabot Extra Sharp":"Fat","Cheese, Brie":"Fat","Cheese, Blue":"Fat","Cheese, Gouda":"Fat","Cheese, Gorgonzola":"Fat","Cheese, Goat":"Fat","Cheese, Feta":"Fat","Cheese, Colby Jack":"Fat","Cheese, Chihuahua Mexican Quesadilla":"Fat","Cheese, Mozzerella (part Skim)":"Fat","Cheese, Muenster":"Fat","Cheese, Natural Valley Goat Mozzarella":"Fat","Cheese, Kirkland Mexican Blend":"Fat","Cheese, Jarlsberg Deli Thin Sliced Swiss, Reduced Fat":"Fat","Cheese, Havarti":"Fat","Cheese, Natural Valley Goat, Colby Jack":"Fat","Cheese, Natural Valley Goat, Medium Cheddar":"Fat","Cheese, Parmesan":"Fat","Cheese, Pepper Jack":"Fat","Cheese, Presidents Choice Blue Menu Cream Cheese":"Fat","Cheese, Provolone":"Fat","Cheese, Ricotta (Whole)":"Fat","Cheese, Sargento Colby Jack Sticks":"Fat","Cheese, Pecorino Romano (shredded)":"Fat","Coconut Butter, Artisana, Cacao Bliss":"Fat","Cheese, Tillamook Sharp Cheddar Slices":"Fat","Coconut Butter":"Fat","Cheese, Swiss":"Fat","Coconut Butter, MaraNatha":"Fat","Coconut Butter, Sweet Spread Maple Pancake":"Fat","Coconut Butter, Sweet Spread Vanilla Cupcake":"Fat","Coconut Butter, Sweet Spread White Chocolate":"Fat","Coconut Butter, Sweet Spreads Chocolate Brownie":"Fat","Coconut Butter, Nutiva":"Fat","Coconut Butter, Sweet Spread Cinnamon Roll":"Fat","Coconut Milk (100%), Aroy-D":"Fat","Coconut Milk, Thai Kitchen Lite":"Fat","Coconut, Bobs Red Mill Unsweetened Raw":"Fat","Coconut, Unsweetened":"Fat","Coconut, Sprouts, Shredded Light":"Fat","Cookie Butter":"Fat","Greek Yogurt, Astro Original":"Fat","Flour, Almond":"Fat","Flaxseed, Whole":"Fat","Egg, Yolk":"Fat","Cream Cheese, Greek Yogurt (everything Bagel Flavor)":"Fat","Guacamole, GoodFoods":"Fat","Hazelnut Butter":"Fat","Hazelnuts":"Fat","Hazelnut Butter, Justins Organic Chocolate":"Fat","Guacamole, Wholly Classic Mini Cup":"Fat","Kirkland, Natural Peanut Butter Chunky":"Fat","Hummus, Roasted Red Pepper (Publix)":"Fat","Hummus, Hannah Classic":"Fat","Hempseed Butter":"Fat","Macro Natural Almond Spread":"Fat","Mayonnaise, Hellmans Light":"Fat","Mayonnaise, Neal Brother":"Fat","Milk, So Delicious Unsweetened Coconut":"Fat","Nuts, Almond":"Fat","Mayonnaise, Best Foods Light":"Fat","Nuts, Almond Emerald Cocoa Or Vanilla":"Fat","Nuts, Almonds Blue Diamond Mocha":"Fat","Nuts, Almonds Blue Diamond Smokehouse":"Fat","Nuts, Almonds Blue Diamond Toasted Coconut":"Fat","Nuts, Brazil":"Fat","Nuts, Cashew":"Fat","Nuts, Kirkland Whole Mixed Nuts":"Fat","Nuts, Almonds Planters Pumpkin Spice":"Fat","Nuts, Macadamia":"Fat","Nuts, Pecan":"Fat","Nuts, Walnut":"Fat","Oil, Avocado, Avolio (Costco)":"Fat","Oil, Coconut":"Fat","Oil, Extra Virgin Olive":"Fat","Peanut Butter, Adams 100% Natural":"Fat","Oil, Fish (capsule)":"Fat","Oil, Flaxseed":"Fat","Oil, Macadamia":"Fat","Oil, Udos Choice":"Fat","Olives":"Fat","Peanut Butter, Blonde Peanut Butter Cup":"Fat","Peanut Butter, Crazy Richards":"Fat","Peanut Butter, Earth Balance Coconut And Peanut Spread":"Fat","Peanut Butter, Dark Chocolate Dreams By The Peanut Butter Co.":"Fat","Peanut Butter, Earths Pride Organic Creamy":"Fat","Peanut Butter, Field Day (crunchy)":"Fat","Peanut Butter, Jif Natural Creamy":"Fat","Peanut Butter, Jif Whips Salty Caramel":"Fat","Peanut Butter, Jif Whips W/ Salted Caramel":"Fat","Peanut Butter, Jif Whips, Maple Brown Sugar":"Fat","Peanut Butter, Kraft Cinnamon Granola Raisin":"Fat","Peanut Butter, Krema Crunchy Natural":"Fat","Peanut Butter, Justins":"Fat","Peanut Butter, Maranatha":"Fat","Peanut Butter, Monkey Butter, Dark Choc Cherry":"Fat","Peanut Butter, Monkey Butter, White Choc Raspberry":"Fat","Peanut Butter, Naturally More":"Fat","Peanut Butter, Natural":"Fat","Peanut Butter, Naturally Nutty-Mocha PB":"Fat","Peanut Butter, Naturally Nutty-Chocolate Butter Toffee":"Fat","Peanut Butter, Parkers":"Fat","Peanut Butter, PB Crave Choco Choco":"Fat","Peanut Butter, PB Crave Cookie Nookie":"Fat","Peanut Butter, PB Crave Razzle Dazzle":"Fat","Peanut Butter, Pics":"Fat","Peanut Butter, Sanitarium":"Fat","Peanut Butter, Smart Balance Creamy":"Fat","Peanut Butter, Skippy Natural":"Fat","Peanut Butter, Smuckers Natural":"Fat","Peanut Butter, Smuckers":"Fat","Peanut Butter, Trader Joes (Creamy Salted)":"Fat","Peanut Butter, Tree Of Life (crunchy)":"Fat","Peanut Butter, Wild Friends, All Natural Honey (crunchy)":"Fat","Peanut Butter, White Rose (crunchy)":"Fat","Peanuts, Planters Salted":"Fat","Pecan Butter, Artisana":"Fat","Pesto, Three Bridges Superfood Pesto Sauce":"Fat","Pesto, Green":"Fat","Pistachios":"Fat","Power Butter":"Fat","Pumpkin Seeds, In Shell":"Fat","Salad Dressing, Caesar (Kens Steakhouse Lite)":"Fat","Salad Dressing, Opa Greek Yogurt, Feta Dill":"Fat","Seeds, Sesame (kernels, Dried)":"Fat","Sour Cream, Daisy":"Fat","Seeds, Sunflower (kernels, Dried)":"Fat","Sour Cream, Gay Lea":"Fat","Sunbutter":"Fat","Sunflower Seed Butter":"Fat","Sunflower Seed Butter, Once Again Organic":"Fat","Sunflower Seeds, Trader Joes, Raw":"Fat","Turkey Bacon (smoked), Shady Brook Farms":"Fat","Turkey Bacon, Oscar Mayer (cooked)":"Fat","Walnut Butter":"Fat","Yumm! Sauce, Cafe Yumm":"Fat","Coconut & Peanut Spread, Earth Balance":"Fat","Nut & Seed Butter, Nuttzo Organic Seven":"Fat","Peanut Butter, Naturally Nutty â€“ Honey Roasted Cinnamon":"Fat","Peanut Butter, Krema, Smooth & Creamy":"Fat","Peanut Butter, Naturally Nutty â€“ Chocolate Cherry":"Fat","Peanut Butter, Peanut Butter & Co. Cinnamon Raisin Swirl":"Fat","Peanut Butter, Peanut Butter & Co. Mighty Maple":"Fat","Peanut Butter, White Chocolate Wonderful By The Peanut Butter & Co":"Fat","Peanut Spread, Earth Balance, Coconut & Peanut":"Fat","Apple (with Skin)":"Fruit","Apple (without Skin)":"Fruit","Apples (frozen)":"Fruit","Apricots":"Fruit","Blackberries":"Fruit","Banana":"Fruit","Blueberries":"Fruit","Blueberries (frozen)":"Fruit","Cantaloupe":"Fruit","Casaba Melon":"Fruit","Cherries (red, Sour)":"Fruit","Cherries (sweet)":"Fruit","Clementines":"Fruit","Dates (with Pit)":"Fruit","Figs":"Fruit","Cranberries":"Fruit","Fruit, Giant Brand Tropical Fruit Medley":"Fruit","Grapefruit":"Fruit","Grapes (red Or Green)":"Fruit","Guavas":"Fruit","Honeydew Melon":"Fruit","Kiwi":"Fruit","Kumquats":"Fruit","Lychee":"Fruit","Mango":"Fruit","Mango Chunks, Dole, Frozen":"Fruit","Mango, Trader Joes Frozen Mango Chunks":"Fruit","Mulberries":"Fruit","Nectarines":"Fruit","Orange":"Fruit","Peach":"Fruit","Persimmons (native)":"Fruit","Persimmons (japanese)":"Fruit","Pear (asian)":"Fruit","Pear":"Fruit","Plum":"Fruit","Plantain":"Fruit","Pineapple":"Fruit","Pomegranate":"Fruit","Pumpkin, Canned":"Fruit","Raspberries":"Fruit","Pineapple, Trader Joes Frozen":"Fruit","Tangerine":"Fruit","Strawberries":"Fruit","Rhubarb":"Fruit","Strawberries (frozen)":"Fruit","Watermelon":"Fruit","Salsa, Santa Barbara Mango & Peach":"Fruit","Artisan Gluten Flour":"Protein","Beef, 95% Lean (cooked)":"Protein","Beef Stick, Grass Run Farms, Original":"Protein","Bacon, Coles Australian Shortcut (raw)":"Protein","Beef, 85% Lean Ground":"Protein","Beef, 90% Lean":"Protein","Beef, 92% Lean, Lauras, Cooked":"Protein","Beef, Canada Safeway Extra Lean":"Protein","Beef, Eye Fillet (raw)":"Protein","Beef, 96% Ground Beef (pan Fried)":"Protein","Beef, Flank Steak":"Protein","Beef, Ground 93":"%Protein","Beef, Moose Steak":"Protein","Beef, New York Strip (lean)":"Protein","Beef, Rib-Eye Steak":"Protein","Beef, Morrisons British Lean Diced Casserole (Raw)":"Protein","Beef, Tenderloin":"Protein","Beef, Top Sirloin":"Protein","Beef, Tesco Diced (raw)":"Protein","Beef, Top Round":"Protein","Bison, Ground (cooked)":"Protein","Bison, Top Sirloin":"Protein","Carbmasters Yogurt":"Protein","Caribou":"Protein","Cheese, 2% Cheddar":"Protein","Cheese, Allegro 16":"%Protein","Cheese, Cache Valley String Cheese":"Protein","Cheese, Feta (Fat-Free)":"Protein","Cheese, Mozzarella Fat-Free":"Protein","Cheese, Life Time Fat Free All Types":"Protein","Cheese, Monterrey Jack Cheese (Reduced Fat Organic Valley Brand)":"Protein","Cheese, Philadelphia Lightest Soft Cheese":"Protein","Cheese, Ricotta Fat Free (Precious)":"Protein","Cheese, Rocky Mountain Quark":"Protein","Cheese, Ricotta Low-Fat (Precious)":"Protein","Cheese, Skinny Cow Light (Wedge)":"Protein","Cheese, Valio-Edam 17%.":"Protein","Chicken Breast, Maple Leaf Nat. Selections Shaved":"Protein","Chicken Burger, Trader Joes, Chili Lime":"Protein","Chicken Sausage, Applegate Chicken And Maple":"Protein","Chicken Sausage, Coleman Organic Spinach Florentine (Costco)":"Protein","Chicken, Breast":"Protein","Chicken, Canned (Kirkland)":"Protein","Chicken, Coleman Links (uncooked)":"Protein","Chicken, Cutlets Perdue":"Protein","Chicken, Ground (Smart Chicken Brand)":"Protein","Chicken, Daily Chef (canned)":"Protein","Chicken, Ground, Lean":"Protein","Chicken, Kirkland Chicken Strips (cooked)":"Protein","Chicken, Land O Frost Premium Oven Roasted Slices":"Protein","Chicken, Lau Lau":"Protein","Chicken, Life Smart":"Protein","Chicken, Oscar Meyer Carving Board (Breast)":"Protein","Chicken, Sausage":"Protein","Chicken, Sausage Al Fresco Apple Maple (raw Weight)":"Protein","Chicken, Sausage-Tecumseh Farms (uncooked)":"Protein","Chicken, Sunrise Farms Chicken Breast Burger (cooked)":"Protein","Chicken, Swanson Canned (strained)":"Protein","Chicken, Tenderloins, Trader Joes":"Protein","Chicken, Thigh (boneless Skinless)":"Protein","Chicken, Trader Joes Premium White Chicken In Water (canned)":"Protein","Chicken, Wing":"Protein","Chuck Roast, Lean, (raw)":"Protein","Cottage Cheese, Albertsons (Fat Free)":"Protein","Cottage Cheese, Beatrice 1":"%Protein","Cottage Cheese, Borden":"Protein","Cottage Cheese, Breakstone (2%)":"Protein","Cottage Cheese, Breakstones (Fat Free)":"Protein","Cottage Cheese, Breakstone No-Salt (1%)":"Protein","Cottage Cheese, Bulla (97% FF)":"Protein","Cottage Cheese, Daily Chef (2%)":"Protein","Cottage Cheese, Cabot (Fat-Free)":"Protein","Cottage Cheese, Coles Farmland (Low Fat)":"Protein","Cottage Cheese, Dairy Farmers":"Protein","Cottage Cheese, Dairy Farmers Low-Fat":"Protein","Cottage Cheese, Dairy Farmers":"Protein","Cottage Cheese, Dairyland (2%)":"Protein","Cottage Cheese, Dairyland (Dry Curd)":"Protein","Cottage Cheese, Dairyland 1":"%Protein","Cottage Cheese, Darigold (2%)":"Protein","Cottage Cheese, Deans 1":"%Protein","Cottage Cheese, Friendship (1%)":"Protein","Cottage Cheese, Great Value (Fat-Free)":"Protein","Cottage Cheese, Harris Teeter (Low-Fat)":"Protein","Cottage Cheese, Hiland (2%)":"Protein","Cottage Cheese, Horizons Organic 2":"%Protein","Cottage Cheese, Island Farms 1":"%Protein","Cottage Cheese, Kraft 2":"%Protein","Cottage Cheese, Kroger Fat Free":"Protein","Cottage Cheese, Lactaid (1%)":"Protein","Cottage Cheese, Land O Lakes (1%)":"Protein","Cottage Cheese, Meadow Gold":"Protein","Cottage Cheese, Lucerne (Fat Free)":"Protein","Cottage Cheese, Meijer 1":"%Protein","Cottage Cheese, Nordica 1":"%Protein","Cottage Cheese, Nordica Fat-Free":"Protein","Cottage Cheese, Organic 365 Brand (Fat Free)":"Protein","Cottage Cheese, Organic Valley (2%)":"Protein","Cottage Cheese, Sealtest (1%)":"Protein","Cottage Cheese, Roberts Dairy (Low-Fat)":"Protein","Cottage Cheese, Shamrock Farms Low Fat":"Protein","Cottage Cheese, Trader Joes (Fat Free)":"Protein","Cottage Cheese, Tesco Light Choices":"Protein","Cottage Cheese, Trader Joes (Non-Fat)":"Protein","Cottage Cheese, Trader Joes Cottage Cheese, Low Fat, 1.5% Milkfat":"Protein","Cottage Cheese, Viva Fat-Free":"Protein","Cottage Cheese, Weight Watchers":"Protein","Cottage Cheese, Weight Watchers (Low-Fat)":"Protein","Egg White (large)":"Protein","Egg Whites, Egg Beaters":"Protein","Egg White, Muscle Eggs":"Protein","Egg Whites, Egg Whites International":"Protein","Egg Whites, Liquid (All Whites)":"Protein","Egg Whites, Liquid (Daily Chef)":"Protein","Egg Whites, Liquid (Muscle Egg)":"Protein","Egg Whites, Liquid (Muscle Egg) Chocolate And Chocolate Caramel":"Protein","Egg Whites, Liquid (Organic 365)":"Protein","Egg Whites, Liquid (Organic Valley)":"Protein","Egg Whites, Liquid (Presidents Choice Blue Menu)":"Protein","Egg Whites, Naturegg Simply":"Protein","Egg Whites, Muscle Eggs, Key Lime":"Protein","Egg, Muscle Egg Whites (Vanilla)":"Protein","Egg, Whole":"Protein","Egg, Whites (Golden Egg)":"Protein","Elk (raw)":"Protein","Eggs, Kirkland Real Egg Product":"Protein","Goat Milk, Redwood Hill Farm":"Protein","Greek Yogurt, Activia (2%)":"Protein","Greek Yogurt, Anchor":"Protein","Greek Yogurt, Chobani (Fat-Free)":"Protein","Greek Yogurt, Black Swan (Fat-Free)":"Protein","Greek Yogurt, Dannon (Fat-Free)":"Protein","Greek Yogurt, Fage (Fat-Free)":"Protein","Greek Yogurt, Fage 2":"%Protein","Greek Yogurt, Farmers Union (Light)":"Protein","Greek Yogurt, Fred Meyer Light":"Protein","Greek Yogurt, Greek Gods 0":"%Protein","Greek Yogurt, Giant Eagle (0% Fat)":"Protein","Greek Yogurt, Hy-vee Plain (fat Free)":"Protein","Greek Yogurt, Kirkland Signature (Plain/Fat-Free)":"Protein","Greek Yogurt, Kroger (0%)":"Protein","Greek Yogurt, Liberte (Low-Fat)":"Protein","Greek Yogurt, Liberte Blueberry (0%)":"Protein","Greek Yogurt, Liberte (lactose Free)":"Protein","Greek Yogurt, Nostimo Nonfat":"Protein","Greek Yogurt, Liberte Organic (Fat-Free)":"Protein","Greek Yogurt, Oikos (Fat-Free)":"Protein","Greek Yogurt, Olympic Krema (fat Free, Plain)":"Protein","Greek Yogurt, Oikos 0% Fat, Vanilla":"Protein","Greek Yogurt, Presidents Choice (0%)":"Protein","Greek Yogurt, Siggis (Fat-Free)":"Protein","Greek Yogurt, Skotidakis 0% Plain":"Protein","Greek Yogurt, Trader Joes (Non-Fat)":"Protein","Greek Yogurt, Trader Joes (Fat Free)":"Protein","Greek Yogurt, Voskos (Fat-Free)":"Protein","Ham, Applegate Black Forest":"Protein","Greek Yogurt, Yoplait (0%)":"Protein","Ground Turkey, Lilydale, Extra Lean":"Protein","Ham, Kirkland Extra Lean (sliced)":"Protein","Ham, Boars Head Tavern":"Protein","Ham, Kirkland Smoked Black Forest":"Protein","Ham, Maple Leaf Natural Selections, Smoked Black Forest":"Protein","Ham, Oscar Meyer Deli Slices":"Protein","Ham, Pillers Black Forest Deli":"Protein","Ham, Pillers Simply Free Smoked Breakfast":"Protein","Ice Cream, Cool Whey":"Protein","Jerky, Jack Links":"Protein","Jerky, Caveman Chicken, Chipotle Honey":"Protein","Jerky, Turkey Perky":"Protein","Kanga Bangas":"Protein","Kangaroo Filet (raw)":"Protein","Kangaroo Mince (raw)":"Protein","Kangaroo Steak (raw)":"Protein","Kangaroon Roasts (raw)":"Protein","Moose":"Protein","Lamb, Lean Heartsmart (raw)":"Protein","Liberte Quark":"Protein","Octopus":"Protein","Ostrich, Ground":"Protein","Ostrich, Steak":"Protein","Pepperoni, Applegate Naturals Uncured Turkey":"Protein","Pasta, Black Bean Spaghetti (dry)":"Protein","Pork, Boneless Center Cut Lean":"Protein","Pork, Ham (cooked)":"Protein","Pork, Oscar Meyer Carving Board Ham":"Protein","Pork, Canadian Bacon Slices, Land-O-Frost":"Protein","Pork, Pork Chops, Roseland Boneless (raw)":"Protein","Pork, Sirloin Tip Roast - 98% Fat-free (Kirkland)":"Protein","Pork, Tenderloin":"Protein","Pork, Oscar Meyer Carving Board Pulled Pork":"Protein","Protein Powder, 1st Phorm, Formula-1 Looped Fruit":"Protein","Protein Powder, 365 Whey Chocolate":"Protein","Protein Powder, About Time 100% Whey Protein Isolate (all Flavours)":"Protein","Protein Powder, 310 Shake":"Protein","Protein Powder, 365 Whey Vanilla":"Protein","Protein Powder, 4everfit Fruit Blast Isolate":"Protein","Protein Powder, About Time Casein, Chocolate":"Protein","Protein Powder, Amplify XL Double Chocolate Explosion":"Protein","Protein Powder, Allmax Isoflex Whey (all Flavors)":"Protein","Protein Powder, Advocare":"Protein","Protein Powder, About Time Casein, Peanut Butter":"Protein","Protein Powder, Alkaline Extreme Whey":"Protein","Protein Powder, Annex Elite Gold, Chocolate Peanut Butter":"Protein","Protein Powder, Arbonne":"Protein","Protein Powder, Balance Vanilla Whey":"Protein","Protein Powder, Beverly International Muscle Provider":"Protein","Protein Powder, Amplify XL Strawberry Slam":"Protein","Protein Powder, Beverly International Ultimate Muscle Protein":"Protein","Protein Powder, Beverly International Ultimate Muscle Provider":"Protein","Protein Powder, Big Bitch Formula":"Protein","Protein Powder, Bio Trust Protein Blend":"Protein","Protein Powder, BioFlex Hydroflex":"Protein","Protein Powder, Biochem Whey":"Protein","Protein Powder, BioFlex Biofurnace":"Protein","Protein Powder, BioX Protein Fusion":"Protein","Protein Powder, BioX Power Whey Isolate":"Protein","Protein Powder, BioFlex Proflex":"Protein","Protein Powder, Biotrust, Low Carb":"Protein","Protein Powder, Bluebonnet Whey Isolate":"Protein","Protein Powder, Body Nutrition, Gardenia Choc. Cacao":"Protein","Protein Powder, Body Fortress Vanilla":"Protein","Protein Powder, Body Basix Isolate (Chocolate)":"Protein","Protein Powder, Body Nutrition, Gardenia Vanilla Bean":"Protein","Protein Powder, Body Tech Whey Tech":"Protein","Protein Powder, BodyTech, Rich Chocolate":"Protein","Protein Powder, BRNG Proto Whey":"Protein","Protein Powder, BodyTech PrimalPro, Chocolate":"Protein","Protein Powder, BPI Sports Whey-HD":"Protein","Protein Powder, BSN Lean Dessert Banana Nut":"Protein","Protein Powder, BSN-Syntha 6 Isolate":"Protein","Protein Powder, Captain Anabolic Pro Peptide R22":"Protein","Protein Powder, Bulk Nutrients WPC Strawberry And Banana":"Protein","Protein Powder, Bulk Nutrients WPC Chocolate":"Protein","Protein Powder, Bulk Nutrients WPC Vanilla":"Protein","Protein Powder, Cell Biology, Chocolate":"Protein","Protein Powder, Cellucor Cor Performance, Cookies N Cream":"Protein","Protein Powder, Cellucor Cor-Performance Whey":"Protein","Protein Powder, Cellucor, Peanut Butter Marshmallow":"Protein","Protein Powder, Champion Cookies And Cream Pure Whey":"Protein","Protein Powder, Clutch Bodyshop":"Protein","Protein Powder, Core Pro, Peanut Butter Ice Cream":"Protein","Protein Powder, Creamy Choc Fudge (plant)":"Protein","Protein Powder, DaVinci Chocolate Whey":"Protein","Protein Powder, DeNovo Nutrition Max MPS Pure Whey Protein Isolate":"Protein","Protein Powder, Dales Raw Foods":"Protein","Protein Powder, Cytosport":"Protein","Protein Powder, Designer Whey Natural":"Protein","Protein Powder, Diesel Nutrition Banana Flavor":"Protein","Protein Powder, Dot Fit Whey Smooth-Chocolate":"Protein","Protein Powder, Diesel, Vanilla":"Protein","Protein Powder, Dream Protein":"Protein","Protein Powder, Dymatize Elite Vanilla":"Protein","Protein Powder, Dymatize Elite Casein Cookies N Cream":"Protein","Protein Powder, Dymatize Blueberry Muffin":"Protein","Protein Powder, Dymatize Elite, Pina Colada":"Protein","Protein Powder, Dymatize Elite, Cinnamon Bun":"Protein","Protein Powder, Dymatize Elite, Chocolate Cake Batter":"Protein","Protein Powder, Dymatize Elite Whey (Chocolate Fudge)":"Protein","Protein Powder, EAS Whey (Vanilla)":"Protein","Protein Powder, Dynamite ISO 100, Gourmet Chocolate":"Protein","Protein Powder, Dymatize Nutrition Elite XT (Rich Chocolate)":"Protein","Protein Powder, Dymatize ISO":"Protein","Protein Powder, Elite Whey Protein Isolate (chocolate Mint)":"Protein","Protein Powder, EvoChem Hydropro":"Protein","Protein Powder, EX-2":"Protein","Protein Powder, Extreme Mass (Strawberry)":"Protein","Protein Powder, Gemma Pea Isolate":"Protein","Protein Powder, Giant Sports (chocolate)":"Protein","Protein Powder, Garden Of Life Raw":"Protein","Protein Powder, GNC 100% Casein":"Protein","Protein Powder, Gladiator By Smoothie King":"Protein","Protein Powder, GNC Performance Pro 100% Whey Vanilla":"Protein","Protein Powder, GNC Whey ISO Burst Protein Powder, Vanilla":"Protein","Protein Powder, GNC Amplified Wheybolic":"Protein","Protein Powder, GNC Whey Isolate":"Protein","Protein Powder, Go Vita Whey Isolate":"Protein","Protein Powder, Goldtouch Whey Vanilla":"Protein","Protein Powder, Growing Naturals Pea Original":"Protein","Protein Powder, Growing Naturals Rice Vanilla":"Protein","Protein Powder, Growing Naturals Rice Chocolate":"Protein","Protein Powder, Harmonized Vegan":"Protein","Protein Powder, Harmonized":"Protein","Protein Powder, Healthy N Fit 100% Egg":"Protein","Protein Powder, HPN ProZero, Chocolate":"Protein","Protein Powder, Hit, Core Evolution":"Protein","Protein Powder, Heartland Gold Sprouted Brown Rice":"Protein","Protein Powder, Intek (all Flavors)":"Protein","Protein Powder, Interactive Absolute Vegetarian":"Protein","Protein Powder, HPN ProZero, Vanilla":"Protein","Protein Powder, Intek Evolution":"Protein","Protein Powder, IntraPro Whey Isolate":"Protein","Protein Powder, IronVegan, Sprouted Protein (vanilla)":"Protein","Protein Powder, Isagenix IsaPro Whey":"Protein","Protein Powder, ISO XP-Whey Isolate Vanilla":"Protein","Protein Powder, ISO-95 Caruso Fitness Nutrition, Vanilla":"Protein","Protein Powder, Isoflex":"Protein","Protein Powder, Isology All Flavours":"Protein","Protein Powder, Isofusion Vanilla Ice Cream":"Protein","Protein Powder, Isomorph 28 Chocolate":"Protein","Protein Powder, Isopure LowCarb Dutch Chocolate":"Protein","Protein Powder, Isopure Zero Carb Creamy Vanilla":"Protein","Protein Powder, Jay Robs":"Protein","Protein Powder, Isopure Natural Chocolate":"Protein","Protein Powder, Labrada Lean Body For Her Isolate (vanilla)":"Protein","Protein Powder, Kaizen":"Protein","Protein Powder, Jay Robb Egg White -All Flavors":"Protein","Protein Powder, Lean Fit, Chocolate":"Protein","Protein Powder, Lifetime Lifes Basic Vanilla":"Protein","Protein Powder, Lifetime Fitness":"Protein","Protein Powder, Lifetime Whey Isolate":"Protein","Protein Powder, Magnum Quattro (chocolate)":"Protein","Protein Powder, Manitoba Harvest Hemp":"Protein","Protein Powder, Market Pantry Chocolate":"Protein","Protein Powder, Maxs Super Whey (Banana)":"Protein","Protein Powder, Mediclear Plus":"Protein","Protein Powder, Metabolic Drive":"Protein","Protein Powder, Metagenics Unipro":"Protein","Protein Powder, MGN Cake Batter":"Protein","Protein Powder, Maxx Essentials":"Protein","Protein Powder, MHP Paleo Protein, Triple Chocolate":"Protein","Protein Powder, MGN Premium Protein Blend":"Protein","Protein Powder, MRM Veggie Elite- Chocolate Mocha":"Protein","Protein Powder, MRM Whey":"Protein","Protein Powder, MMI Premium Whey":"Protein","Protein Powder, MRM Whey (rich Vanilla)":"Protein","Protein Powder, MTS, Apple Pie":"Protein","Protein Powder, MRMs Veggie Protein (Chocolate)":"Protein","Protein Powder, MTS, Cinnagram":"Protein","Protein Powder, MTS Nutrition":"Protein","Protein Powder, MTS, Pumpkin Pie":"Protein","Protein Powder, Muscle Max Maxpro":"Protein","Protein Powder, MTS, Red Velvet":"Protein","Protein Powder, Muscle Max Whey":"Protein","Protein Powder, Muscle Milk Protein Plus":"Protein","Protein Powder, Musclefeast Whey Isolate Chocolate":"Protein","Protein Powder, Musclepharm, Chocolate Peanut Butter":"Protein","Protein Powder, Musclepharm, Strawberry Cheesecake":"Protein","Protein Powder, Muscletech 100% Whey":"Protein","Protein Powder, Musclepharm Combat Powder":"Protein","Protein Powder, Muscletech Anabolic Halo Chocolate":"Protein","Protein Powder, Myofusion (Probiotic Version)":"Protein","Protein Powder, Myofusion Advanced":"Protein","Protein Powder, Myofusion (old Version-all Flavours)":"Protein","Protein Powder, Mutant IsoSurge Birthday Cake":"Protein","Protein Powder, Myofusion Elite":"Protein","Protein Powder, Natural Whey Isolate":"Protein","Protein Powder, Natera Hemp":"Protein","Protein Powder, Myprotein Power, Chocolate":"Protein","Protein Powder, Natures Best JavaPro (French Vanilla)":"Protein","Protein Powder, New Solutions Nutrition, Chocolate":"Protein","Protein Powder, Nitro Peak":"Protein","Protein Powder, Nitro Pro Whey Isolate":"Protein","Protein Powder, NLA Her Whey":"Protein","Protein Powder, NNW Healthy Whey":"Protein","Protein Powder, North Coast Naturals, 100% Iso, Chocolate":"Protein","Protein Powder, NOW Pea":"Protein","Protein Powder, NOW Whey Pure Isolate":"Protein","Protein Powder, NRG-X Sublime Chocolate Chip":"Protein","Protein Powder, NutriBiotic Rice Protein":"Protein","Protein Powder, Nutrition Direct Whey":"Protein","Protein Powder, Nytrowhey Ultra Elite-Chocolate":"Protein","Protein Powder, Optimum Nutrition 100% Gold Standard Whey, Chocolate":"Protein","Protein Powder, Optimum Nutrition 100% Standard Whey, Double Chocolate":"Protein","Protein Powder, Optimum Nutrition 100% Whey Gold Standard":"Protein","Protein Powder, Optimum Nutrition Chocolate Egg White":"Protein","Protein Powder, Optimum Nutrition Casein":"Protein","Protein Powder, Optimum Nutrition Gold Standard Whey":"Protein","Protein Powder, Optimum Nutrition Performance Whey":"Protein","Protein Powder, Optimum Nutrition, Platinum Hydro Whey":"Protein","Protein Powder, Optimum Nutrition Platinum Tri-celle Casein Chocolate Decadence Flavor":"Protein","Protein Powder, Optimum Whey":"Protein","Protein Powder, Orgain, Organic Creamy Chocolate (plant Based)":"Protein","Protein Powder, PES Select":"Protein","Protein Powder, PEScience, Blondie":"Protein","Protein Powder, PEScience, Cookies N Cream":"Protein","Protein Powder, PEScience, Peanut Butter Cup":"Protein","Protein Powder, PHD Whey":"Protein","Protein Powder, PHD Diet Whey":"Protein","Protein Powder, PhD Pharma Pure":"Protein","Protein Powder, Pierce Performance Nutrition Vanilla":"Protein","Protein Powder, Phoenix Rising":"Protein","Protein Powder, Plant Fusion":"Protein","Protein Powder, Power Whey Isolate":"Protein","Protein Powder, Precision Engineer Whey":"Protein","Protein Powder, Pro V 60":"Protein","Protein Powder, Professional Whey Micellar Casein":"Protein","Protein Powder, Professional Whey WPI":"Protein","Protein Powder, Progressive Organics, Brown Rice, Natural Vanilla":"Protein","Protein Powder, ProJym Chocolate Cookie Crunch":"Protein","Protein Powder, ProJym Cookies And Cream":"Protein","Protein Powder, Promasil":"Protein","Protein Powder, Protizyme":"Protein","Protein Powder, Pure Protein":"Protein","Protein Powder, PurePaleo Chocolate":"Protein","Protein Powder, Pure Protein Natural Whey (Chocolate)":"Protein","Protein Powder, PVL Iso Sport Whey, Vanilla":"Protein","Protein Powder, PVL Isogold, Cookies And Cream":"Protein","Protein Powder, PVL Whey Gourmet - Peanut Butter Chocolate":"Protein","Protein Powder, Quest Cookies And Cream":"Protein","Protein Powder, Quest Multi Purpose Mix":"Protein","Protein Powder, Quest Peanut Butter":"Protein","Protein Powder, Quest Salted Caramel":"Protein","Protein Powder, Quest, Chocolate Milkshake":"Protein","Protein Powder, Quest, Vanilla Milkshake":"Protein","Protein Powder, Reflex Instant Whey PRO":"Protein","Protein Powder, Reserveage Grass Fed Whey Protein (Chocolate)":"Protein","Protein Powder, Revolutionary Nutrition Bionic Edge Whey":"Protein","Protein Powder, RSP Nutrition, Vanilla Whey":"Protein","Protein Powder, Scivation Whey":"Protein","Protein Powder, Shakeology Chocolate":"Protein","Protein Powder, SNI, Pro Whey PW-30":"Protein","Protein Powder, Spiru-Tein, French Vanilla":"Protein","Protein Powder, Sun Warrior":"Protein","Protein Powder, Sunwarrior, Warrior Blend, Vanilla":"Protein","Protein Powder, Syntrax Nectar":"Protein","Protein Powder, Syntha-6":"Protein","Protein Powder, Teras Whey":"Protein","Protein Powder, Teras Whey, Chocolate (grass Fed)":"Protein","Protein Powder, Tested Nutrition - Chocolate":"Protein","Protein Powder, Titan Complete Nutrition":"Protein","Protein Powder, True Nutrition Vegan":"Protein","Protein Powder, True Protein Whey Protein Isolate Cold-Filtration. Unflavored/unsweetened":"Protein","Protein Powder, Trutein Pumpkin Pie":"Protein","Protein Powder, Trutein, Banana Cream":"Protein","Protein Powder, Trutein, Choc Truffle":"Protein","Protein Powder, Trutein, Chocolate Mint":"Protein","Protein Powder, Trutein, Chocolate PB Cup":"Protein","Protein Powder, Trutein, Cinnabun":"Protein","Protein Powder, Trutein, Lemon Meringue Pie":"Protein","Protein Powder, Trutein, Mocha Caramel":"Protein","Protein Powder, Trutein, Orange Creamsicle":"Protein","Protein Powder, Trutein, PB Marshmallow Cookie":"Protein","Protein Powder, Trutein, Red Velvet":"Protein","Protein Powder, Trutein, Smores":"Protein","Protein Powder, Trutein, Shamrock Shake":"Protein","Protein Powder, Trutein, Vanilla":"Protein","Protein Powder, Ultimate Nutrition Bioactive Whey Sensation 81":"Protein","Protein Powder, Ultimate Nutrition Iso Sensation":"Protein","Protein Powder, USN Ultra Whey -100 Premium":"Protein","Protein Powder, Vega One":"Protein","Protein Powder, Vega Sport":"Protein","Protein Powder, VP2":"Protein","Protein Powder, Vega One Nutritional Shake":"Protein","Protein Powder, V-Core Complete Nutrition":"Protein","Protein Powder, Warrior Blend, Vanilla":"Protein","Protein Powder, Whey Gourmet":"Protein","Protein Powder, Woman Incredible":"Protein","Protein Powder, Wheyology All Flavours":"Protein","Protein Powder, VPX Zero Carb":"Protein","Ricotta Cheese, Sargento Fat-Free":"Protein","Sausage, Jimmy Dean":"Protein","Seafood, Ahi Tuna Sashimi (uncooked)":"Protein","Seafood, Barramundi":"Protein","Seafood, Catfish Fillets (Delta Pride)":"Protein","Seafood, Crab":"Protein","Seafood, Cod":"Protein","Seafood, Crawfish (cooked)":"Protein","Seafood, Flathead":"Protein","Seafood, Haddock":"Protein","Seafood, Grouper (cooked)":"Protein","Seafood, Lobster":"Protein","Seafood, Kirkland Wild Alaska Sockeye Salmon (canned)":"Protein","Seafood, Halibut":"Protein","Seafood, Hake (uncooked)":"Protein","Seafood, Orange Roughy":"Protein","Seafood, Monkfish (cooked)":"Protein","Seafood, Mahi Mahi Grande Gourmet Burger":"Protein","Seafood, Mahi Mahi":"Protein","Seafood, Mahi Burger Inland Market":"Protein","Seafood, Oysters (Raw)":"Protein","Seafood, Pacific Salmon (raw)":"Protein","Seafood, Perch":"Protein","Seafood, Pollock":"Protein","Seafood, Salmon (Atlantic/Wild)":"Protein","Seafood, Raincoast Skipjack Tuna (drained)":"Protein","Seafood, Salmon Pate (John West)":"Protein","Seafood, Salmon Burger (Alaskan), Trident":"Protein","Seafood, Salmon (pink, Canned, Bumble Bee Brand)":"Protein","Seafood, Salmon-Lomi (raw)":"Protein","Seafood, Salmon, 365 Alaskan Wild (canned)":"Protein","Seafood, Salmon, Atlantic, Farmed (cooked":"Protein","Seafood, Sardines, In Extra Virgin Olive Oil":"Protein","Seafood, Sashimi, Salmon":"Protein","Seafood, Scallops":"Protein","Seafood, Sea Bass":"Protein","Seafood, Snapper":"Protein","Seafood, Shrimp":"Protein","Seafood, Sole/Flounder":"Protein","Seafood, Squid Calamari (uncooked)":"Protein","Seafood, Swai":"Protein","Seafood, Tuna Pate (John West)":"Protein","Seafood, Tilapia":"Protein","Seafood, Tuna (Yellowfin)":"Protein","Seafood, Trout":"Protein","Seafood, Tilefish (cooked)":"Protein","Turkey Bacon, Columbus":"Protein","Turkey Bacon, Butterball Fully Cooked":"Protein","Spiru-Tein Unsweetened (all Flavors)":"Protein","Seafood, Wild Swordfish Steaks - Whole Catch Brand (from Whole Foods) -":"Protein","Seafood, Tuna, Canned":"Protein","Seafood, Tuna Wild Planet Wild Albacore":"Protein","Turkey Breast, Market Pantry, Oven Roasted Slices":"Protein","Turkey Breast, Kirkland Oven Browned":"Protein","Turkey Breast, Butterball Oven Roasted Slices":"Protein","Turkey Breast, Artisan Slow Roasted":"Protein","Turkey Bacon, Mattessons Smoked Turkey Rashers (2 Rashers)":"Protein","Turkey Breast, Oven Roasted (Lillydale)":"Protein","Turkey Burger, Metro":"Protein","Turkey Breast, Shady Brook Farms":"Protein","Turkey Burger, Fresca Naturals":"Protein","Turkey Burger, Marc Angelo (raw)":"Protein","Turkey Burger, Perdue 93% Lean":"Protein","Turkey Ham, Jennie-O":"Protein","Turkey Pepperoni, Kroger (low Fat)":"Protein","Turkey Pepperoni, Butterball":"Protein","Turkey Pepperettes":"Protein","Turkey Sausage, Applegate, Naturals Savory":"Protein","Turkey Slices, Applegate":"Protein","Turkey, Applegate Natural Breast":"Protein","Turkey Sausage, Marc Angelo Extra Lean":"Protein","Turkey, Bacon LillyDale Extra Lean":"Protein","Turkey, Applegate Naturals Uncured Turkey Bacon":"Protein","Turkey, Boars Head, All Types (oven Roasted, Smoked, Etc)":"Protein","Turkey, Boarshead All Natural Smoked Breast":"Protein","Turkey, Burger (Kirkland)":"Protein","Turkey, Burger Butterball":"Protein","Turkey, Crumbles, Jimmy Dean":"Protein","Turkey, Cutlets (Butterball)":"Protein","Turkey, Cutlets-Honeysuckle White Boneless 99% Fat-Free":"Protein","Turkey, El Pozo Breast":"Protein","Turkey, Fresh Creations Sausage":"Protein","Turkey, Breast":"Protein","Turkey, Ground, 93% Fat-Free":"Protein","Turkey, Grimms Farmer Sausage":"Protein","Turkey, Ground Butterball 98% Lean":"Protein","Turkey, Ground, Kirkland And Presidents Choice Lean (raw Weight)":"Protein","Turkey, Ground, 99% Fat-Free":"Protein","Turkey, Ground, 97% Fat-Free":"Protein","Turkey, Jennie O Smoked Breast":"Protein","Turkey, Jenni-O Extra Lean Bacon":"Protein","Turkey, Jenni-O Thick Cut Bacon":"Protein","Turkey, Jennie-O (60% Less Fat) Bacon":"Protein","Turkey, Jennie-O All Natural 95/5 Burger":"Protein","Turkey, Jennie-O Lean Ham":"Protein","Turkey, Kirkland Burger (raw)":"Protein","Turkey, Jennie-O, Mild Breakfast Sausage":"Protein","Turkey, Jimmy Dean Sausage":"Protein","Turkey, Kielbasa, Hillshire Farms":"Protein","Turkey, Lean Bratwurst":"Protein","Turkey, Lean N Fit Bacon":"Protein","Turkey, Pepperoni Slices (70% Less Fat)":"Protein","Turkey, Lily Dale Daystarters Extra Lean Bacon":"Protein","Turkey, Maple Leaf Natural Selection, Hickory Smoked":"Protein","Turkey, Oscar Meyer Carving Board Breast":"Protein","Turkey, Life Smart":"Protein","Turkey, Presidents Choice Blue Menu Bacon":"Protein","Turkey, Prime Extra Lean":"Protein","Turkey, Trader Joes 94% Fat Free Bacon":"Protein","Veal Cutlets (cooked)":"Protein","Veal, Cubed (raw)":"Protein","Venison, Ground 80/20 (venison/beef)":"Protein","Venison (deer Loin-lean)":"Protein","Yeast, Whole Foods":"Protein","Cheese, Lifetime JalapeÃ±o Jack (Fat-Free)":"Protein","Cheese, Black Diamond String":"Protein","Chicken, Perdue Fit & Easy Extra Lean Ground (cooked)":"Protein","Chicken, Boars Head Blazing Buffalo® Style Roasted":"Protein","Cottage Cheese, Bison Fat-Free":"Protein","Chips, Quest Protein, All Flavors (BBQ, Sea Salt, Cheddar Sour Cream, Sour Cream & Onion)":"Protein","Cottage Cheese, Flair":"Protein","Cottage Cheese, Daisy (Low-Fat)":"Protein","Cottage Cheese, Kraft Fat-Free":"Protein","Cottage Cheese, Michigan":"Protein","Cottage Cheese, Nancy’s Organic Cultured Low Fat":"Protein","Greek Yogurt, Fage Total, Plain (full Fat)":"Protein","Greek Yogurt, HEB (Fat-Free)":"Protein","Protein Powder, MTS, Mint Cookies & Cream":"Protein","Protein Powder, Isopure Zero Carb Cookies & Cream":"Protein","Protein Powder, Elite Whey & Casein Blend":"Protein","Protein Powder, MTS, PB Cookies & Cream":"Protein","Protein Powder, Muscleology Nitro-Pro Cookies & Cream":"Protein","Protein Powder, MyProtein True Whey Cookies & Cream":"Protein","Protein Powder, Quest, Strawberries & Cream":"Protein","Seafood, Salmon, Bear & Wolf (canned)":"Protein"};

				var list = {
				"Carbs": [ "Almond Milk, Long Life","Alvarado Sprouted Multigrain Bread","Amaranth - Arrowhead Mills Organic Whole Grain","Barley, Bobs Red Mill (dry)","Bean Threads, Lungkow","Beans, Black, Eden Organic (canned)","Beans, Bushs Cannellini White Kidney Beans","Beans, Bushs Reduced Sodium Black Beans","Beans, Goya Black Beans","Beans, Pinto, Fat Free","Beans, Red Kidney (Publix)","Beans, Kidney Bushs Reduced Sodium","Beans, Kidney, Eden Organic No Salt Added (canned)","Beans, Navy","Beans, Refried Black Beans, Fat Free","Beans, Refried Black Casa Fiesta -low Fat","Beans, Trader Joes Black Beans","Bobs Red Mill Organic Oat Bran","Bobs Red Mill Mighty Tasty Hot Cereal","Beets","Bobs Red Mill Organic Steel Cut Oats","Bobs Red Mill Organic Oat Groats","Bread, 365 Organic Pizza Crust, Whole Wheat","Bread, Arnold Sandwich Thins","Bread, Bakestone Bros Multigrain Thin Bun","Bread, Burgen Fruit Toast","Bread, Daves Killer Bread","Bread, Dempsters Boost My Protein","Bread, Canyon Bakehouse, 7-Grain (gluten Free)","Bread, English Muffin, Tiptop","Bread, Ezekiel Muffin","Bread, Ezekiel 4:9 Sprouted English Muffin","Bread, Dempsters No Sugar","Bread, Ezekial","Bread, Kangaroo Salad Pockets","Bread, Helgas Rye","Bread, Food For Life, Multi-See Rice Bread","Bread, Food For Life, Brown Rice (gluten Free)","Bread, Flat Out Thin Crust Flatbread","Bread, Little Big Bread","Bread, Molenburg Wholemeal","Bread, Multigrain Gluten-Free, Essential Baking Co","Bread, Natures Own 100% Whole Wheat","Bread, Orowheat Pocket Thins Flatbread","Bread, Rudis Gluten Free Multigrain","Bread, Orowheat Sandwich Thins, Honey Wheat","Bread, Pepperidge Farm Pumpkin Spice Swirl","Bread, Rudolphs Bavarian Multi Grain","Bread, Sara Lee (45 Cal)","Bread, Trader Joes, Multigrain Slims","Bread, Thomas Pumpkin Spice English Muffin","Bread, Three Grain, Mestemacher","Bread, Warburtons Seeded","Bread, Udis Whole Grain Gluten Free","Bread, Whole Grain PC Blue Menu PC Thins","Bread, Wasa Light Rye Crisp","Buckwheat","Buckwheat Soba Noodles","Bulgar Wheat (boiled)","Bulgur, Bobs Red Mill (cooked)","Cereal-Corn Flakes","Carrots","Cereal, Cheerios, Uncle Tobys (Australia)","Cereal-Kix","Cereal, Chex Mix Traditional","Cereal, Ezekiel 4:9 Sprouted Whole Grain","Cereal, Fiber One","Cereal, Kelloggs All-Bran Buds","Cereal, Kind Cinnamon Oat Clusters","Cereal, Manischewitz Creamy Hot Wheat","Cereal, Natures Path Organic Kamut Puffs","Cereal, Quaker Oatmeal Squares","Chia Seeds","Cereal, Shredded Wheat Kellogs Mini Wheats (Unfrosted)","Cereal, Shredded Wheat","Chickpeas","Coconut Flour, Tiana","Coconut Chips, Creative Snack Co., Organic Toasted","Coconut Chips, C20 Baked","Chips, Popped Quaker, Blackberry Pomegranate","Chickpeas, PC Organics","Cous Cous, Lundberg Plain Brown Rice (DRY)","Cous Cous, Far East Herbed Chicken (with Water Only) Cooked)","Cous Cous","Cous Cous, Manitou Mediterranean Blend","Corn (yellow, Canned)","Corn Thins, Multigrain (Real Foods Brand)","Crackers, Food Should Taste Good, Roasted Red Pepper Brown Rice","Cream Of Wheat","Crackers, Miltons, Everything","Cream Of Rice","Cream Of Wheat, Whole Grain","English Muffin, Oakrun Farm Whole Grain","English Muffin, Genius (gluten Free)","English Muffin, Healthy Life Multi Grain","English Muffin, Old Mill Vieux Moulin","English Muffin, Thomas Light Multi Grain","English Muffin, Tip Top Wholemeal","English Muffins, Food For Life 100% Flourless Sprouted Whole Grain","Farina, Bobs Red Mill","Flat Bread, Joseph Multi Grain","Farro, Cooked","Flat Bread, Mountain Bread Organic","Flatbread, Flat Out Artisian Thin Crust Spicy Italian","Flat Bread, Trader Joes, Gluten Free","Flour, Kuttu","Flour, Coconut-Bobs Red Mill","Flatbread, Flat Out Artisian Thin Pizza Crust, Rustic White","Granola, Bear Naked Fit","Freekeh (cooked)","Granola, Five Grain (Hazelnut Honey)","Granola, Nature Valley Protein (Cranberry Almond)","Greek Yogurt, Chobani Almond Coco Loco","Greek Yogurt, Chobani With Pineapple","Greek Yogurt, Chobani Simply 100 (all Flavors)","Grits","Greek Yogurt, Oikos 2% Vanilla","Greek Yogurt, Kirkland (Fat Free Fruit Flavoured)","Grits, Corn","Honeyville Oat FIber","Lavash, Trader Joes Oven Baked Whole Wheat","Kasha, Wolffs","Lentils, Black Beluga, Archer Farms","Kasha, Shiloh Farms Organic","Jicama","Lavash, California Lavash Whole Grain","Lentils, Goya","Lentils, Kroger","Lentils, Madras Lentils, Tasty Bite","Malt-O-Meal (dry)","Lentils, Red, Dry (cooked)","Matzo Farfel, Streits","Matzo Meal, Manischewitz, Whole Grain","Matzo, Manischewitz Organic Spelt","Matzos, Streits Whole Wheat","Milk, Skim DLite","Milk, Cows Grass Fed","Matzos, Manischewitz, Whole Wheat","Millet Grits, Bobs Red Mill (dry)","Oat Bran, Hodgeson Mills","Oat Bran, Bobs Red Mill High Fiber Hot Cereal","Muffin, Thomas Hearty Multi-Grain","Oat Bran, Quaker","Oat Bran, Old Wessex","Oat Bran, Trader Joes","Oat Bran, Whole Foods Organic","Oat Flour, Bobs Red Mill","Oatcakes, Narnins","Oatmeal, Old Fashioned","Oatmeal, Better Oats-Oat Revolution Maple And Brown Sugar","Oatmeal, Only Oats","Oats, Bobs Red Mill (Extra Thick)","Oatmeal, Steel Cut","Oatmeal, Simple Truth Organic, Instant Original","Oats, Gluten Free-Trader Joes","Oats, Bobs Red Mill Quick Cooking Rolled","Oats, Bobs Red Mill Steel Cut (Gluten Free)","Oats, Bobs Red Mill, Quick Cooking Oats, Gluten Free","Oats, Trader Joes Quick Cook (Steel Cut)","Pancake Mix, Bobs Red Mill Gluten Free","Pancake Mix, Bobs Red Mill","Pancake Mix, Flap Jacked","Pancake Mix, Kodiak Cakes, Crunchy Peanut Butter","Pancake Mix, Hungry Jack Funfetti","Pancake Mix, Kodiak Cakes, Whole Wheat And Honey","Pancake Mix, Pamelas Gluten Free","Pancake Mix, Power Cakes (KodiakCakes)","Pancake/Waffle Mix, Birch Benders","Pasta, Barilla Plus Multigrain","Parsnips (raw)","Pasta Sauce-Tomato Based","Pasta, Brown Rice, Timkyada","Pasta, Barilla Whole Grain Penne","Pasta, Dreamfield Low Carb","Pasta, Ezekiel Sprouted Grain Spaghetti","Pasta, Chickpeas, Banza","Pasta, Jovial Brown Rice Pasta","Pasta, Jovial Whole Grain Pasta","Pasta, Lundberg Brown Rice Pasta (organic)","Pasta, No Yolk","Pasta, Quinoa, Ancient Harvest (dry)","Pasta, Rice Noodles LungKow Vermicelli (cooked)","Pasta, Organic Red Lentil Penne, Tolerant","Pasta, Ronzoni 150 (dry)","Pasta, Rizopia, Rice Spaghetti Pasta (dry)","Pasta, San Remo Cannelloni","Pasta, Simple Truth, Organic Whole Wheat Spaghetti (dry)","Pasta, Vermicelli","Peanut Spread, Nuts N More Toffee Crunch","Peas (canned)","Pita, Damascus","Peas, Black Eyed, Kroger (uncooked)","Pita, Josephs Pita Bread","Pita, Hannas Whole Wheat","Pita, Josephs- Flax Oat Bran And Whole Wheat","Pita, Toufayan Bread (White)","Plantains (raw)","Pocket Thin, Orowheat 8 Grain","Poi (cooked)","Popcorn, Orville Redenbacher (original Kernels, Unpopped)","Polenta (dry)","Popcorn, Skinny Pop","Potaotes OBrien, Ore Ida","Potato, Little Potato Company- Little Charmers","Potato, New Baby","Potato, Red","Potato, Oriental Japanese Sweet","Potato, Ruby Lou","Potato, Russet","Potato, Russet Ore Ida","Potato, Simply Potatoes Shredded Hash Browns","Potato, Sweet","Potato, Sweet Mc Cain","Potato, Yukon Gold","Potato, Sweet Ore Ida","Potatoes, Ore Ida Hash Browns","Potatoes, Safeway Kitchens Country Style Hash Browns","Puffed Corn, Arrowhead Mills","Potatoes, Trader Joes Frozen Hashbrowns","Pumpkin","Quinoa","Quinoa Flakes","Quinoa Macaroni, GoGo Quinoa","Quinoa, Ancient Harvest Flakes","Quinoa, Ancient Harvest Pasta (dry)","Quinoa, Bobs Red Mill (dry)","Quinoa, Roland (DRY)","Quinoa, Roland Garden Vegetable (dry)","Rice And Beans, Eden Organic Cajun (canned)","Quinoa, Roland Roasted Garlic (dry)","Rice And Beans, Eden Organic Carribean (canned)","Rice Cake, Butter Toffee","Rice Cake, Caramel Chocolate Chip","Rice Cake, Lundberg Brown Rice","Rice Cakes, Caramel","Rice Cakes, Mini Caramel Corn","Rice Cakes, Lundberg Brown","Rice Cakes, Quaker Apple Cinnamon","Rice Cakes, Quaker Butter Popcorn Minis","Rice Cakes, Quaker Chocolate Chunk","Rice Cakes, Quaker Ranch","Rice Cakes, Quaker Mini Cheddar","Rice Cakes, Quaker White Cheddar","Rice Sticks, Dynasty Dry","Rice, Annie Chuns, White Sticky","Rice, Basmati (Kirkland)","Rice, Brown","Rice, Basmati","Rice, Brown Basmati, Good Health","Rice, Brown Basmati (Ecolife), Cooked","Rice, Brown Medley (Trader Joes) Cooked","Rice, Brown Trader Joes Instant","Rice, Brown Jasmine Rice, Trader Joes (cooked)","Rice, Brown Trader Joes Medley (dry)","Rice, Jasmine, Thai Hom Mali (cooked)","Rice, Brown, Sprouts Long Grain Basmati","Rice, Carolina Jasmine Rice (dry)","Rice, Heirloom Forbidden Rice (dry)","Rice, Minute Brown (cooked)","Rice, Minute Multi-Grain Medley W/ Quinoa, Cooked","Rice, Natures Path Organic Crispy Brown","Rice, Nishiki White Sushi (uncooked)","Rice, Sticky White","Rice, Sukoyaka Genmai Brown Rice (pre-cooked)","Rice, Uncle Bens Bistro Express Cheddar Cheese","Rice, Uncle Bens Ready Rice In Brown Basmati","Rice, Uncle Bens Ready Rice- Basmati","Rice, Uncle Bens Spanish Style Ready Rice","Rice, Uncle Bens, Original Ready Rice","Rice, Uncle Bens Ready Rice (whole Grain Brown Variety)","Rice, White","Rudis Organic Multi-Grain English Muffin","Rice, Wild","Rutabagas","Squash, Acorn","Squash, Butternut","Squash, Kabocha","Squash, Delicata (Cooked)","Squash, Spaghetti","Suzies Whole Grain Thin Cakes All Natural Puffed Crackers","Tapioca, Swad","Thin Cakes, Multigrain (Suzies)","Tortilla, 365 Every Day Organic Corn Tortilla","Tortilla, Chi Chi","Tortilla, Casa Mendosa","Tortilla, Dempsters Whole Wheat","Tortilla, Don Pancho Whole Wheat","Tortilla, Don Julio","Tortilla, Dona Elsita, White Corn","Tortilla, Eating Right 100% Whole Grain","Tortilla, Ezekial Brown Rice","Tortilla, Ezekiel Sprouted Grain (large)","Tortilla, Ezekiel Sprouted Grain (small)","Tortilla, Food For Life-Brown Rice","Tortilla, Food For Life, Brown Rice","Tortilla, Home Brand","Tortilla, La Banderita Low-Carb","Tortilla, La Tortilla (Large)","Tortilla, La Tortilla OIive Oil Wrap","Tortilla, La Tortilla (Small)","Tortilla, LaTortilla, Wheat/Gluten Free Ancient Grain Ivory Teff","Tortilla, Mama Lupes Yellow Corn","Tortilla, Los Taquitos, Small Corn, Gluten Free","Tortilla, Marcella Valladolid Corn","Tortilla, Mission Foods Carb Balance Whole Wheat","Tortilla, Mission White Corn","Tortilla, Mission Life Balance Whole Wheat","Tortilla, Mission Yellow (extra Thin) Gluten Free","Tortilla, Presidents Choice (Large)","Tortilla, Mission Yellow Corn (6-in)","Tortilla, Que Pasa Corn","Tortilla, Rudis Gluten Free (plain)","Tortilla, Santa Fe Chopper Wheat","Tortilla, TortillaLand, Gluten-Free Corn","Tortilla, Santa Maria","Tortilla, Trader Joes Reduced Carb Whole Wheat","Tortilla, Tumaros Gourmet (Multi-Grain)","Tortilla, Trader Joes White Corn","Tortilla, Udis Gluten Free","Tortilla, Tumaros Salsa","Tortilla, Weight Watchers 100% Whole Wheat","Tortilla, Whole Wheat Central Market","Tortilla, Whole Wheat- Trader Joes","Tortilla, Whole Wheat Mission","Tortilla, Whole Grain Flour, Trader Joses","Tortilla, Whole Wheat, Xtreme Wellness","Tortilla, Xtreme Wellness Tomato Basil","Tortilla, Xtreme Wellness, Spinach And Herbs","Waffles, Eggo, Whole Grain, Low Fat","Waffles, NutriGrain, Whole Grain","Waffles, Vans Lite 97% Fat-Free","Waffles, Vans Gluten Free","Waffles, Vans Blueberry","Whole Grain Deli Flats (Pepperidge Farms)","Wrap, Farrah Wholemeal Wrap","Wrap, Ezekiel","Whole Wheat English Muffin (Dempsters)","Wrap, FlatOut Foldit-5 Grain Flax","Wrap, Flatout Light Original Flatbread","Wrap, Flatout Italian Herb","Wrap, Flat Out Original","Wrap, Flat Out Sun Dried Tomato","Wrap, Flatout Multi-Grain","Wrap, LBC Mountain Bread Light Barley","Wrap, Ole Mexican Food","Wrap, Trader Joes Clay Oven Bakes Lavash Bread","Wrap, Newburn Bakehouse","Wrap, Tumaro, Whole Wheat (low Carb)","Wrap, Tumaros Whole Wheat Low-Carb (8 In)","Wrap, Tumaros Low-Carb (9 Grain W/ Chia)","Wrap, Tumaros Garden Veggie Wrap","Wrap, Wattle Lite Soft Wrap","Wrap, Wattle Balley","Wrap, Wattle Valley Sourdough","Wrap, Wrap-Itz Gluten Free","Wrap, Weight Watchers","Wraps, Won Ton","Yautia Root","Yams (raw)","Wraps, La Banderita Soft Taco","Yogurt, Grass Fed, Whole Milk","Yogurt, Jalna","Yogurt, Light N Fit Vanilla","Yogurt, Source","Yogurt, Yoplait Light","Arrowhead Mills Rice & Shine Hot Cereal","Bread, Fit & Active","Bread, Ezekiel Prophet’s Pocket Bread","Cream Of Wheat, Bobâ€™s Red Mill Hot Cereal","Flatbread, Flat Out Artisian Thin Crust Rosemary & Olive Oil","Bread, Josephs Flax Oat Bran & Wheat Lavash","Bread, StoneMill Bakehouse, Sprouted 3 Grains & Oatmeal","Oatmeal, Quaker Apples & Cinnamon (low Sugar)","Oatmeal, Quaker Cinnamon & Spice (low Sugar)","Oatmeal, Quaker, Maple & Brown Sugar (low Sugar)","Pasta, Brown Rice Spaghetti, Fit & Active","Pancakes & Waffle Mix, Crunchy Peanut Butter, Kodiak Cakes,","Pancake & Waffle Mix, Full Circle (gluten Free)","Pita, Josephs, Flax Oat Bran & Whole Wheat","Quinoa & Flax, Hodgson Mill, Hot Cereal","Rice Cakes, Sunrice Sea Salt & Balsamic Vinegar","Rice, Brown Y&Y Vermicelli","Rice, Organic Millet & Brown Rice Ramen","Rice, Uncle Bens Red Beans & Rice, Ready Rice","Salsa, Newmans Own Black Bean & Corn","Soup, Roasted Red Pepper & Tomato","Suzies Corn, Quinoa & Sesame Cakes","Tortilla, Fit & Active, Whole Wheat Flour","Wrap, FlatOut Foldit-Rosemary & Olive Oil","Wrap, Flat Out Multi Grain & Flax","Wrap, Superfoods Organic, Chia, Spinach, Kale & Broccoli"],
				"Fruit": [ "Apple (with Skin)","Apple (without Skin)","Apples (frozen)","Apricots","Blackberries","Banana","Blueberries","Blueberries (frozen)","Cantaloupe","Casaba Melon","Cherries (red, Sour)","Cherries (sweet)","Clementines","Dates (with Pit)","Figs","Cranberries","Fruit, Giant Brand Tropical Fruit Medley","Grapefruit","Grapes (red Or Green)","Guavas","Honeydew Melon","Kiwi","Kumquats","Lychee","Mango","Mango Chunks, Dole, Frozen","Mango, Trader Joes Frozen Mango Chunks","Mulberries","Nectarines","Orange","Peach","Persimmons (native)","Persimmons (japanese)","Pear (asian)","Pear","Plum","Plantain","Pineapple","Pomegranate","Pumpkin, Canned","Raspberries","Pineapple, Trader Joes Frozen","Tangerine","Strawberries","Rhubarb","Strawberries (frozen)","Watermelon","Salsa, Santa Barbara Mango & Peach"],
				"Protein": [ "Artisan Gluten Flour","Beef, 95% Lean (cooked)","Beef Stick, Grass Run Farms, Original","Bacon, Coles Australian Shortcut (raw)","Beef, 85% Lean Ground","Beef, 90% Lean","Beef, 92% Lean, Lauras, Cooked","Beef, Canada Safeway Extra Lean","Beef, Eye Fillet (raw)","Beef, 96% Ground Beef (pan Fried)","Beef, Flank Steak","Beef, Ground 93%","Beef, Moose Steak","Beef, New York Strip (lean)","Beef, Rib-Eye Steak","Beef, Morrisons British Lean Diced Casserole (Raw)","Beef, Tenderloin","Beef, Top Sirloin","Beef, Tesco Diced (raw)","Beef, Top Round","Bison, Ground (cooked)","Bison, Top Sirloin","Carbmasters Yogurt","Caribou","Cheese, 2% Cheddar","Cheese, Allegro 16%","Cheese, Cache Valley String Cheese","Cheese, Feta (Fat-Free)","Cheese, Mozzarella Fat-Free","Cheese, Life Time Fat Free All Types","Cheese, Monterrey Jack Cheese (Reduced Fat Organic Valley Brand)","Cheese, Philadelphia Lightest Soft Cheese","Cheese, Ricotta Fat Free (Precious)","Cheese, Rocky Mountain Quark","Cheese, Ricotta Low-Fat (Precious)","Cheese, Skinny Cow Light (Wedge)","Cheese, Valio-Edam 17%.","Chicken Breast, Maple Leaf Nat. Selections Shaved","Chicken Burger, Trader Joes, Chili Lime","Chicken Sausage, Applegate Chicken And Maple","Chicken Sausage, Coleman Organic Spinach Florentine (Costco)","Chicken, Breast","Chicken, Canned (Kirkland)","Chicken, Coleman Links (uncooked)","Chicken, Cutlets Perdue","Chicken, Ground (Smart Chicken Brand)","Chicken, Daily Chef (canned)","Chicken, Ground, Lean","Chicken, Kirkland Chicken Strips (cooked)","Chicken, Land O Frost Premium Oven Roasted Slices","Chicken, Lau Lau","Chicken, Life Smart","Chicken, Oscar Meyer Carving Board (Breast)","Chicken, Sausage","Chicken, Sausage Al Fresco Apple Maple (raw Weight)","Chicken, Sausage-Tecumseh Farms (uncooked)","Chicken, Sunrise Farms Chicken Breast Burger (cooked)","Chicken, Swanson Canned (strained)","Chicken, Tenderloins, Trader Joes","Chicken, Thigh (boneless Skinless)","Chicken, Trader Joes Premium White Chicken In Water (canned)","Chicken, Wing","Chuck Roast, Lean, (raw)","Cottage Cheese, Albertsons (Fat Free)","Cottage Cheese, Beatrice 1%","Cottage Cheese, Borden","Cottage Cheese, Breakstone (2%)","Cottage Cheese, Breakstones (Fat Free)","Cottage Cheese, Breakstone No-Salt (1%)","Cottage Cheese, Bulla (97% FF)","Cottage Cheese, Daily Chef (2%)","Cottage Cheese, Cabot (Fat-Free)","Cottage Cheese, Coles Farmland (Low Fat)","Cottage Cheese, Dairy Farmers","Cottage Cheese, Dairy Farmers Low-Fat","Cottage Cheese, Dairy Farmers","Cottage Cheese, Dairyland (2%)","Cottage Cheese, Dairyland (Dry Curd)","Cottage Cheese, Dairyland 1%","Cottage Cheese, Darigold (2%)","Cottage Cheese, Deans 1%","Cottage Cheese, Friendship (1%)","Cottage Cheese, Great Value (Fat-Free)","Cottage Cheese, Harris Teeter (Low-Fat)","Cottage Cheese, Hiland (2%)","Cottage Cheese, Horizons Organic 2%","Cottage Cheese, Island Farms 1%","Cottage Cheese, Kraft 2%","Cottage Cheese, Kroger Fat Free","Cottage Cheese, Lactaid (1%)","Cottage Cheese, Land O Lakes (1%)","Cottage Cheese, Meadow Gold","Cottage Cheese, Lucerne (Fat Free)","Cottage Cheese, Meijer 1%","Cottage Cheese, Nordica 1%","Cottage Cheese, Nordica Fat-Free","Cottage Cheese, Organic 365 Brand (Fat Free)","Cottage Cheese, Organic Valley (2%)","Cottage Cheese, Sealtest (1%)","Cottage Cheese, Roberts Dairy (Low-Fat)","Cottage Cheese, Shamrock Farms Low Fat","Cottage Cheese, Trader Joes (Fat Free)","Cottage Cheese, Tesco Light Choices","Cottage Cheese, Trader Joes (Non-Fat)","Cottage Cheese, Trader Joes Cottage Cheese, Low Fat, 1.5% Milkfat","Cottage Cheese, Viva Fat-Free","Cottage Cheese, Weight Watchers","Cottage Cheese, Weight Watchers (Low-Fat)","Egg White (large)","Egg Whites, Egg Beaters","Egg White, Muscle Eggs","Egg Whites, Egg Whites International","Egg Whites, Liquid (All Whites)","Egg Whites, Liquid (Daily Chef)","Egg Whites, Liquid (Muscle Egg)","Egg Whites, Liquid (Muscle Egg) Chocolate And Chocolate Caramel","Egg Whites, Liquid (Organic 365)","Egg Whites, Liquid (Organic Valley)","Egg Whites, Liquid (Presidents Choice Blue Menu)","Egg Whites, Naturegg Simply","Egg Whites, Muscle Eggs, Key Lime","Egg, Muscle Egg Whites (Vanilla)","Egg, Whole","Egg, Whites (Golden Egg)","Elk (raw)","Eggs, Kirkland Real Egg Product","Goat Milk, Redwood Hill Farm","Greek Yogurt, Activia (2%)","Greek Yogurt, Anchor","Greek Yogurt, Chobani (Fat-Free)","Greek Yogurt, Black Swan (Fat-Free)","Greek Yogurt, Dannon (Fat-Free)","Greek Yogurt, Fage (Fat-Free)","Greek Yogurt, Fage 2%","Greek Yogurt, Farmers Union (Light)","Greek Yogurt, Fred Meyer Light","Greek Yogurt, Greek Gods 0%","Greek Yogurt, Giant Eagle (0% Fat)","Greek Yogurt, Hy-vee Plain (fat Free)","Greek Yogurt, Kirkland Signature (Plain/Fat-Free)","Greek Yogurt, Kroger (0%)","Greek Yogurt, Liberte (Low-Fat)","Greek Yogurt, Liberte Blueberry (0%)","Greek Yogurt, Liberte (lactose Free)","Greek Yogurt, Nostimo Nonfat","Greek Yogurt, Liberte Organic (Fat-Free)","Greek Yogurt, Oikos (Fat-Free)","Greek Yogurt, Olympic Krema (fat Free, Plain)","Greek Yogurt, Oikos 0% Fat, Vanilla","Greek Yogurt, Presidents Choice (0%)","Greek Yogurt, Siggis (Fat-Free)","Greek Yogurt, Skotidakis 0% Plain","Greek Yogurt, Trader Joes (Non-Fat)","Greek Yogurt, Trader Joes (Fat Free)","Greek Yogurt, Voskos (Fat-Free)","Ham, Applegate Black Forest","Greek Yogurt, Yoplait (0%)","Ground Turkey, Lilydale, Extra Lean","Ham, Kirkland Extra Lean (sliced)","Ham, Boars Head Tavern","Ham, Kirkland Smoked Black Forest","Ham, Maple Leaf Natural Selections, Smoked Black Forest","Ham, Oscar Meyer Deli Slices","Ham, Pillers Black Forest Deli","Ham, Pillers Simply Free Smoked Breakfast","Ice Cream, Cool Whey","Jerky, Jack Links","Jerky, Caveman Chicken, Chipotle Honey","Jerky, Turkey Perky","Kanga Bangas","Kangaroo Filet (raw)","Kangaroo Mince (raw)","Kangaroo Steak (raw)","Kangaroon Roasts (raw)","Moose","Lamb, Lean Heartsmart (raw)","Liberte Quark","Octopus","Ostrich, Ground","Ostrich, Steak","Pepperoni, Applegate Naturals Uncured Turkey","Pasta, Black Bean Spaghetti (dry)","Pork, Boneless Center Cut Lean","Pork, Ham (cooked)","Pork, Oscar Meyer Carving Board Ham","Pork, Canadian Bacon Slices, Land-O-Frost","Pork, Pork Chops, Roseland Boneless (raw)","Pork, Sirloin Tip Roast - 98% Fat-free (Kirkland)","Pork, Tenderloin","Pork, Oscar Meyer Carving Board Pulled Pork","Protein Powder, 1st Phorm, Formula-1 Looped Fruit","Protein Powder, 365 Whey Chocolate","Protein Powder, About Time 100% Whey Protein Isolate (all Flavours)","Protein Powder, 310 Shake","Protein Powder, 365 Whey Vanilla","Protein Powder, 4everfit Fruit Blast Isolate","Protein Powder, About Time Casein, Chocolate","Protein Powder, Amplify XL Double Chocolate Explosion","Protein Powder, Allmax Isoflex Whey (all Flavors)","Protein Powder, Advocare","Protein Powder, About Time Casein, Peanut Butter","Protein Powder, Alkaline Extreme Whey","Protein Powder, Annex Elite Gold, Chocolate Peanut Butter","Protein Powder, Arbonne","Protein Powder, Balance Vanilla Whey","Protein Powder, Beverly International Muscle Provider","Protein Powder, Amplify XL Strawberry Slam","Protein Powder, Beverly International Ultimate Muscle Protein","Protein Powder, Beverly International Ultimate Muscle Provider","Protein Powder, Big Bitch Formula","Protein Powder, Bio Trust Protein Blend","Protein Powder, BioFlex Hydroflex","Protein Powder, Biochem Whey","Protein Powder, BioFlex Biofurnace","Protein Powder, BioX Protein Fusion","Protein Powder, BioX Power Whey Isolate","Protein Powder, BioFlex Proflex","Protein Powder, Biotrust, Low Carb","Protein Powder, Bluebonnet Whey Isolate","Protein Powder, Body Nutrition, Gardenia Choc. Cacao","Protein Powder, Body Fortress Vanilla","Protein Powder, Body Basix Isolate (Chocolate)","Protein Powder, Body Nutrition, Gardenia Vanilla Bean","Protein Powder, Body Tech Whey Tech","Protein Powder, BodyTech, Rich Chocolate","Protein Powder, BRNG Proto Whey","Protein Powder, BodyTech PrimalPro, Chocolate","Protein Powder, BPI Sports Whey-HD","Protein Powder, BSN Lean Dessert Banana Nut","Protein Powder, BSN-Syntha 6 Isolate","Protein Powder, Captain Anabolic Pro Peptide R22","Protein Powder, Bulk Nutrients WPC Strawberry And Banana","Protein Powder, Bulk Nutrients WPC Chocolate","Protein Powder, Bulk Nutrients WPC Vanilla","Protein Powder, Cell Biology, Chocolate","Protein Powder, Cellucor Cor Performance, Cookies N Cream","Protein Powder, Cellucor Cor-Performance Whey","Protein Powder, Cellucor, Peanut Butter Marshmallow","Protein Powder, Champion Cookies And Cream Pure Whey","Protein Powder, Clutch Bodyshop","Protein Powder, Core Pro, Peanut Butter Ice Cream","Protein Powder, Creamy Choc Fudge (plant)","Protein Powder, DaVinci Chocolate Whey","Protein Powder, DeNovo Nutrition Max MPS Pure Whey Protein Isolate","Protein Powder, Dales Raw Foods","Protein Powder, Cytosport","Protein Powder, Designer Whey Natural","Protein Powder, Diesel Nutrition Banana Flavor","Protein Powder, Dot Fit Whey Smooth-Chocolate","Protein Powder, Diesel, Vanilla","Protein Powder, Dream Protein","Protein Powder, Dymatize Elite Vanilla","Protein Powder, Dymatize Elite Casein Cookies N Cream","Protein Powder, Dymatize Blueberry Muffin","Protein Powder, Dymatize Elite, Pina Colada","Protein Powder, Dymatize Elite, Cinnamon Bun","Protein Powder, Dymatize Elite, Chocolate Cake Batter","Protein Powder, Dymatize Elite Whey (Chocolate Fudge)","Protein Powder, EAS Whey (Vanilla)","Protein Powder, Dynamite ISO 100, Gourmet Chocolate","Protein Powder, Dymatize Nutrition Elite XT (Rich Chocolate)","Protein Powder, Dymatize ISO","Protein Powder, Elite Whey Protein Isolate (chocolate Mint)","Protein Powder, EvoChem Hydropro","Protein Powder, EX-2","Protein Powder, Extreme Mass (Strawberry)","Protein Powder, Gemma Pea Isolate","Protein Powder, Giant Sports (chocolate)","Protein Powder, Garden Of Life Raw","Protein Powder, GNC 100% Casein","Protein Powder, Gladiator By Smoothie King","Protein Powder, GNC Performance Pro 100% Whey Vanilla","Protein Powder, GNC Whey ISO Burst Protein Powder, Vanilla","Protein Powder, GNC Amplified Wheybolic","Protein Powder, GNC Whey Isolate","Protein Powder, Go Vita Whey Isolate","Protein Powder, Goldtouch Whey Vanilla","Protein Powder, Growing Naturals Pea Original","Protein Powder, Growing Naturals Rice Vanilla","Protein Powder, Growing Naturals Rice Chocolate","Protein Powder, Harmonized Vegan","Protein Powder, Harmonized","Protein Powder, Healthy N Fit 100% Egg","Protein Powder, HPN ProZero, Chocolate","Protein Powder, Hit, Core Evolution","Protein Powder, Heartland Gold Sprouted Brown Rice","Protein Powder, Intek (all Flavors)","Protein Powder, Interactive Absolute Vegetarian","Protein Powder, HPN ProZero, Vanilla","Protein Powder, Intek Evolution","Protein Powder, IntraPro Whey Isolate","Protein Powder, IronVegan, Sprouted Protein (vanilla)","Protein Powder, Isagenix IsaPro Whey","Protein Powder, ISO XP-Whey Isolate Vanilla","Protein Powder, ISO-95 Caruso Fitness Nutrition, Vanilla","Protein Powder, Isoflex","Protein Powder, Isology All Flavours","Protein Powder, Isofusion Vanilla Ice Cream","Protein Powder, Isomorph 28 Chocolate","Protein Powder, Isopure LowCarb Dutch Chocolate","Protein Powder, Isopure Zero Carb Creamy Vanilla","Protein Powder, Jay Robs","Protein Powder, Isopure Natural Chocolate","Protein Powder, Labrada Lean Body For Her Isolate (vanilla)","Protein Powder, Kaizen","Protein Powder, Jay Robb Egg White -All Flavors","Protein Powder, Lean Fit, Chocolate","Protein Powder, Lifetime Lifes Basic Vanilla","Protein Powder, Lifetime Fitness","Protein Powder, Lifetime Whey Isolate","Protein Powder, Magnum Quattro (chocolate)","Protein Powder, Manitoba Harvest Hemp","Protein Powder, Market Pantry Chocolate","Protein Powder, Maxs Super Whey (Banana)","Protein Powder, Mediclear Plus","Protein Powder, Metabolic Drive","Protein Powder, Metagenics Unipro","Protein Powder, MGN Cake Batter","Protein Powder, Maxx Essentials","Protein Powder, MHP Paleo Protein, Triple Chocolate","Protein Powder, MGN Premium Protein Blend","Protein Powder, MRM Veggie Elite- Chocolate Mocha","Protein Powder, MRM Whey","Protein Powder, MMI Premium Whey","Protein Powder, MRM Whey (rich Vanilla)","Protein Powder, MTS, Apple Pie","Protein Powder, MRMs Veggie Protein (Chocolate)","Protein Powder, MTS, Cinnagram","Protein Powder, MTS Nutrition","Protein Powder, MTS, Pumpkin Pie","Protein Powder, Muscle Max Maxpro","Protein Powder, MTS, Red Velvet","Protein Powder, Muscle Max Whey","Protein Powder, Muscle Milk Protein Plus","Protein Powder, Musclefeast Whey Isolate Chocolate","Protein Powder, Musclepharm, Chocolate Peanut Butter","Protein Powder, Musclepharm, Strawberry Cheesecake","Protein Powder, Muscletech 100% Whey","Protein Powder, Musclepharm Combat Powder","Protein Powder, Muscletech Anabolic Halo Chocolate","Protein Powder, Myofusion (Probiotic Version)","Protein Powder, Myofusion Advanced","Protein Powder, Myofusion (old Version-all Flavours)","Protein Powder, Mutant IsoSurge Birthday Cake","Protein Powder, Myofusion Elite","Protein Powder, Natural Whey Isolate","Protein Powder, Natera Hemp","Protein Powder, Myprotein Power, Chocolate","Protein Powder, Natures Best JavaPro (French Vanilla)","Protein Powder, New Solutions Nutrition, Chocolate","Protein Powder, Nitro Peak","Protein Powder, Nitro Pro Whey Isolate","Protein Powder, NLA Her Whey","Protein Powder, NNW Healthy Whey","Protein Powder, North Coast Naturals, 100% Iso, Chocolate","Protein Powder, NOW Pea","Protein Powder, NOW Whey Pure Isolate","Protein Powder, NRG-X Sublime Chocolate Chip","Protein Powder, NutriBiotic Rice Protein","Protein Powder, Nutrition Direct Whey","Protein Powder, Nytrowhey Ultra Elite-Chocolate","Protein Powder, Optimum Nutrition 100% Gold Standard Whey, Chocolate","Protein Powder, Optimum Nutrition 100% Standard Whey, Double Chocolate","Protein Powder, Optimum Nutrition 100% Whey Gold Standard","Protein Powder, Optimum Nutrition Chocolate Egg White","Protein Powder, Optimum Nutrition Casein","Protein Powder, Optimum Nutrition Gold Standard Whey","Protein Powder, Optimum Nutrition Performance Whey","Protein Powder, Optimum Nutrition, Platinum Hydro Whey","Protein Powder, Optimum Nutrition Platinum Tri-celle Casein Chocolate Decadence Flavor","Protein Powder, Optimum Whey","Protein Powder, Orgain, Organic Creamy Chocolate (plant Based)","Protein Powder, PES Select","Protein Powder, PEScience, Blondie","Protein Powder, PEScience, Cookies N Cream","Protein Powder, PEScience, Peanut Butter Cup","Protein Powder, PHD Whey","Protein Powder, PHD Diet Whey","Protein Powder, PhD Pharma Pure","Protein Powder, Pierce Performance Nutrition Vanilla","Protein Powder, Phoenix Rising","Protein Powder, Plant Fusion","Protein Powder, Power Whey Isolate","Protein Powder, Precision Engineer Whey","Protein Powder, Pro V 60","Protein Powder, Professional Whey Micellar Casein","Protein Powder, Professional Whey WPI","Protein Powder, Progressive Organics, Brown Rice, Natural Vanilla","Protein Powder, ProJym Chocolate Cookie Crunch","Protein Powder, ProJym Cookies And Cream","Protein Powder, Promasil","Protein Powder, Protizyme","Protein Powder, Pure Protein","Protein Powder, PurePaleo Chocolate","Protein Powder, Pure Protein Natural Whey (Chocolate)","Protein Powder, PVL Iso Sport Whey, Vanilla","Protein Powder, PVL Isogold, Cookies And Cream","Protein Powder, PVL Whey Gourmet - Peanut Butter Chocolate","Protein Powder, Quest Cookies And Cream","Protein Powder, Quest Multi Purpose Mix","Protein Powder, Quest Peanut Butter","Protein Powder, Quest Salted Caramel","Protein Powder, Quest, Chocolate Milkshake","Protein Powder, Quest, Vanilla Milkshake","Protein Powder, Reflex Instant Whey PRO","Protein Powder, Reserveage Grass Fed Whey Protein (Chocolate)","Protein Powder, Revolutionary Nutrition Bionic Edge Whey","Protein Powder, RSP Nutrition, Vanilla Whey","Protein Powder, Scivation Whey","Protein Powder, Shakeology Chocolate","Protein Powder, SNI, Pro Whey PW-30","Protein Powder, Spiru-Tein, French Vanilla","Protein Powder, Sun Warrior","Protein Powder, Sunwarrior, Warrior Blend, Vanilla","Protein Powder, Syntrax Nectar","Protein Powder, Syntha-6","Protein Powder, Teras Whey","Protein Powder, Teras Whey, Chocolate (grass Fed)","Protein Powder, Tested Nutrition - Chocolate","Protein Powder, Titan Complete Nutrition","Protein Powder, True Nutrition Vegan","Protein Powder, True Protein Whey Protein Isolate Cold-Filtration. Unflavored/unsweetened","Protein Powder, Trutein Pumpkin Pie","Protein Powder, Trutein, Banana Cream","Protein Powder, Trutein, Choc Truffle","Protein Powder, Trutein, Chocolate Mint","Protein Powder, Trutein, Chocolate PB Cup","Protein Powder, Trutein, Cinnabun","Protein Powder, Trutein, Lemon Meringue Pie","Protein Powder, Trutein, Mocha Caramel","Protein Powder, Trutein, Orange Creamsicle","Protein Powder, Trutein, PB Marshmallow Cookie","Protein Powder, Trutein, Red Velvet","Protein Powder, Trutein, Smores","Protein Powder, Trutein, Shamrock Shake","Protein Powder, Trutein, Vanilla","Protein Powder, Ultimate Nutrition Bioactive Whey Sensation 81","Protein Powder, Ultimate Nutrition Iso Sensation","Protein Powder, USN Ultra Whey -100 Premium","Protein Powder, Vega One","Protein Powder, Vega Sport","Protein Powder, VP2","Protein Powder, Vega One Nutritional Shake","Protein Powder, V-Core Complete Nutrition","Protein Powder, Warrior Blend, Vanilla","Protein Powder, Whey Gourmet","Protein Powder, Woman Incredible","Protein Powder, Wheyology All Flavours","Protein Powder, VPX Zero Carb","Ricotta Cheese, Sargento Fat-Free","Sausage, Jimmy Dean","Seafood, Ahi Tuna Sashimi (uncooked)","Seafood, Barramundi","Seafood, Catfish Fillets (Delta Pride)","Seafood, Crab","Seafood, Cod","Seafood, Crawfish (cooked)","Seafood, Flathead","Seafood, Haddock","Seafood, Grouper (cooked)","Seafood, Lobster","Seafood, Kirkland Wild Alaska Sockeye Salmon (canned)","Seafood, Halibut","Seafood, Hake (uncooked)","Seafood, Orange Roughy","Seafood, Monkfish (cooked)","Seafood, Mahi Mahi Grande Gourmet Burger","Seafood, Mahi Mahi","Seafood, Mahi Burger Inland Market","Seafood, Oysters (Raw)","Seafood, Pacific Salmon (raw)","Seafood, Perch","Seafood, Pollock","Seafood, Salmon (Atlantic/Wild)","Seafood, Raincoast Skipjack Tuna (drained)","Seafood, Salmon Pate (John West)","Seafood, Salmon Burger (Alaskan), Trident","Seafood, Salmon (pink, Canned, Bumble Bee Brand)","Seafood, Salmon-Lomi (raw)","Seafood, Salmon, 365 Alaskan Wild (canned)","Seafood, Salmon, Atlantic, Farmed (cooked","Seafood, Sardines, In Extra Virgin Olive Oil","Seafood, Sashimi, Salmon","Seafood, Scallops","Seafood, Sea Bass","Seafood, Snapper","Seafood, Shrimp","Seafood, Sole/Flounder","Seafood, Squid Calamari (uncooked)","Seafood, Swai","Seafood, Tuna Pate (John West)","Seafood, Tilapia","Seafood, Tuna (Yellowfin)","Seafood, Trout","Seafood, Tilefish (cooked)","Turkey Bacon, Columbus","Turkey Bacon, Butterball Fully Cooked","Spiru-Tein Unsweetened (all Flavors)","Seafood, Wild Swordfish Steaks - Whole Catch Brand (from Whole Foods) -","Seafood, Tuna, Canned","Seafood, Tuna Wild Planet Wild Albacore","Turkey Breast, Market Pantry, Oven Roasted Slices","Turkey Breast, Kirkland Oven Browned","Turkey Breast, Butterball Oven Roasted Slices","Turkey Breast, Artisan Slow Roasted","Turkey Bacon, Mattessons Smoked Turkey Rashers (2 Rashers)","Turkey Breast, Oven Roasted (Lillydale)","Turkey Burger, Metro","Turkey Breast, Shady Brook Farms","Turkey Burger, Fresca Naturals","Turkey Burger, Marc Angelo (raw)","Turkey Burger, Perdue 93% Lean","Turkey Ham, Jennie-O","Turkey Pepperoni, Kroger (low Fat)","Turkey Pepperoni, Butterball","Turkey Pepperettes","Turkey Sausage, Applegate, Naturals Savory","Turkey Slices, Applegate","Turkey, Applegate Natural Breast","Turkey Sausage, Marc Angelo Extra Lean","Turkey, Bacon LillyDale Extra Lean","Turkey, Applegate Naturals Uncured Turkey Bacon","Turkey, Boars Head, All Types (oven Roasted, Smoked, Etc)","Turkey, Boarshead All Natural Smoked Breast","Turkey, Burger (Kirkland)","Turkey, Burger Butterball","Turkey, Crumbles, Jimmy Dean","Turkey, Cutlets (Butterball)","Turkey, Cutlets-Honeysuckle White Boneless 99% Fat-Free","Turkey, El Pozo Breast","Turkey, Fresh Creations Sausage","Turkey, Breast","Turkey, Ground, 93% Fat-Free","Turkey, Grimms Farmer Sausage","Turkey, Ground Butterball 98% Lean","Turkey, Ground, Kirkland And Presidents Choice Lean (raw Weight)","Turkey, Ground, 99% Fat-Free","Turkey, Ground, 97% Fat-Free","Turkey, Jennie O Smoked Breast","Turkey, Jenni-O Extra Lean Bacon","Turkey, Jenni-O Thick Cut Bacon","Turkey, Jennie-O (60% Less Fat) Bacon","Turkey, Jennie-O All Natural 95/5 Burger","Turkey, Jennie-O Lean Ham","Turkey, Kirkland Burger (raw)","Turkey, Jennie-O, Mild Breakfast Sausage","Turkey, Jimmy Dean Sausage","Turkey, Kielbasa, Hillshire Farms","Turkey, Lean Bratwurst","Turkey, Lean N Fit Bacon","Turkey, Pepperoni Slices (70% Less Fat)","Turkey, Lily Dale Daystarters Extra Lean Bacon","Turkey, Maple Leaf Natural Selection, Hickory Smoked","Turkey, Oscar Meyer Carving Board Breast","Turkey, Life Smart","Turkey, Presidents Choice Blue Menu Bacon","Turkey, Prime Extra Lean","Turkey, Trader Joes 94% Fat Free Bacon","Veal Cutlets (cooked)","Veal, Cubed (raw)","Venison, Ground 80/20 (venison/beef)","Venison (deer Loin-lean)","Yeast, Whole Foods","Cheese, Lifetime JalapeÃ±o Jack (Fat-Free)","Cheese, Black Diamond String","Chicken, Perdue Fit & Easy Extra Lean Ground (cooked)","Chicken, Boars Head Blazing Buffalo® Style Roasted","Cottage Cheese, Bison Fat-Free","Chips, Quest Protein, All Flavors (BBQ, Sea Salt, Cheddar Sour Cream, Sour Cream & Onion)","Cottage Cheese, Flair","Cottage Cheese, Daisy (Low-Fat)","Cottage Cheese, Kraft Fat-Free","Cottage Cheese, Michigan","Cottage Cheese, Nancy’s Organic Cultured Low Fat","Greek Yogurt, Fage Total, Plain (full Fat)","Greek Yogurt, HEB (Fat-Free)","Protein Powder, MTS, Mint Cookies & Cream","Protein Powder, Isopure Zero Carb Cookies & Cream","Protein Powder, Elite Whey & Casein Blend","Protein Powder, MTS, PB Cookies & Cream","Protein Powder, Muscleology Nitro-Pro Cookies & Cream","Protein Powder, MyProtein True Whey Cookies & Cream","Protein Powder, Quest, Strawberries & Cream","Seafood, Salmon, Bear & Wolf (canned)"],
				"Fat": [ "Almond Butter, Almond Butter: MaraNatha Natural -Roasted No Sodium","Almond Butter, Barney","Almond Butter, Ds Natural Fluffbutter, Bananas Foster","Almond Butter, Justins Organic Maple","Almond Butter, Ds Natural Fluffbutter, Smores","Almond Butter, Kirkland (creamy)","Almond Butter, MaraNatha Creamy No-Stir","Almond Butter, Justins Vanilla","Almond Butter, MaraNatha Crunchy","Almond Butter, Natural","Almond Butter, MaraNatha Dark Chocolate Almond Spread","Almond Butter, Vermont Champlain Cherry","Almond Butter, Snickerdoodle, Buff Bake","Almond Milk, Unsweetened","Artisana Sesame Tahini","Avocado","Almond Spread, Buff Bake Snickerdoodle","Butter","Butter, Artisans Macadamia","Butter, Cashew","Butter, Country Crock Light","Butter, Lurpak Lighter Slightly Salted Spreadable","Butter, Nature Whipped","Butter, Smart Balance","Cacoa Nibs","Cheese, American (full Fat)","Cheese, Cheddar","Cheese, Cabot Extra Sharp","Cheese, Brie","Cheese, Blue","Cheese, Gouda","Cheese, Gorgonzola","Cheese, Goat","Cheese, Feta","Cheese, Colby Jack","Cheese, Chihuahua Mexican Quesadilla","Cheese, Mozzerella (part Skim)","Cheese, Muenster","Cheese, Natural Valley Goat Mozzarella","Cheese, Kirkland Mexican Blend","Cheese, Jarlsberg Deli Thin Sliced Swiss, Reduced Fat","Cheese, Havarti","Cheese, Natural Valley Goat, Colby Jack","Cheese, Natural Valley Goat, Medium Cheddar","Cheese, Parmesan","Cheese, Pepper Jack","Cheese, Presidents Choice Blue Menu Cream Cheese","Cheese, Provolone","Cheese, Ricotta (Whole)","Cheese, Sargento Colby Jack Sticks","Cheese, Pecorino Romano (shredded)","Coconut Butter, Artisana, Cacao Bliss","Cheese, Tillamook Sharp Cheddar Slices","Coconut Butter","Cheese, Swiss","Coconut Butter, MaraNatha","Coconut Butter, Sweet Spread Maple Pancake","Coconut Butter, Sweet Spread Vanilla Cupcake","Coconut Butter, Sweet Spread White Chocolate","Coconut Butter, Sweet Spreads Chocolate Brownie","Coconut Butter, Nutiva","Coconut Butter, Sweet Spread Cinnamon Roll","Coconut Milk (100%), Aroy-D","Coconut Milk, Thai Kitchen Lite","Coconut, Bobs Red Mill Unsweetened Raw","Coconut, Unsweetened","Coconut, Sprouts, Shredded Light","Cookie Butter","Greek Yogurt, Astro Original","Flour, Almond","Flaxseed, Whole","Egg, Yolk","Cream Cheese, Greek Yogurt (everything Bagel Flavor)","Guacamole, GoodFoods","Hazelnut Butter","Hazelnuts","Hazelnut Butter, Justins Organic Chocolate","Guacamole, Wholly Classic Mini Cup","Kirkland, Natural Peanut Butter Chunky","Hummus, Roasted Red Pepper (Publix)","Hummus, Hannah Classic","Hempseed Butter","Macro Natural Almond Spread","Mayonnaise, Hellmans Light","Mayonnaise, Neal Brother","Milk, So Delicious Unsweetened Coconut","Nuts, Almond","Mayonnaise, Best Foods Light","Nuts, Almond Emerald Cocoa Or Vanilla","Nuts, Almonds Blue Diamond Mocha","Nuts, Almonds Blue Diamond Smokehouse","Nuts, Almonds Blue Diamond Toasted Coconut","Nuts, Brazil","Nuts, Cashew","Nuts, Kirkland Whole Mixed Nuts","Nuts, Almonds Planters Pumpkin Spice","Nuts, Macadamia","Nuts, Pecan","Nuts, Walnut","Oil, Avocado, Avolio (Costco)","Oil, Coconut","Oil, Extra Virgin Olive","Peanut Butter, Adams 100% Natural","Oil, Fish (capsule)","Oil, Flaxseed","Oil, Macadamia","Oil, Udos Choice","Olives","Peanut Butter, Blonde Peanut Butter Cup","Peanut Butter, Crazy Richards","Peanut Butter, Earth Balance Coconut And Peanut Spread","Peanut Butter, Dark Chocolate Dreams By The Peanut Butter Co.","Peanut Butter, Earths Pride Organic Creamy","Peanut Butter, Field Day (crunchy)","Peanut Butter, Jif Natural Creamy","Peanut Butter, Jif Whips Salty Caramel","Peanut Butter, Jif Whips W/ Salted Caramel","Peanut Butter, Jif Whips, Maple Brown Sugar","Peanut Butter, Kraft Cinnamon Granola Raisin","Peanut Butter, Krema Crunchy Natural","Peanut Butter, Justins","Peanut Butter, Maranatha","Peanut Butter, Monkey Butter, Dark Choc Cherry","Peanut Butter, Monkey Butter, White Choc Raspberry","Peanut Butter, Naturally More","Peanut Butter, Natural","Peanut Butter, Naturally Nutty-Mocha PB","Peanut Butter, Naturally Nutty-Chocolate Butter Toffee","Peanut Butter, Parkers","Peanut Butter, PB Crave Choco Choco","Peanut Butter, PB Crave Cookie Nookie","Peanut Butter, PB Crave Razzle Dazzle","Peanut Butter, Pics","Peanut Butter, Sanitarium","Peanut Butter, Smart Balance Creamy","Peanut Butter, Skippy Natural","Peanut Butter, Smuckers Natural","Peanut Butter, Smuckers","Peanut Butter, Trader Joes (Creamy Salted)","Peanut Butter, Tree Of Life (crunchy)","Peanut Butter, Wild Friends, All Natural Honey (crunchy)","Peanut Butter, White Rose (crunchy)","Peanuts, Planters Salted","Pecan Butter, Artisana","Pesto, Three Bridges Superfood Pesto Sauce","Pesto, Green","Pistachios","Power Butter","Pumpkin Seeds, In Shell","Salad Dressing, Caesar (Kens Steakhouse Lite)","Salad Dressing, Opa Greek Yogurt, Feta Dill","Seeds, Sesame (kernels, Dried)","Sour Cream, Daisy","Seeds, Sunflower (kernels, Dried)","Sour Cream, Gay Lea","Sunbutter","Sunflower Seed Butter","Sunflower Seed Butter, Once Again Organic","Sunflower Seeds, Trader Joes, Raw","Turkey Bacon (smoked), Shady Brook Farms","Turkey Bacon, Oscar Mayer (cooked)","Walnut Butter","Yumm! Sauce, Cafe Yumm","Coconut & Peanut Spread, Earth Balance","Nut & Seed Butter, Nuttzo Organic Seven","Peanut Butter, Naturally Nutty â€“ Honey Roasted Cinnamon","Peanut Butter, Krema, Smooth & Creamy","Peanut Butter, Naturally Nutty â€“ Chocolate Cherry","Peanut Butter, Peanut Butter & Co. Cinnamon Raisin Swirl","Peanut Butter, Peanut Butter & Co. Mighty Maple","Peanut Butter, White Chocolate Wonderful By The Peanut Butter & Co","Peanut Spread, Earth Balance, Coconut & Peanut"]

				}

				input.onclick = indo;
				input.onfocus = indo;

				function indo() {
				if ( !check[input.value] ) return;
				if (ia.ul.childNodes.length === 0) {
					ia.minChars = 0;
					ia.evaluate();
				}
				else if (oa.ul.hasAttribute('hidden')) {
					ia.open();
				}
				else {
					//ia.close();
				}
				return false;

				}

				output.onclick = outdo;
				output.onfocus = outdo;

				function outdo() {
				if (oa.ul.childNodes.length === 0) {
					oa.minChars = 0;
					oa.evaluate();
				}


				tim();

				if (oa.ul.hasAttribute('hidden')) {
					oa.open();
				}
				else {
					//oa.close();
				}


				pause = true;
				return false;
				}

				function tim() {
				var ans = check[input.value];
				output.value = "";
				if ( ans ) {
					oa.list = list[ans];
				} else {
					oa.list = [];
				}
				}

				input.onchange = tim;
				input.onkeyup = tim;
				input.onblur = tim;            	
            
            }

            function c(b, c, d) {
                if (void 0 == b || 0 > b) return "CalculatorPro.com";
                var e = "Free Calculator,Free Online Calculator,CalculatorPro.com,www.CalculatorPro.com,CalculatorPro,Calculator Pro,Online Calculator,Get this Widget,Get this Calculator,See more Calculators,See more Widgets,Get a Free Widget,Find more Calculators,Browse other Calculators,Need a Similar Calculator?,Embed this Calculator,Find Similar Calculators,Get Free Calculators";
                0 != c && (e += "," + c), e += "," + d;
                var f = e.split(",");
                return b >= f.length ? "CalculatorPro.com" : a.trim(f[b])
            }

            function d(a) {
                return void 0 != i.currencysymbol ? a.replace(/\$/g, calulator.currencysymbol) : a
            }

            function m() {
                var b = [],
                    c = 0;
                return a.each(i.fields, function(d, e) {
                    var f = e;
                    f.label = a.trim(i["label" + d] || e.label), b.push(f), e.options && a.each(e.options, function(b, d) {
                        d.label = a.trim(i["option" + c++] || d.label), d.value || (d.value = d.label)
                    })
                }), b
            }

            function n(a) {
                if (void 0 != i.auxileryreplace && void 0 != i.optionalTranslations)
                    for (var b = 0; b < i.auxileryreplace.length; ++b) "" != i.auxileryreplace[b] && "" != i.optionalTranslations[b] && i.auxileryreplace[b] != i.optionalTranslations[b] && (a = a.replace(i.optionalTranslations[b], i.auxileryreplace[b]));
                return a
            }

            function o(b, c) {
                if (i.state.minHeight || a.browser.msie && a.browser.version.slice(0, 1) <= 9 && a.browser.version.slice(0, 1) >= 3 || (i.state.minHeight = b.height()), !i.state.minHeightInner) {
                    var d = c.parent().outerHeight(!0) + c.outerHeight(!0) + 3;
                    a.browser.msie && a.browser.version.slice(0, 1) <= 7 && a.browser.version.slice(0, 1) >= 3 && d > 63 && (d -= 63), i.state.minHeightInner = d
                }
            }

            function p(a) {
                var b = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                    c = !0;
                return i.first_name_enabled === !0 && "" === a.find("[name='input_required_fname']").val() && (c = !1), i.last_name_enabled === !0 && "" === a.find("[name='input_required_lname']").val() && (c = !1), i.phone_number_enabled === !0 && "" === a.find("[name='input_required_phone']").val() && (c = !1), i.email_address_enabled === !0 && b.test(a.find("[name='input_required_email']").val()) === !1 && (c = !1), i.zip_code_enabled === !0 && "" === a.find("[name='input_required_zip']").val() && (c = !1), c
            }

            function q(b) {
                void 0 != i.formattableanswer && (b += "&formattedAnswer=" + encodeURIComponent(i.formattableanswer));
                var c = ("https:" == j && 1 == i.has_enterprise ? j : "http:") + "//" + h + "/calculate?callback=?";
                return a.ajax({
                    url: c,
                    dataType: "json",
                    data: b
                })
            }

            function r() {
                var b = a("<link>", {
                        rel: "stylesheet",
                        type: "text/css",
                        href: "//" + g + "/wp-content/plugins/calcs/css/widgetV4.css"
                    }),
                    c = a("<link>", {
                        rel: "stylesheet",
                        type: "text/css",
                        href: "//calculatorpro.s3.amazonaws.com/cleanslate.css"
                    });
                c.appendTo("head"), b.appendTo("head")
            }

            function s(b) {
                for (; !a(b).is("div");) {
                    var c = b,
                        d = a(b).prev();
                    b = 0 == a(d).length ? a(b).parent() : d, (a(c).is("a") || a(c).is("br")) && a(c).remove(), a(c).is("p") && a(c).has("a") && a(c).find("a").remove()
                }
                return b[0]
            }

            function t(a) {
                for (var b = {}, c = 0; c < a.length; ++c) b[a[c].name] = a[c].value;
                for (var c = 0; c < i.numFields; ++c) {
                    var d = "input" + c;
                    if (i.fields[c].select === !0)
                        for (var e = 0; e < i.fields[c].options.length; ++e) i.fields[c].options[e].selected = i.fields[c].options[e].label === b[d] ? !0 : !1;
                    i.fields[c].input === !0 && (i.fields[c].value = b[d])
                }
            }
            var u = s(f),
                v = a(u).data();
            if (r(), v.hash) var w = ("https:" == j ? j : "http:") + "//" + h + "/embed/" + v.hash + "?callback=?";
            else if (v.calcid) var w = ("https:" == j ? j : "http:") + "//" + h + "/calc/" + v.calcid + "?callback=?";
            a.getJSON(w, {
                normalized: !0
            }, function(d) {
                i = d;
                var e = a.extend(!0, {}, i.customizations);
                i.customizations = null, a.extend(!0, i, a.extend(!0, k, e)), i.state = a.extend({}, l), i.cleanslate = !0, i.calculator = {
                    id: i.id,
                    hash: v.hash,
                    answerFormat: i.answerFormat
                }, delete i.id, delete i.answerFormat, m(i), i.numFields = i.fields.length, i.showLink = i.anchor != -1 * (7 * i.calculator.id + 36), i.dev_domain = g, i.tag = c(i.anchor, i.anchorTags, i.title), void 0 != i.custinputs && i.custinputs.length != i.fields.length + 1 && (i.custinputs = void 0), b()
            }), a(u).on("click", ".widgetForm .widgetSubmit", function(c) {
                c.preventDefault();
                var e = a(this).closest("form"),
                    f = a(this);
                if (t(e.serializeArray()), o(e, f), i.has_leads) {
                    if (!i.state.showLeadForm) return i.state.showLeadForm = !0, b(), !1;
                    if (!p(e)) return !1
                }
                i.state.showLeadForm = !1, i.state.showAnswer = !0;
                var g = e.serialize();
                return b(), q(g).done(function(a) {
                    i.state.preAnswer = d(a.before_answer), i.state.answer = n(d(a.answer)) + " " + d(a.after_answer), i.state.showLoading = !1, b()
                }).fail(function() {
                    i.state.loadingError = "An error occured, please check your inputs.", b()
                }), !1
            }), a(u).on("click", ".widgetForm .backButton", function() {
                return i.state = e.extend({}, l), b(), !1
            })
        })
    }

    function c() {
        var a = document.getElementById("wordpress_preview_calc_unique");
        if (a) return a;
        var b = document.getElementsByTagName("script"),
            c = b.length - 1;
        return b[c]
    }

    function d() {
        ! function(a) {
            function b() {
                var a = document.createElement("input"),
                    b = "onpaste";
                return a.setAttribute(b, ""), "function" == typeof a[b] ? "paste" : "input"
            }
            var c, d = b() + ".mask",
                e = navigator.userAgent,
                f = /iphone/i.test(e),
                g = /android/i.test(e);
            a.mask = {
                definitions: {
                    9: "[0-9]",
                    a: "[A-Za-z]",
                    "*": "[A-Za-z0-9]"
                },
                dataName: "rawMaskFn",
                placeholder: "_"
            }, a.fn.extend({
                caret: function(a, b) {
                    var c;
                    return 0 === this.length || this.is(":hidden") ? void 0 : "number" == typeof a ? (b = "number" == typeof b ? b : a, this.each(function() {
                        this.setSelectionRange ? this.setSelectionRange(a, b) : this.createTextRange && (c = this.createTextRange(), c.collapse(!0), c.moveEnd("character", b), c.moveStart("character", a), c.select())
                    })) : (this[0].setSelectionRange ? (a = this[0].selectionStart, b = this[0].selectionEnd) : document.selection && document.selection.createRange && (c = document.selection.createRange(), a = 0 - c.duplicate().moveStart("character", -1e5), b = a + c.text.length), {
                        begin: a,
                        end: b
                    })
                },
                unmask: function() {
                    return this.trigger("unmask")
                },
                mask: function(b, e) {
                    var h, i, j, k, l, m;
                    return !b && this.length > 0 ? (h = a(this[0]), h.data(a.mask.dataName)()) : (e = a.extend({
                        placeholder: a.mask.placeholder,
                        completed: null
                    }, e), i = a.mask.definitions, j = [], k = m = b.length, l = null, a.each(b.split(""), function(a, b) {
                        "?" == b ? (m--, k = a) : i[b] ? (j.push(RegExp(i[b])), null === l && (l = j.length - 1)) : j.push(null)
                    }), this.trigger("unmask").each(function() {
                        function h(a) {
                            for (; m > ++a && !j[a];);
                            return a
                        }

                        function n(a) {
                            for (; --a >= 0 && !j[a];);
                            return a
                        }

                        function o(a, b) {
                            var c, d;
                            if (!(0 > a)) {
                                for (c = a, d = h(b); m > c; c++)
                                    if (j[c]) {
                                        if (!(m > d && j[c].test(w[d]))) break;
                                        w[c] = w[d], w[d] = e.placeholder, d = h(d)
                                    }
                                t(), v.caret(Math.max(l, a))
                            }
                        }

                        function p(a) {
                            var b, c, d, f;
                            for (b = a, c = e.placeholder; m > b; b++)
                                if (j[b]) {
                                    if (d = h(b), f = w[b], w[b] = c, !(m > d && j[d].test(f))) break;
                                    c = f
                                }
                        }

                        function q(a) {
                            var b, c, d, e = a.which;
                            8 === e || 46 === e || f && 127 === e ? (b = v.caret(), c = b.begin, d = b.end, 0 === d - c && (c = 46 !== e ? n(c) : d = h(c - 1), d = 46 === e ? h(d) : d), s(c, d), o(c, d - 1), a.preventDefault()) : 27 == e && (v.val(x), v.caret(0, u()), a.preventDefault())
                        }

                        function r(b) {
                            var c, d, f, i = b.which,
                                k = v.caret();
                            b.ctrlKey || b.altKey || b.metaKey || 32 > i || i && (0 !== k.end - k.begin && (s(k.begin, k.end), o(k.begin, k.end - 1)), c = h(k.begin - 1), m > c && (d = String.fromCharCode(i), j[c].test(d) && (p(c), w[c] = d, t(), f = h(c), g ? setTimeout(a.proxy(a.fn.caret, v, f), 0) : v.caret(f), e.completed && f >= m && e.completed.call(v))), b.preventDefault())
                        }

                        function s(a, b) {
                            var c;
                            for (c = a; b > c && m > c; c++) j[c] && (w[c] = e.placeholder)
                        }

                        function t() {
                            v.val(w.join(""))
                        }

                        function u(a) {
                            var b, c, d = v.val(),
                                f = -1;
                            for (b = 0, pos = 0; m > b; b++)
                                if (j[b]) {
                                    for (w[b] = e.placeholder; pos++ < d.length;)
                                        if (c = d.charAt(pos - 1), j[b].test(c)) {
                                            w[b] = c, f = b;
                                            break
                                        }
                                    if (pos > d.length) break
                                } else w[b] === d.charAt(pos) && b !== k && (pos++, f = b);
                            return a ? t() : k > f + 1 ? (v.val(""), s(0, m)) : (t(), v.val(v.val().substring(0, f + 1))), k ? b : l
                        }
                        var v = a(this),
                            w = a.map(b.split(""), function(a) {
                                return "?" != a ? i[a] ? e.placeholder : a : void 0
                            }),
                            x = v.val();
                        v.data(a.mask.dataName, function() {
                            return a.map(w, function(a, b) {
                                return j[b] && a != e.placeholder ? a : null
                            }).join("")
                        }), v.attr("readonly") || v.one("unmask", function() {
                            v.unbind(".mask").removeData(a.mask.dataName)
                        }).bind("focus.mask", function() {
                            clearTimeout(c);
                            var a;
                            x = v.val(), a = u(), c = setTimeout(function() {
                                t(), a == b.length ? v.caret(0, a) : v.caret(a)
                            }, 10)
                        }).bind("blur.mask", function() {
                            u(), v.val() != x && v.change()
                        }).bind("keydown.mask", q).bind("keypress.mask", r).bind(d, function() {
                            setTimeout(function() {
                                var a = u(!0);
                                v.caret(a), e.completed && a == v.val().length && e.completed.call(v)
                            }, 0)
                        }), u()
                    }))
                }
            })
        }(e)
    }
    var e, f = c(),
        g = "www.calculatorpro.com",
        h = "api.calculatorpro.com",
        i = null,
        j = window.location.protocol,
        k = {
            backcolor: "#378CAF",
            bordcolor: "#006395",
            textcolor: "#ffffff",
            calcwidth: "260px",
            textsize: "16px"
        },
        l = {
            preAnswer: null,
            answer: null,
            loadingError: null,
            showAnswer: !1,
            showLoading: !0,
            showLeadForm: !1,
            minHeight: null,
            minHeightInner: null
        };
    if (void 0 === window.jQuery || "1.8.2" !== window.jQuery.fn.jquery) {
        var m = document.createElement("script");
        m.setAttribute("type", "text/javascript"), m.setAttribute("src", "//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"), m.readyState ? m.onreadystatechange = function() {
            ("complete" == this.readyState || "loaded" == this.readyState) && a()
        } : m.onload = a, (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(m)
    } else e = window.jQuery, b()
}();
var Handlebars = function() {
    var a = function() {
            "use strict";

            function a(a) {
                this.string = a
            }
            var b;
            return a.prototype.toString = function() {
                return "" + this.string
            }, b = a
        }(),
        b = function(a) {
            "use strict";

            function b(a) {
                return h[a] || "&amp;"
            }

            function c(a, b) {
                for (var c in b) Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c])
            }

            function d(a) {
                return a instanceof g ? a.toString() : a || 0 === a ? (a = "" + a, j.test(a) ? a.replace(i, b) : a) : ""
            }

            function e(a) {
                return a || 0 === a ? m(a) && 0 === a.length ? !0 : !1 : !0
            }
            var f = {},
                g = a,
                h = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "`": "&#x60;"
                },
                i = /[&<>"'`]/g,
                j = /[&<>"'`]/;
            f.extend = c;
            var k = Object.prototype.toString;
            f.toString = k;
            var l = function(a) {
                return "function" == typeof a
            };
            l(/x/) && (l = function(a) {
                return "function" == typeof a && "[object Function]" === k.call(a)
            });
            var l;
            f.isFunction = l;
            var m = Array.isArray || function(a) {
                return a && "object" == typeof a ? "[object Array]" === k.call(a) : !1
            };
            return f.isArray = m, f.escapeExpression = d, f.isEmpty = e, f
        }(a),
        c = function() {
            "use strict";

            function a(a, b) {
                var d;
                b && b.firstLine && (d = b.firstLine, a += " - " + d + ":" + b.firstColumn);
                for (var e = Error.prototype.constructor.call(this, a), f = 0; f < c.length; f++) this[c[f]] = e[c[f]];
                d && (this.lineNumber = d, this.column = b.firstColumn)
            }
            var b, c = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];
            return a.prototype = new Error, b = a
        }(),
        d = function(a, b) {
            "use strict";

            function c(a, b) {
                this.helpers = a || {}, this.partials = b || {}, d(this)
            }

            function d(a) {
                a.registerHelper("helperMissing", function(a) {
                    if (2 === arguments.length) return void 0;
                    throw new h("Missing helper: '" + a + "'")
                }), a.registerHelper("blockHelperMissing", function(b, c) {
                    var d = c.inverse || function() {},
                        e = c.fn;
                    return m(b) && (b = b.call(this)), b === !0 ? e(this) : b === !1 || null == b ? d(this) : l(b) ? b.length > 0 ? a.helpers.each(b, c) : d(this) : e(b)
                }), a.registerHelper("each", function(a, b) {
                    var c, d = b.fn,
                        e = b.inverse,
                        f = 0,
                        g = "";
                    if (m(a) && (a = a.call(this)), b.data && (c = q(b.data)), a && "object" == typeof a)
                        if (l(a))
                            for (var h = a.length; h > f; f++) c && (c.index = f, c.first = 0 === f, c.last = f === a.length - 1), g += d(a[f], {
                                data: c
                            });
                        else
                            for (var i in a) a.hasOwnProperty(i) && (c && (c.key = i, c.index = f, c.first = 0 === f), g += d(a[i], {
                                data: c
                            }), f++);
                    return 0 === f && (g = e(this)), g
                }), a.registerHelper("if", function(a, b) {
                    return m(a) && (a = a.call(this)), !b.hash.includeZero && !a || g.isEmpty(a) ? b.inverse(this) : b.fn(this)
                }), a.registerHelper("unless", function(b, c) {
                    return a.helpers["if"].call(this, b, {
                        fn: c.inverse,
                        inverse: c.fn,
                        hash: c.hash
                    })
                }), a.registerHelper("with", function(a, b) {
                    return m(a) && (a = a.call(this)), g.isEmpty(a) ? void 0 : b.fn(a)
                }), a.registerHelper("log", function(b, c) {
                    var d = c.data && null != c.data.level ? parseInt(c.data.level, 10) : 1;
                    a.log(d, b)
                })
            }

            function e(a, b) {
                p.log(a, b)
            }
            var f = {},
                g = a,
                h = b,
                i = "1.3.0";
            f.VERSION = i;
            var j = 4;
            f.COMPILER_REVISION = j;
            var k = {
                1: "<= 1.0.rc.2",
                2: "== 1.0.0-rc.3",
                3: "== 1.0.0-rc.4",
                4: ">= 1.0.0"
            };
            f.REVISION_CHANGES = k;
            var l = g.isArray,
                m = g.isFunction,
                n = g.toString,
                o = "[object Object]";
            f.HandlebarsEnvironment = c, c.prototype = {
                constructor: c,
                logger: p,
                log: e,
                registerHelper: function(a, b, c) {
                    if (n.call(a) === o) {
                        if (c || b) throw new h("Arg not supported with multiple helpers");
                        g.extend(this.helpers, a)
                    } else c && (b.not = c), this.helpers[a] = b
                },
                registerPartial: function(a, b) {
                    n.call(a) === o ? g.extend(this.partials, a) : this.partials[a] = b
                }
            };
            var p = {
                methodMap: {
                    0: "debug",
                    1: "info",
                    2: "warn",
                    3: "error"
                },
                DEBUG: 0,
                INFO: 1,
                WARN: 2,
                ERROR: 3,
                level: 3,
                log: function(a, b) {
                    if (p.level <= a) {
                        var c = p.methodMap[a];
                        "undefined" != typeof console && console[c] && console[c].call(console, b)
                    }
                }
            };
            f.logger = p, f.log = e;
            var q = function(a) {
                var b = {};
                return g.extend(b, a), b
            };
            return f.createFrame = q, f
        }(b, c),
        e = function(a, b, c) {
            "use strict";

            function d(a) {
                var b = a && a[0] || 1,
                    c = m;
                if (b !== c) {
                    if (c > b) {
                        var d = n[c],
                            e = n[b];
                        throw new l("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + d + ") or downgrade your runtime to an older version (" + e + ").")
                    }
                    throw new l("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + a[1] + ").")
                }
            }

            function e(a, b) {
                if (!b) throw new l("No environment passed to template");
                var c = function(a, c, d, e, f, g) {
                        var h = b.VM.invokePartial.apply(this, arguments);
                        if (null != h) return h;
                        if (b.compile) {
                            var i = {
                                helpers: e,
                                partials: f,
                                data: g
                            };
                            return f[c] = b.compile(a, {
                                data: void 0 !== g
                            }, b), f[c](d, i)
                        }
                        throw new l("The partial " + c + " could not be compiled when running in runtime-only mode")
                    },
                    d = {
                        escapeExpression: k.escapeExpression,
                        invokePartial: c,
                        programs: [],
                        program: function(a, b, c) {
                            var d = this.programs[a];
                            return c ? d = g(a, b, c) : d || (d = this.programs[a] = g(a, b)), d
                        },
                        merge: function(a, b) {
                            var c = a || b;
                            return a && b && a !== b && (c = {}, k.extend(c, b), k.extend(c, a)), c
                        },
                        programWithDepth: b.VM.programWithDepth,
                        noop: b.VM.noop,
                        compilerInfo: null
                    };
                return function(c, e) {
                    e = e || {};
                    var f, g, h = e.partial ? e : b;
                    e.partial || (f = e.helpers, g = e.partials);
                    var i = a.call(d, h, c, f, g, e.data);
                    return e.partial || b.VM.checkRevision(d.compilerInfo), i
                }
            }

            function f(a, b, c) {
                var d = Array.prototype.slice.call(arguments, 3),
                    e = function(a, e) {
                        return e = e || {}, b.apply(this, [a, e.data || c].concat(d))
                    };
                return e.program = a, e.depth = d.length, e
            }

            function g(a, b, c) {
                var d = function(a, d) {
                    return d = d || {}, b(a, d.data || c)
                };
                return d.program = a, d.depth = 0, d
            }

            function h(a, b, c, d, e, f) {
                var g = {
                    partial: !0,
                    helpers: d,
                    partials: e,
                    data: f
                };
                if (void 0 === a) throw new l("The partial " + b + " could not be found");
                return a instanceof Function ? a(c, g) : void 0
            }

            function i() {
                return ""
            }
            var j = {},
                k = a,
                l = b,
                m = c.COMPILER_REVISION,
                n = c.REVISION_CHANGES;
            return j.checkRevision = d, j.template = e, j.programWithDepth = f, j.program = g, j.invokePartial = h, j.noop = i, j
        }(b, c, d),
        f = function(a, b, c, d, e) {
            "use strict";
            var f, g = a,
                h = b,
                i = c,
                j = d,
                k = e,
                l = function() {
                    var a = new g.HandlebarsEnvironment;
                    return j.extend(a, g), a.SafeString = h, a.Exception = i, a.Utils = j, a.VM = k, a.template = function(b) {
                        return k.template(b, a)
                    }, a
                },
                m = l();
            return m.create = l, f = m
        }(d, a, c, b, e),
        g = function(a) {
            "use strict";

            function b(a) {
                a = a || {}, this.firstLine = a.first_line, this.firstColumn = a.first_column, this.lastColumn = a.last_column, this.lastLine = a.last_line
            }
            var c, d = a,
                e = {
                    ProgramNode: function(a, c, d, f) {
                        var g, h;
                        3 === arguments.length ? (f = d, d = null) : 2 === arguments.length && (f = c, c = null), b.call(this, f), this.type = "program", this.statements = a, this.strip = {}, d ? (h = d[0], h ? (g = {
                            first_line: h.firstLine,
                            last_line: h.lastLine,
                            last_column: h.lastColumn,
                            first_column: h.firstColumn
                        }, this.inverse = new e.ProgramNode(d, c, g)) : this.inverse = new e.ProgramNode(d, c), this.strip.right = c.left) : c && (this.strip.left = c.right)
                    },
                    MustacheNode: function(a, c, d, f, g) {
                        if (b.call(this, g), this.type = "mustache", this.strip = f, null != d && d.charAt) {
                            var h = d.charAt(3) || d.charAt(2);
                            this.escaped = "{" !== h && "&" !== h
                        } else this.escaped = !!d;
                        this.sexpr = a instanceof e.SexprNode ? a : new e.SexprNode(a, c), this.sexpr.isRoot = !0, this.id = this.sexpr.id, this.params = this.sexpr.params, this.hash = this.sexpr.hash, this.eligibleHelper = this.sexpr.eligibleHelper, this.isHelper = this.sexpr.isHelper
                    },
                    SexprNode: function(a, c, d) {
                        b.call(this, d), this.type = "sexpr", this.hash = c;
                        var e = this.id = a[0],
                            f = this.params = a.slice(1),
                            g = this.eligibleHelper = e.isSimple;
                        this.isHelper = g && (f.length || c)
                    },
                    PartialNode: function(a, c, d, e) {
                        b.call(this, e), this.type = "partial", this.partialName = a, this.context = c, this.strip = d
                    },
                    BlockNode: function(a, c, e, f, g) {
                        if (b.call(this, g), a.sexpr.id.original !== f.path.original) throw new d(a.sexpr.id.original + " doesn't match " + f.path.original, this);
                        this.type = "block", this.mustache = a, this.program = c, this.inverse = e, this.strip = {
                            left: a.strip.left,
                            right: f.strip.right
                        }, (c || e).strip.left = a.strip.right, (e || c).strip.right = f.strip.left, e && !c && (this.isInverse = !0)
                    },
                    ContentNode: function(a, c) {
                        b.call(this, c), this.type = "content", this.string = a
                    },
                    HashNode: function(a, c) {
                        b.call(this, c), this.type = "hash", this.pairs = a
                    },
                    IdNode: function(a, c) {
                        b.call(this, c), this.type = "ID";
                        for (var e = "", f = [], g = 0, h = 0, i = a.length; i > h; h++) {
                            var j = a[h].part;
                            if (e += (a[h].separator || "") + j, ".." === j || "." === j || "this" === j) {
                                if (f.length > 0) throw new d("Invalid path: " + e, this);
                                ".." === j ? g++ : this.isScoped = !0
                            } else f.push(j)
                        }
                        this.original = e, this.parts = f, this.string = f.join("."), this.depth = g, this.isSimple = 1 === a.length && !this.isScoped && 0 === g, this.stringModeValue = this.string
                    },
                    PartialNameNode: function(a, c) {
                        b.call(this, c), this.type = "PARTIAL_NAME", this.name = a.original
                    },
                    DataNode: function(a, c) {
                        b.call(this, c), this.type = "DATA", this.id = a
                    },
                    StringNode: function(a, c) {
                        b.call(this, c), this.type = "STRING", this.original = this.string = this.stringModeValue = a
                    },
                    IntegerNode: function(a, c) {
                        b.call(this, c), this.type = "INTEGER", this.original = this.integer = a, this.stringModeValue = Number(a)
                    },
                    BooleanNode: function(a, c) {
                        b.call(this, c), this.type = "BOOLEAN", this.bool = a, this.stringModeValue = "true" === a
                    },
                    CommentNode: function(a, c) {
                        b.call(this, c), this.type = "comment", this.comment = a
                    }
                };
            return c = e
        }(c),
        h = function() {
            "use strict";
            var a, b = function() {
                function a(a, b) {
                    return {
                        left: "~" === a.charAt(2),
                        right: "~" === b.charAt(0) || "~" === b.charAt(1)
                    }
                }

                function b() {
                    this.yy = {}
                }
                var c = {
                        trace: function() {},
                        yy: {},
                        symbols_: {
                            error: 2,
                            root: 3,
                            statements: 4,
                            EOF: 5,
                            program: 6,
                            simpleInverse: 7,
                            statement: 8,
                            openInverse: 9,
                            closeBlock: 10,
                            openBlock: 11,
                            mustache: 12,
                            partial: 13,
                            CONTENT: 14,
                            COMMENT: 15,
                            OPEN_BLOCK: 16,
                            sexpr: 17,
                            CLOSE: 18,
                            OPEN_INVERSE: 19,
                            OPEN_ENDBLOCK: 20,
                            path: 21,
                            OPEN: 22,
                            OPEN_UNESCAPED: 23,
                            CLOSE_UNESCAPED: 24,
                            OPEN_PARTIAL: 25,
                            partialName: 26,
                            partial_option0: 27,
                            sexpr_repetition0: 28,
                            sexpr_option0: 29,
                            dataName: 30,
                            param: 31,
                            STRING: 32,
                            INTEGER: 33,
                            BOOLEAN: 34,
                            OPEN_SEXPR: 35,
                            CLOSE_SEXPR: 36,
                            hash: 37,
                            hash_repetition_plus0: 38,
                            hashSegment: 39,
                            ID: 40,
                            EQUALS: 41,
                            DATA: 42,
                            pathSegments: 43,
                            SEP: 44,
                            $accept: 0,
                            $end: 1
                        },
                        terminals_: {
                            2: "error",
                            5: "EOF",
                            14: "CONTENT",
                            15: "COMMENT",
                            16: "OPEN_BLOCK",
                            18: "CLOSE",
                            19: "OPEN_INVERSE",
                            20: "OPEN_ENDBLOCK",
                            22: "OPEN",
                            23: "OPEN_UNESCAPED",
                            24: "CLOSE_UNESCAPED",
                            25: "OPEN_PARTIAL",
                            32: "STRING",
                            33: "INTEGER",
                            34: "BOOLEAN",
                            35: "OPEN_SEXPR",
                            36: "CLOSE_SEXPR",
                            40: "ID",
                            41: "EQUALS",
                            42: "DATA",
                            44: "SEP"
                        },
                        productions_: [0, [3, 2],
                            [3, 1],
                            [6, 2],
                            [6, 3],
                            [6, 2],
                            [6, 1],
                            [6, 1],
                            [6, 0],
                            [4, 1],
                            [4, 2],
                            [8, 3],
                            [8, 3],
                            [8, 1],
                            [8, 1],
                            [8, 1],
                            [8, 1],
                            [11, 3],
                            [9, 3],
                            [10, 3],
                            [12, 3],
                            [12, 3],
                            [13, 4],
                            [7, 2],
                            [17, 3],
                            [17, 1],
                            [31, 1],
                            [31, 1],
                            [31, 1],
                            [31, 1],
                            [31, 1],
                            [31, 3],
                            [37, 1],
                            [39, 3],
                            [26, 1],
                            [26, 1],
                            [26, 1],
                            [30, 2],
                            [21, 1],
                            [43, 3],
                            [43, 1],
                            [27, 0],
                            [27, 1],
                            [28, 0],
                            [28, 2],
                            [29, 0],
                            [29, 1],
                            [38, 1],
                            [38, 2]
                        ],
                        performAction: function(b, c, d, e, f, g) {
                            var h = g.length - 1;
                            switch (f) {
                                case 1:
                                    return new e.ProgramNode(g[h - 1], this._$);
                                case 2:
                                    return new e.ProgramNode([], this._$);
                                case 3:
                                    this.$ = new e.ProgramNode([], g[h - 1], g[h], this._$);
                                    break;
                                case 4:
                                    this.$ = new e.ProgramNode(g[h - 2], g[h - 1], g[h], this._$);
                                    break;
                                case 5:
                                    this.$ = new e.ProgramNode(g[h - 1], g[h], [], this._$);
                                    break;
                                case 6:
                                    this.$ = new e.ProgramNode(g[h], this._$);
                                    break;
                                case 7:
                                    this.$ = new e.ProgramNode([], this._$);
                                    break;
                                case 8:
                                    this.$ = new e.ProgramNode([], this._$);
                                    break;
                                case 9:
                                    this.$ = [g[h]];
                                    break;
                                case 10:
                                    g[h - 1].push(g[h]), this.$ = g[h - 1];
                                    break;
                                case 11:
                                    this.$ = new e.BlockNode(g[h - 2], g[h - 1].inverse, g[h - 1], g[h], this._$);
                                    break;
                                case 12:
                                    this.$ = new e.BlockNode(g[h - 2], g[h - 1], g[h - 1].inverse, g[h], this._$);
                                    break;
                                case 13:
                                    this.$ = g[h];
                                    break;
                                case 14:
                                    this.$ = g[h];
                                    break;
                                case 15:
                                    this.$ = new e.ContentNode(g[h], this._$);
                                    break;
                                case 16:
                                    this.$ = new e.CommentNode(g[h], this._$);
                                    break;
                                case 17:
                                    this.$ = new e.MustacheNode(g[h - 1], null, g[h - 2], a(g[h - 2], g[h]), this._$);
                                    break;
                                case 18:
                                    this.$ = new e.MustacheNode(g[h - 1], null, g[h - 2], a(g[h - 2], g[h]), this._$);
                                    break;
                                case 19:
                                    this.$ = {
                                        path: g[h - 1],
                                        strip: a(g[h - 2], g[h])
                                    };
                                    break;
                                case 20:
                                    this.$ = new e.MustacheNode(g[h - 1], null, g[h - 2], a(g[h - 2], g[h]), this._$);
                                    break;
                                case 21:
                                    this.$ = new e.MustacheNode(g[h - 1], null, g[h - 2], a(g[h - 2], g[h]), this._$);
                                    break;
                                case 22:
                                    this.$ = new e.PartialNode(g[h - 2], g[h - 1], a(g[h - 3], g[h]), this._$);
                                    break;
                                case 23:
                                    this.$ = a(g[h - 1], g[h]);
                                    break;
                                case 24:
                                    this.$ = new e.SexprNode([g[h - 2]].concat(g[h - 1]), g[h], this._$);
                                    break;
                                case 25:
                                    this.$ = new e.SexprNode([g[h]], null, this._$);
                                    break;
                                case 26:
                                    this.$ = g[h];
                                    break;
                                case 27:
                                    this.$ = new e.StringNode(g[h], this._$);
                                    break;
                                case 28:
                                    this.$ = new e.IntegerNode(g[h], this._$);
                                    break;
                                case 29:
                                    this.$ = new e.BooleanNode(g[h], this._$);
                                    break;
                                case 30:
                                    this.$ = g[h];
                                    break;
                                case 31:
                                    g[h - 1].isHelper = !0, this.$ = g[h - 1];
                                    break;
                                case 32:
                                    this.$ = new e.HashNode(g[h], this._$);
                                    break;
                                case 33:
                                    this.$ = [g[h - 2], g[h]];
                                    break;
                                case 34:
                                    this.$ = new e.PartialNameNode(g[h], this._$);
                                    break;
                                case 35:
                                    this.$ = new e.PartialNameNode(new e.StringNode(g[h], this._$), this._$);
                                    break;
                                case 36:
                                    this.$ = new e.PartialNameNode(new e.IntegerNode(g[h], this._$));
                                    break;
                                case 37:
                                    this.$ = new e.DataNode(g[h], this._$);
                                    break;
                                case 38:
                                    this.$ = new e.IdNode(g[h], this._$);
                                    break;
                                case 39:
                                    g[h - 2].push({
                                        part: g[h],
                                        separator: g[h - 1]
                                    }), this.$ = g[h - 2];
                                    break;
                                case 40:
                                    this.$ = [{
                                        part: g[h]
                                    }];
                                    break;
                                case 43:
                                    this.$ = [];
                                    break;
                                case 44:
                                    g[h - 1].push(g[h]);
                                    break;
                                case 47:
                                    this.$ = [g[h]];
                                    break;
                                case 48:
                                    g[h - 1].push(g[h])
                            }
                        },
                        table: [{
                            3: 1,
                            4: 2,
                            5: [1, 3],
                            8: 4,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            1: [3]
                        }, {
                            5: [1, 16],
                            8: 17,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            1: [2, 2]
                        }, {
                            5: [2, 9],
                            14: [2, 9],
                            15: [2, 9],
                            16: [2, 9],
                            19: [2, 9],
                            20: [2, 9],
                            22: [2, 9],
                            23: [2, 9],
                            25: [2, 9]
                        }, {
                            4: 20,
                            6: 18,
                            7: 19,
                            8: 4,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 21],
                            20: [2, 8],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            4: 20,
                            6: 22,
                            7: 19,
                            8: 4,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 21],
                            20: [2, 8],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            5: [2, 13],
                            14: [2, 13],
                            15: [2, 13],
                            16: [2, 13],
                            19: [2, 13],
                            20: [2, 13],
                            22: [2, 13],
                            23: [2, 13],
                            25: [2, 13]
                        }, {
                            5: [2, 14],
                            14: [2, 14],
                            15: [2, 14],
                            16: [2, 14],
                            19: [2, 14],
                            20: [2, 14],
                            22: [2, 14],
                            23: [2, 14],
                            25: [2, 14]
                        }, {
                            5: [2, 15],
                            14: [2, 15],
                            15: [2, 15],
                            16: [2, 15],
                            19: [2, 15],
                            20: [2, 15],
                            22: [2, 15],
                            23: [2, 15],
                            25: [2, 15]
                        }, {
                            5: [2, 16],
                            14: [2, 16],
                            15: [2, 16],
                            16: [2, 16],
                            19: [2, 16],
                            20: [2, 16],
                            22: [2, 16],
                            23: [2, 16],
                            25: [2, 16]
                        }, {
                            17: 23,
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            17: 29,
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            17: 30,
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            17: 31,
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            21: 33,
                            26: 32,
                            32: [1, 34],
                            33: [1, 35],
                            40: [1, 28],
                            43: 26
                        }, {
                            1: [2, 1]
                        }, {
                            5: [2, 10],
                            14: [2, 10],
                            15: [2, 10],
                            16: [2, 10],
                            19: [2, 10],
                            20: [2, 10],
                            22: [2, 10],
                            23: [2, 10],
                            25: [2, 10]
                        }, {
                            10: 36,
                            20: [1, 37]
                        }, {
                            4: 38,
                            8: 4,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            20: [2, 7],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            7: 39,
                            8: 17,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 21],
                            20: [2, 6],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            17: 23,
                            18: [1, 40],
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            10: 41,
                            20: [1, 37]
                        }, {
                            18: [1, 42]
                        }, {
                            18: [2, 43],
                            24: [2, 43],
                            28: 43,
                            32: [2, 43],
                            33: [2, 43],
                            34: [2, 43],
                            35: [2, 43],
                            36: [2, 43],
                            40: [2, 43],
                            42: [2, 43]
                        }, {
                            18: [2, 25],
                            24: [2, 25],
                            36: [2, 25]
                        }, {
                            18: [2, 38],
                            24: [2, 38],
                            32: [2, 38],
                            33: [2, 38],
                            34: [2, 38],
                            35: [2, 38],
                            36: [2, 38],
                            40: [2, 38],
                            42: [2, 38],
                            44: [1, 44]
                        }, {
                            21: 45,
                            40: [1, 28],
                            43: 26
                        }, {
                            18: [2, 40],
                            24: [2, 40],
                            32: [2, 40],
                            33: [2, 40],
                            34: [2, 40],
                            35: [2, 40],
                            36: [2, 40],
                            40: [2, 40],
                            42: [2, 40],
                            44: [2, 40]
                        }, {
                            18: [1, 46]
                        }, {
                            18: [1, 47]
                        }, {
                            24: [1, 48]
                        }, {
                            18: [2, 41],
                            21: 50,
                            27: 49,
                            40: [1, 28],
                            43: 26
                        }, {
                            18: [2, 34],
                            40: [2, 34]
                        }, {
                            18: [2, 35],
                            40: [2, 35]
                        }, {
                            18: [2, 36],
                            40: [2, 36]
                        }, {
                            5: [2, 11],
                            14: [2, 11],
                            15: [2, 11],
                            16: [2, 11],
                            19: [2, 11],
                            20: [2, 11],
                            22: [2, 11],
                            23: [2, 11],
                            25: [2, 11]
                        }, {
                            21: 51,
                            40: [1, 28],
                            43: 26
                        }, {
                            8: 17,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            20: [2, 3],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            4: 52,
                            8: 4,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            20: [2, 5],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            14: [2, 23],
                            15: [2, 23],
                            16: [2, 23],
                            19: [2, 23],
                            20: [2, 23],
                            22: [2, 23],
                            23: [2, 23],
                            25: [2, 23]
                        }, {
                            5: [2, 12],
                            14: [2, 12],
                            15: [2, 12],
                            16: [2, 12],
                            19: [2, 12],
                            20: [2, 12],
                            22: [2, 12],
                            23: [2, 12],
                            25: [2, 12]
                        }, {
                            14: [2, 18],
                            15: [2, 18],
                            16: [2, 18],
                            19: [2, 18],
                            20: [2, 18],
                            22: [2, 18],
                            23: [2, 18],
                            25: [2, 18]
                        }, {
                            18: [2, 45],
                            21: 56,
                            24: [2, 45],
                            29: 53,
                            30: 60,
                            31: 54,
                            32: [1, 57],
                            33: [1, 58],
                            34: [1, 59],
                            35: [1, 61],
                            36: [2, 45],
                            37: 55,
                            38: 62,
                            39: 63,
                            40: [1, 64],
                            42: [1, 27],
                            43: 26
                        }, {
                            40: [1, 65]
                        }, {
                            18: [2, 37],
                            24: [2, 37],
                            32: [2, 37],
                            33: [2, 37],
                            34: [2, 37],
                            35: [2, 37],
                            36: [2, 37],
                            40: [2, 37],
                            42: [2, 37]
                        }, {
                            14: [2, 17],
                            15: [2, 17],
                            16: [2, 17],
                            19: [2, 17],
                            20: [2, 17],
                            22: [2, 17],
                            23: [2, 17],
                            25: [2, 17]
                        }, {
                            5: [2, 20],
                            14: [2, 20],
                            15: [2, 20],
                            16: [2, 20],
                            19: [2, 20],
                            20: [2, 20],
                            22: [2, 20],
                            23: [2, 20],
                            25: [2, 20]
                        }, {
                            5: [2, 21],
                            14: [2, 21],
                            15: [2, 21],
                            16: [2, 21],
                            19: [2, 21],
                            20: [2, 21],
                            22: [2, 21],
                            23: [2, 21],
                            25: [2, 21]
                        }, {
                            18: [1, 66]
                        }, {
                            18: [2, 42]
                        }, {
                            18: [1, 67]
                        }, {
                            8: 17,
                            9: 5,
                            11: 6,
                            12: 7,
                            13: 8,
                            14: [1, 9],
                            15: [1, 10],
                            16: [1, 12],
                            19: [1, 11],
                            20: [2, 4],
                            22: [1, 13],
                            23: [1, 14],
                            25: [1, 15]
                        }, {
                            18: [2, 24],
                            24: [2, 24],
                            36: [2, 24]
                        }, {
                            18: [2, 44],
                            24: [2, 44],
                            32: [2, 44],
                            33: [2, 44],
                            34: [2, 44],
                            35: [2, 44],
                            36: [2, 44],
                            40: [2, 44],
                            42: [2, 44]
                        }, {
                            18: [2, 46],
                            24: [2, 46],
                            36: [2, 46]
                        }, {
                            18: [2, 26],
                            24: [2, 26],
                            32: [2, 26],
                            33: [2, 26],
                            34: [2, 26],
                            35: [2, 26],
                            36: [2, 26],
                            40: [2, 26],
                            42: [2, 26]
                        }, {
                            18: [2, 27],
                            24: [2, 27],
                            32: [2, 27],
                            33: [2, 27],
                            34: [2, 27],
                            35: [2, 27],
                            36: [2, 27],
                            40: [2, 27],
                            42: [2, 27]
                        }, {
                            18: [2, 28],
                            24: [2, 28],
                            32: [2, 28],
                            33: [2, 28],
                            34: [2, 28],
                            35: [2, 28],
                            36: [2, 28],
                            40: [2, 28],
                            42: [2, 28]
                        }, {
                            18: [2, 29],
                            24: [2, 29],
                            32: [2, 29],
                            33: [2, 29],
                            34: [2, 29],
                            35: [2, 29],
                            36: [2, 29],
                            40: [2, 29],
                            42: [2, 29]
                        }, {
                            18: [2, 30],
                            24: [2, 30],
                            32: [2, 30],
                            33: [2, 30],
                            34: [2, 30],
                            35: [2, 30],
                            36: [2, 30],
                            40: [2, 30],
                            42: [2, 30]
                        }, {
                            17: 68,
                            21: 24,
                            30: 25,
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            18: [2, 32],
                            24: [2, 32],
                            36: [2, 32],
                            39: 69,
                            40: [1, 70]
                        }, {
                            18: [2, 47],
                            24: [2, 47],
                            36: [2, 47],
                            40: [2, 47]
                        }, {
                            18: [2, 40],
                            24: [2, 40],
                            32: [2, 40],
                            33: [2, 40],
                            34: [2, 40],
                            35: [2, 40],
                            36: [2, 40],
                            40: [2, 40],
                            41: [1, 71],
                            42: [2, 40],
                            44: [2, 40]
                        }, {
                            18: [2, 39],
                            24: [2, 39],
                            32: [2, 39],
                            33: [2, 39],
                            34: [2, 39],
                            35: [2, 39],
                            36: [2, 39],
                            40: [2, 39],
                            42: [2, 39],
                            44: [2, 39]
                        }, {
                            5: [2, 22],
                            14: [2, 22],
                            15: [2, 22],
                            16: [2, 22],
                            19: [2, 22],
                            20: [2, 22],
                            22: [2, 22],
                            23: [2, 22],
                            25: [2, 22]
                        }, {
                            5: [2, 19],
                            14: [2, 19],
                            15: [2, 19],
                            16: [2, 19],
                            19: [2, 19],
                            20: [2, 19],
                            22: [2, 19],
                            23: [2, 19],
                            25: [2, 19]
                        }, {
                            36: [1, 72]
                        }, {
                            18: [2, 48],
                            24: [2, 48],
                            36: [2, 48],
                            40: [2, 48]
                        }, {
                            41: [1, 71]
                        }, {
                            21: 56,
                            30: 60,
                            31: 73,
                            32: [1, 57],
                            33: [1, 58],
                            34: [1, 59],
                            35: [1, 61],
                            40: [1, 28],
                            42: [1, 27],
                            43: 26
                        }, {
                            18: [2, 31],
                            24: [2, 31],
                            32: [2, 31],
                            33: [2, 31],
                            34: [2, 31],
                            35: [2, 31],
                            36: [2, 31],
                            40: [2, 31],
                            42: [2, 31]
                        }, {
                            18: [2, 33],
                            24: [2, 33],
                            36: [2, 33],
                            40: [2, 33]
                        }],
                        defaultActions: {
                            3: [2, 2],
                            16: [2, 1],
                            50: [2, 42]
                        },
                        parseError: function(a) {
                            throw new Error(a)
                        },
                        parse: function(a) {
                            function b() {
                                var a;
                                return a = c.lexer.lex() || 1, "number" != typeof a && (a = c.symbols_[a] || a), a
                            }
                            var c = this,
                                d = [0],
                                e = [null],
                                f = [],
                                g = this.table,
                                h = "",
                                i = 0,
                                j = 0,
                                k = 0;
                            this.lexer.setInput(a), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, "undefined" == typeof this.lexer.yylloc && (this.lexer.yylloc = {});
                            var l = this.lexer.yylloc;
                            f.push(l);
                            var m = this.lexer.options && this.lexer.options.ranges;
                            "function" == typeof this.yy.parseError && (this.parseError = this.yy.parseError);
                            for (var n, o, p, q, r, s, t, u, v, w = {};;) {
                                if (p = d[d.length - 1], this.defaultActions[p] ? q = this.defaultActions[p] : ((null === n || "undefined" == typeof n) && (n = b()), q = g[p] && g[p][n]), "undefined" == typeof q || !q.length || !q[0]) {
                                    var x = "";
                                    if (!k) {
                                        v = [];
                                        for (s in g[p]) this.terminals_[s] && s > 2 && v.push("'" + this.terminals_[s] + "'");
                                        x = this.lexer.showPosition ? "Parse error on line " + (i + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + v.join(", ") + ", got '" + (this.terminals_[n] || n) + "'" : "Parse error on line " + (i + 1) + ": Unexpected " + (1 == n ? "end of input" : "'" + (this.terminals_[n] || n) + "'"), this.parseError(x, {
                                            text: this.lexer.match,
                                            token: this.terminals_[n] || n,
                                            line: this.lexer.yylineno,
                                            loc: l,
                                            expected: v
                                        })
                                    }
                                }
                                if (q[0] instanceof Array && q.length > 1) throw new Error("Parse Error: multiple actions possible at state: " + p + ", token: " + n);
                                switch (q[0]) {
                                    case 1:
                                        d.push(n), e.push(this.lexer.yytext), f.push(this.lexer.yylloc), d.push(q[1]), n = null, o ? (n = o, o = null) : (j = this.lexer.yyleng, h = this.lexer.yytext, i = this.lexer.yylineno, l = this.lexer.yylloc, k > 0 && k--);
                                        break;
                                    case 2:
                                        if (t = this.productions_[q[1]][1], w.$ = e[e.length - t], w._$ = {
                                                first_line: f[f.length - (t || 1)].first_line,
                                                last_line: f[f.length - 1].last_line,
                                                first_column: f[f.length - (t || 1)].first_column,
                                                last_column: f[f.length - 1].last_column
                                            }, m && (w._$.range = [f[f.length - (t || 1)].range[0], f[f.length - 1].range[1]]), r = this.performAction.call(w, h, j, i, this.yy, q[1], e, f), "undefined" != typeof r) return r;
                                        t && (d = d.slice(0, -1 * t * 2), e = e.slice(0, -1 * t), f = f.slice(0, -1 * t)), d.push(this.productions_[q[1]][0]), e.push(w.$), f.push(w._$), u = g[d[d.length - 2]][d[d.length - 1]], d.push(u);
                                        break;
                                    case 3:
                                        return !0
                                }
                            }
                            return !0
                        }
                    },
                    d = function() {
                        var a = {
                            EOF: 1,
                            parseError: function(a, b) {
                                if (!this.yy.parser) throw new Error(a);
                                this.yy.parser.parseError(a, b)
                            },
                            setInput: function(a) {
                                return this._input = a, this._more = this._less = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
                                    first_line: 1,
                                    first_column: 0,
                                    last_line: 1,
                                    last_column: 0
                                }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this
                            },
                            input: function() {
                                var a = this._input[0];
                                this.yytext += a, this.yyleng++, this.offset++, this.match += a, this.matched += a;
                                var b = a.match(/(?:\r\n?|\n).*/g);
                                return b ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), a
                            },
                            unput: function(a) {
                                var b = a.length,
                                    c = a.split(/(?:\r\n?|\n)/g);
                                this._input = a + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - b - 1), this.offset -= b;
                                var d = this.match.split(/(?:\r\n?|\n)/g);
                                this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), c.length - 1 && (this.yylineno -= c.length - 1);
                                var e = this.yylloc.range;
                                return this.yylloc = {
                                    first_line: this.yylloc.first_line,
                                    last_line: this.yylineno + 1,
                                    first_column: this.yylloc.first_column,
                                    last_column: c ? (c.length === d.length ? this.yylloc.first_column : 0) + d[d.length - c.length].length - c[0].length : this.yylloc.first_column - b
                                }, this.options.ranges && (this.yylloc.range = [e[0], e[0] + this.yyleng - b]), this
                            },
                            more: function() {
                                return this._more = !0, this
                            },
                            less: function(a) {
                                this.unput(this.match.slice(a))
                            },
                            pastInput: function() {
                                var a = this.matched.substr(0, this.matched.length - this.match.length);
                                return (a.length > 20 ? "..." : "") + a.substr(-20).replace(/\n/g, "")
                            },
                            upcomingInput: function() {
                                var a = this.match;
                                return a.length < 20 && (a += this._input.substr(0, 20 - a.length)), (a.substr(0, 20) + (a.length > 20 ? "..." : "")).replace(/\n/g, "")
                            },
                            showPosition: function() {
                                var a = this.pastInput(),
                                    b = new Array(a.length + 1).join("-");
                                return a + this.upcomingInput() + "\n" + b + "^"
                            },
                            next: function() {
                                if (this.done) return this.EOF;
                                this._input || (this.done = !0);
                                var a, b, c, d, e;
                                this._more || (this.yytext = "", this.match = "");
                                for (var f = this._currentRules(), g = 0; g < f.length && (c = this._input.match(this.rules[f[g]]), !c || b && !(c[0].length > b[0].length) || (b = c, d = g, this.options.flex)); g++);
                                return b ? (e = b[0].match(/(?:\r\n?|\n).*/g), e && (this.yylineno += e.length), this.yylloc = {
                                    first_line: this.yylloc.last_line,
                                    last_line: this.yylineno + 1,
                                    first_column: this.yylloc.last_column,
                                    last_column: e ? e[e.length - 1].length - e[e.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + b[0].length
                                }, this.yytext += b[0], this.match += b[0], this.matches = b, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._input = this._input.slice(b[0].length), this.matched += b[0], a = this.performAction.call(this, this.yy, this, f[d], this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), a ? a : void 0) : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                                    text: "",
                                    token: null,
                                    line: this.yylineno
                                })
                            },
                            lex: function() {
                                var a = this.next();
                                return "undefined" != typeof a ? a : this.lex()
                            },
                            begin: function(a) {
                                this.conditionStack.push(a)
                            },
                            popState: function() {
                                return this.conditionStack.pop()
                            },
                            _currentRules: function() {
                                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules
                            },
                            topState: function() {
                                return this.conditionStack[this.conditionStack.length - 2]
                            },
                            pushState: function(a) {
                                this.begin(a)
                            }
                        };
                        return a.options = {}, a.performAction = function(a, b, c, d) {
                            function e(a, c) {
                                return b.yytext = b.yytext.substr(a, b.yyleng - c)
                            }
                            switch (c) {
                                case 0:
                                    if ("\\\\" === b.yytext.slice(-2) ? (e(0, 1), this.begin("mu")) : "\\" === b.yytext.slice(-1) ? (e(0, 1), this.begin("emu")) : this.begin("mu"), b.yytext) return 14;
                                    break;
                                case 1:
                                    return 14;
                                case 2:
                                    return this.popState(), 14;
                                case 3:
                                    return e(0, 4), this.popState(), 15;
                                case 4:
                                    return 35;
                                case 5:
                                    return 36;
                                case 6:
                                    return 25;
                                case 7:
                                    return 16;
                                case 8:
                                    return 20;
                                case 9:
                                    return 19;
                                case 10:
                                    return 19;
                                case 11:
                                    return 23;
                                case 12:
                                    return 22;
                                case 13:
                                    this.popState(), this.begin("com");
                                    break;
                                case 14:
                                    return e(3, 5), this.popState(), 15;
                                case 15:
                                    return 22;
                                case 16:
                                    return 41;
                                case 17:
                                    return 40;
                                case 18:
                                    return 40;
                                case 19:
                                    return 44;
                                case 20:
                                    break;
                                case 21:
                                    return this.popState(), 24;
                                case 22:
                                    return this.popState(), 18;
                                case 23:
                                    return b.yytext = e(1, 2).replace(/\\"/g, '"'), 32;
                                case 24:
                                    return b.yytext = e(1, 2).replace(/\\'/g, "'"), 32;
                                case 25:
                                    return 42;
                                case 26:
                                    return 34;
                                case 27:
                                    return 34;
                                case 28:
                                    return 33;
                                case 29:
                                    return 40;
                                case 30:
                                    return b.yytext = e(1, 2), 40;
                                case 31:
                                    return "INVALID";
                                case 32:
                                    return 5
                            }
                        }, a.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:[\s\S]*?--\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{!--)/, /^(?:\{\{![\s\S]*?\}\})/, /^(?:\{\{(~)?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:-?[0-9]+(?=([~}\s)])))/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)]))))/, /^(?:\[[^\]]*\])/, /^(?:.)/, /^(?:$)/], a.conditions = {
                            mu: {
                                rules: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
                                inclusive: !1
                            },
                            emu: {
                                rules: [2],
                                inclusive: !1
                            },
                            com: {
                                rules: [3],
                                inclusive: !1
                            },
                            INITIAL: {
                                rules: [0, 1, 32],
                                inclusive: !0
                            }
                        }, a
                    }();
                return c.lexer = d, b.prototype = c, c.Parser = b, new b
            }();
            return a = b
        }(),
        i = function(a, b) {
            "use strict";

            function c(a) {
                return a.constructor === f.ProgramNode ? a : (e.yy = f, e.parse(a))
            }
            var d = {},
                e = a,
                f = b;
            return d.parser = e, d.parse = c, d
        }(h, g),
        j = function(a) {
            "use strict";

            function b() {}

            function c(a, b, c) {
                if (null == a || "string" != typeof a && a.constructor !== c.AST.ProgramNode) throw new f("You must pass a string or Handlebars AST to Handlebars.precompile. You passed " + a);
                b = b || {}, "data" in b || (b.data = !0);
                var d = c.parse(a),
                    e = (new c.Compiler).compile(d, b);
                return (new c.JavaScriptCompiler).compile(e, b)
            }

            function d(a, b, c) {
                function d() {
                    var d = c.parse(a),
                        e = (new c.Compiler).compile(d, b),
                        f = (new c.JavaScriptCompiler).compile(e, b, void 0, !0);
                    return c.template(f)
                }
                if (null == a || "string" != typeof a && a.constructor !== c.AST.ProgramNode) throw new f("You must pass a string or Handlebars AST to Handlebars.compile. You passed " + a);
                b = b || {}, "data" in b || (b.data = !0);
                var e;
                return function(a, b) {
                    return e || (e = d()), e.call(this, a, b)
                }
            }
            var e = {},
                f = a;
            return e.Compiler = b, b.prototype = {
                compiler: b,
                disassemble: function() {
                    for (var a, b, c, d = this.opcodes, e = [], f = 0, g = d.length; g > f; f++)
                        if (a = d[f], "DECLARE" === a.opcode) e.push("DECLARE " + a.name + "=" + a.value);
                        else {
                            b = [];
                            for (var h = 0; h < a.args.length; h++) c = a.args[h], "string" == typeof c && (c = '"' + c.replace("\n", "\\n") + '"'), b.push(c);
                            e.push(a.opcode + " " + b.join(" "))
                        }
                    return e.join("\n")
                },
                equals: function(a) {
                    var b = this.opcodes.length;
                    if (a.opcodes.length !== b) return !1;
                    for (var c = 0; b > c; c++) {
                        var d = this.opcodes[c],
                            e = a.opcodes[c];
                        if (d.opcode !== e.opcode || d.args.length !== e.args.length) return !1;
                        for (var f = 0; f < d.args.length; f++)
                            if (d.args[f] !== e.args[f]) return !1
                    }
                    if (b = this.children.length, a.children.length !== b) return !1;
                    for (c = 0; b > c; c++)
                        if (!this.children[c].equals(a.children[c])) return !1;
                    return !0
                },
                guid: 0,
                compile: function(a, b) {
                    this.opcodes = [], this.children = [], this.depths = {
                        list: []
                    }, this.options = b;
                    var c = this.options.knownHelpers;
                    if (this.options.knownHelpers = {
                            helperMissing: !0,
                            blockHelperMissing: !0,
                            each: !0,
                            "if": !0,
                            unless: !0,
                            "with": !0,
                            log: !0
                        }, c)
                        for (var d in c) this.options.knownHelpers[d] = c[d];
                    return this.accept(a)
                },
                accept: function(a) {
                    var b, c = a.strip || {};
                    return c.left && this.opcode("strip"), b = this[a.type](a), c.right && this.opcode("strip"), b
                },
                program: function(a) {
                    for (var b = a.statements, c = 0, d = b.length; d > c; c++) this.accept(b[c]);
                    return this.isSimple = 1 === d, this.depths.list = this.depths.list.sort(function(a, b) {
                        return a - b
                    }), this
                },
                compileProgram: function(a) {
                    var b, c = (new this.compiler).compile(a, this.options),
                        d = this.guid++;
                    this.usePartial = this.usePartial || c.usePartial, this.children[d] = c;
                    for (var e = 0, f = c.depths.list.length; f > e; e++) b = c.depths.list[e], 2 > b || this.addDepth(b - 1);
                    return d
                },
                block: function(a) {
                    var b = a.mustache,
                        c = a.program,
                        d = a.inverse;
                    c && (c = this.compileProgram(c)), d && (d = this.compileProgram(d));
                    var e = b.sexpr,
                        f = this.classifySexpr(e);
                    "helper" === f ? this.helperSexpr(e, c, d) : "simple" === f ? (this.simpleSexpr(e), this.opcode("pushProgram", c), this.opcode("pushProgram", d), this.opcode("emptyHash"), this.opcode("blockValue")) : (this.ambiguousSexpr(e, c, d), this.opcode("pushProgram", c), this.opcode("pushProgram", d), this.opcode("emptyHash"), this.opcode("ambiguousBlockValue")), this.opcode("append")
                },
                hash: function(a) {
                    var b, c, d = a.pairs;
                    this.opcode("pushHash");
                    for (var e = 0, f = d.length; f > e; e++) b = d[e], c = b[1], this.options.stringParams ? (c.depth && this.addDepth(c.depth), this.opcode("getContext", c.depth || 0), this.opcode("pushStringParam", c.stringModeValue, c.type), "sexpr" === c.type && this.sexpr(c)) : this.accept(c), this.opcode("assignToHash", b[0]);
                    this.opcode("popHash")
                },
                partial: function(a) {
                    var b = a.partialName;
                    this.usePartial = !0, a.context ? this.ID(a.context) : this.opcode("push", "depth0"), this.opcode("invokePartial", b.name), this.opcode("append")
                },
                content: function(a) {
                    this.opcode("appendContent", a.string)
                },
                mustache: function(a) {
                    this.sexpr(a.sexpr), this.opcode(a.escaped && !this.options.noEscape ? "appendEscaped" : "append")
                },
                ambiguousSexpr: function(a, b, c) {
                    var d = a.id,
                        e = d.parts[0],
                        f = null != b || null != c;
                    this.opcode("getContext", d.depth), this.opcode("pushProgram", b), this.opcode("pushProgram", c), this.opcode("invokeAmbiguous", e, f)
                },
                simpleSexpr: function(a) {
                    var b = a.id;
                    "DATA" === b.type ? this.DATA(b) : b.parts.length ? this.ID(b) : (this.addDepth(b.depth), this.opcode("getContext", b.depth), this.opcode("pushContext")), this.opcode("resolvePossibleLambda")
                },
                helperSexpr: function(a, b, c) {
                    var d = this.setupFullMustacheParams(a, b, c),
                        e = a.id.parts[0];
                    if (this.options.knownHelpers[e]) this.opcode("invokeKnownHelper", d.length, e);
                    else {
                        if (this.options.knownHelpersOnly) throw new f("You specified knownHelpersOnly, but used the unknown helper " + e, a);
                        this.opcode("invokeHelper", d.length, e, a.isRoot)
                    }
                },
                sexpr: function(a) {
                    var b = this.classifySexpr(a);
                    "simple" === b ? this.simpleSexpr(a) : "helper" === b ? this.helperSexpr(a) : this.ambiguousSexpr(a)
                },
                ID: function(a) {
                    this.addDepth(a.depth), this.opcode("getContext", a.depth);
                    var b = a.parts[0];
                    b ? this.opcode("lookupOnContext", a.parts[0]) : this.opcode("pushContext");
                    for (var c = 1, d = a.parts.length; d > c; c++) this.opcode("lookup", a.parts[c])
                },
                DATA: function(a) {
                    if (this.options.data = !0, a.id.isScoped || a.id.depth) throw new f("Scoped data references are not supported: " + a.original, a);
                    this.opcode("lookupData");
                    for (var b = a.id.parts, c = 0, d = b.length; d > c; c++) this.opcode("lookup", b[c])
                },
                STRING: function(a) {
                    this.opcode("pushString", a.string)
                },
                INTEGER: function(a) {
                    this.opcode("pushLiteral", a.integer)
                },
                BOOLEAN: function(a) {
                    this.opcode("pushLiteral", a.bool)
                },
                comment: function() {},
                opcode: function(a) {
                    this.opcodes.push({
                        opcode: a,
                        args: [].slice.call(arguments, 1)
                    })
                },
                declare: function(a, b) {
                    this.opcodes.push({
                        opcode: "DECLARE",
                        name: a,
                        value: b
                    })
                },
                addDepth: function(a) {
                    0 !== a && (this.depths[a] || (this.depths[a] = !0, this.depths.list.push(a)))
                },
                classifySexpr: function(a) {
                    var b = a.isHelper,
                        c = a.eligibleHelper,
                        d = this.options;
                    if (c && !b) {
                        var e = a.id.parts[0];
                        d.knownHelpers[e] ? b = !0 : d.knownHelpersOnly && (c = !1)
                    }
                    return b ? "helper" : c ? "ambiguous" : "simple"
                },
                pushParams: function(a) {
                    for (var b, c = a.length; c--;) b = a[c], this.options.stringParams ? (b.depth && this.addDepth(b.depth), this.opcode("getContext", b.depth || 0), this.opcode("pushStringParam", b.stringModeValue, b.type), "sexpr" === b.type && this.sexpr(b)) : this[b.type](b)
                },
                setupFullMustacheParams: function(a, b, c) {
                    var d = a.params;
                    return this.pushParams(d), this.opcode("pushProgram", b), this.opcode("pushProgram", c), a.hash ? this.hash(a.hash) : this.opcode("emptyHash"), d
                }
            }, e.precompile = c, e.compile = d, e
        }(c),
        k = function(a, b) {
            "use strict";

            function c(a) {
                this.value = a
            }

            function d() {}
            var e, f = a.COMPILER_REVISION,
                g = a.REVISION_CHANGES,
                h = a.log,
                i = b;
            d.prototype = {
                nameLookup: function(a, b) {
                    var c, e;
                    return 0 === a.indexOf("depth") && (c = !0), e = /^[0-9]+$/.test(b) ? a + "[" + b + "]" : d.isValidJavaScriptVariableName(b) ? a + "." + b : a + "['" + b + "']", c ? "(" + a + " && " + e + ")" : e
                },
                compilerInfo: function() {
                    var a = f,
                        b = g[a];
                    return "this.compilerInfo = [" + a + ",'" + b + "'];\n"
                },
                appendToBuffer: function(a) {
                    return this.environment.isSimple ? "return " + a + ";" : {
                        appendToBuffer: !0,
                        content: a,
                        toString: function() {
                            return "buffer += " + a + ";"
                        }
                    }
                },
                initializeBuffer: function() {
                    return this.quotedString("")
                },
                namespace: "Handlebars",
                compile: function(a, b, c, d) {
                    this.environment = a, this.options = b || {}, h("debug", this.environment.disassemble() + "\n\n"), this.name = this.environment.name, this.isChild = !!c, this.context = c || {
                        programs: [],
                        environments: [],
                        aliases: {}
                    }, this.preamble(), this.stackSlot = 0, this.stackVars = [], this.registers = {
                        list: []
                    }, this.hashes = [], this.compileStack = [], this.inlineStack = [], this.compileChildren(a, b);
                    var e, f = a.opcodes;
                    this.i = 0;
                    for (var g = f.length; this.i < g; this.i++) e = f[this.i], "DECLARE" === e.opcode ? this[e.name] = e.value : this[e.opcode].apply(this, e.args), e.opcode !== this.stripNext && (this.stripNext = !1);
                    if (this.pushSource(""), this.stackSlot || this.inlineStack.length || this.compileStack.length) throw new i("Compile completed with content left on stack");
                    return this.createFunctionContext(d)
                },
                preamble: function() {
                    var a = [];
                    if (this.isChild) a.push("");
                    else {
                        var b = this.namespace,
                            c = "helpers = this.merge(helpers, " + b + ".helpers);";
                        this.environment.usePartial && (c = c + " partials = this.merge(partials, " + b + ".partials);"), this.options.data && (c += " data = data || {};"), a.push(c)
                    }
                    a.push(this.environment.isSimple ? "" : ", buffer = " + this.initializeBuffer()), this.lastContext = 0, this.source = a
                },
                createFunctionContext: function(a) {
                    var b = this.stackVars.concat(this.registers.list);
                    if (b.length > 0 && (this.source[1] = this.source[1] + ", " + b.join(", ")), !this.isChild)
                        for (var c in this.context.aliases) this.context.aliases.hasOwnProperty(c) && (this.source[1] = this.source[1] + ", " + c + "=" + this.context.aliases[c]);
                    this.source[1] && (this.source[1] = "var " + this.source[1].substring(2) + ";"), this.isChild || (this.source[1] += "\n" + this.context.programs.join("\n") + "\n"), this.environment.isSimple || this.pushSource("return buffer;");
                    for (var d = this.isChild ? ["depth0", "data"] : ["Handlebars", "depth0", "helpers", "partials", "data"], e = 0, f = this.environment.depths.list.length; f > e; e++) d.push("depth" + this.environment.depths.list[e]);
                    var g = this.mergeSource();
                    if (this.isChild || (g = this.compilerInfo() + g), a) return d.push(g), Function.apply(this, d);
                    var i = "function " + (this.name || "") + "(" + d.join(",") + ") {\n  " + g + "}";
                    return h("debug", i + "\n\n"), i
                },
                mergeSource: function() {
                    for (var a, b = "", c = 0, d = this.source.length; d > c; c++) {
                        var e = this.source[c];
                        e.appendToBuffer ? a = a ? a + "\n    + " + e.content : e.content : (a && (b += "buffer += " + a + ";\n  ", a = void 0), b += e + "\n  ")
                    }
                    return b
                },
                blockValue: function() {
                    this.context.aliases.blockHelperMissing = "helpers.blockHelperMissing";
                    var a = ["depth0"];
                    this.setupParams(0, a), this.replaceStack(function(b) {
                        return a.splice(1, 0, b), "blockHelperMissing.call(" + a.join(", ") + ")"
                    })
                },
                ambiguousBlockValue: function() {
                    this.context.aliases.blockHelperMissing = "helpers.blockHelperMissing";
                    var a = ["depth0"];
                    this.setupParams(0, a);
                    var b = this.topStack();
                    a.splice(1, 0, b), this.pushSource("if (!" + this.lastHelper + ") { " + b + " = blockHelperMissing.call(" + a.join(", ") + "); }")
                },
                appendContent: function(a) {
                    this.pendingContent && (a = this.pendingContent + a), this.stripNext && (a = a.replace(/^\s+/, "")), this.pendingContent = a
                },
                strip: function() {
                    this.pendingContent && (this.pendingContent = this.pendingContent.replace(/\s+$/, "")), this.stripNext = "strip"
                },
                append: function() {
                    this.flushInline();
                    var a = this.popStack();
                    this.pushSource("if(" + a + " || " + a + " === 0) { " + this.appendToBuffer(a) + " }"), this.environment.isSimple && this.pushSource("else { " + this.appendToBuffer("''") + " }")
                },
                appendEscaped: function() {
                    this.context.aliases.escapeExpression = "this.escapeExpression", this.pushSource(this.appendToBuffer("escapeExpression(" + this.popStack() + ")"))
                },
                getContext: function(a) {
                    this.lastContext !== a && (this.lastContext = a)
                },
                lookupOnContext: function(a) {
                    this.push(this.nameLookup("depth" + this.lastContext, a, "context"))
                },
                pushContext: function() {
                    this.pushStackLiteral("depth" + this.lastContext)
                },
                resolvePossibleLambda: function() {
                    this.context.aliases.functionType = '"function"', this.replaceStack(function(a) {
                        return "typeof " + a + " === functionType ? " + a + ".apply(depth0) : " + a
                    })
                },
                lookup: function(a) {
                    this.replaceStack(function(b) {
                        return b + " == null || " + b + " === false ? " + b + " : " + this.nameLookup(b, a, "context")
                    })
                },
                lookupData: function() {
                    this.pushStackLiteral("data")
                },
                pushStringParam: function(a, b) {
                    this.pushStackLiteral("depth" + this.lastContext), this.pushString(b), "sexpr" !== b && ("string" == typeof a ? this.pushString(a) : this.pushStackLiteral(a))
                },
                emptyHash: function() {
                    this.pushStackLiteral("{}"), this.options.stringParams && (this.push("{}"), this.push("{}"))
                },
                pushHash: function() {
                    this.hash && this.hashes.push(this.hash), this.hash = {
                        values: [],
                        types: [],
                        contexts: []
                    }
                },
                popHash: function() {
                    var a = this.hash;
                    this.hash = this.hashes.pop(), this.options.stringParams && (this.push("{" + a.contexts.join(",") + "}"), this.push("{" + a.types.join(",") + "}")), this.push("{\n    " + a.values.join(",\n    ") + "\n  }")
                },
                pushString: function(a) {
                    this.pushStackLiteral(this.quotedString(a))
                },
                push: function(a) {
                    return this.inlineStack.push(a), a
                },
                pushLiteral: function(a) {
                    this.pushStackLiteral(a)
                },
                pushProgram: function(a) {
                    this.pushStackLiteral(null != a ? this.programExpression(a) : null)
                },
                invokeHelper: function(a, b, c) {
                    this.context.aliases.helperMissing = "helpers.helperMissing", this.useRegister("helper");
                    var d = this.lastHelper = this.setupHelper(a, b, !0),
                        e = this.nameLookup("depth" + this.lastContext, b, "context"),
                        f = "helper = " + d.name + " || " + e;
                    d.paramsInit && (f += "," + d.paramsInit), this.push("(" + f + ",helper ? helper.call(" + d.callParams + ") : helperMissing.call(" + d.helperMissingParams + "))"), c || this.flushInline()
                },
                invokeKnownHelper: function(a, b) {
                    var c = this.setupHelper(a, b);
                    this.push(c.name + ".call(" + c.callParams + ")")
                },
                invokeAmbiguous: function(a, b) {
                    this.context.aliases.functionType = '"function"', this.useRegister("helper"), this.emptyHash();
                    var c = this.setupHelper(0, a, b),
                        d = this.lastHelper = this.nameLookup("helpers", a, "helper"),
                        e = this.nameLookup("depth" + this.lastContext, a, "context"),
                        f = this.nextStack();
                    c.paramsInit && this.pushSource(c.paramsInit), this.pushSource("if (helper = " + d + ") { " + f + " = helper.call(" + c.callParams + "); }"), this.pushSource("else { helper = " + e + "; " + f + " = typeof helper === functionType ? helper.call(" + c.callParams + ") : helper; }")
                },
                invokePartial: function(a) {
                    var b = [this.nameLookup("partials", a, "partial"), "'" + a + "'", this.popStack(), "helpers", "partials"];
                    this.options.data && b.push("data"), this.context.aliases.self = "this", this.push("self.invokePartial(" + b.join(", ") + ")")
                },
                assignToHash: function(a) {
                    var b, c, d = this.popStack();
                    this.options.stringParams && (c = this.popStack(), b = this.popStack());
                    var e = this.hash;
                    b && e.contexts.push("'" + a + "': " + b), c && e.types.push("'" + a + "': " + c), e.values.push("'" + a + "': (" + d + ")")
                },
                compiler: d,
                compileChildren: function(a, b) {
                    for (var c, d, e = a.children, f = 0, g = e.length; g > f; f++) {
                        c = e[f], d = new this.compiler;
                        var h = this.matchExistingProgram(c);
                        null == h ? (this.context.programs.push(""), h = this.context.programs.length, c.index = h, c.name = "program" + h, this.context.programs[h] = d.compile(c, b, this.context), this.context.environments[h] = c) : (c.index = h, c.name = "program" + h)
                    }
                },
                matchExistingProgram: function(a) {
                    for (var b = 0, c = this.context.environments.length; c > b; b++) {
                        var d = this.context.environments[b];
                        if (d && d.equals(a)) return b
                    }
                },
                programExpression: function(a) {
                    if (this.context.aliases.self = "this", null == a) return "self.noop";
                    for (var b, c = this.environment.children[a], d = c.depths.list, e = [c.index, c.name, "data"], f = 0, g = d.length; g > f; f++) b = d[f], e.push(1 === b ? "depth0" : "depth" + (b - 1));
                    return (0 === d.length ? "self.program(" : "self.programWithDepth(") + e.join(", ") + ")"
                },
                register: function(a, b) {
                    this.useRegister(a), this.pushSource(a + " = " + b + ";")
                },
                useRegister: function(a) {
                    this.registers[a] || (this.registers[a] = !0, this.registers.list.push(a))
                },
                pushStackLiteral: function(a) {
                    return this.push(new c(a))
                },
                pushSource: function(a) {
                    this.pendingContent && (this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))), this.pendingContent = void 0), a && this.source.push(a)
                },
                pushStack: function(a) {
                    this.flushInline();
                    var b = this.incrStack();
                    return a && this.pushSource(b + " = " + a + ";"), this.compileStack.push(b), b
                },
                replaceStack: function(a) {
                    var b, d, e, f = "",
                        g = this.isInline();
                    if (g) {
                        var h = this.popStack(!0);
                        if (h instanceof c) b = h.value, e = !0;
                        else {
                            d = !this.stackSlot;
                            var i = d ? this.incrStack() : this.topStackName();
                            f = "(" + this.push(i) + " = " + h + "),", b = this.topStack()
                        }
                    } else b = this.topStack();
                    var j = a.call(this, b);
                    return g ? (e || this.popStack(), d && this.stackSlot--, this.push("(" + f + j + ")")) : (/^stack/.test(b) || (b = this.nextStack()), this.pushSource(b + " = (" + f + j + ");")), b
                },
                nextStack: function() {
                    return this.pushStack()
                },
                incrStack: function() {
                    return this.stackSlot++, this.stackSlot > this.stackVars.length && this.stackVars.push("stack" + this.stackSlot), this.topStackName()
                },
                topStackName: function() {
                    return "stack" + this.stackSlot
                },
                flushInline: function() {
                    var a = this.inlineStack;
                    if (a.length) {
                        this.inlineStack = [];
                        for (var b = 0, d = a.length; d > b; b++) {
                            var e = a[b];
                            e instanceof c ? this.compileStack.push(e) : this.pushStack(e)
                        }
                    }
                },
                isInline: function() {
                    return this.inlineStack.length
                },
                popStack: function(a) {
                    var b = this.isInline(),
                        d = (b ? this.inlineStack : this.compileStack).pop();
                    if (!a && d instanceof c) return d.value;
                    if (!b) {
                        if (!this.stackSlot) throw new i("Invalid stack pop");
                        this.stackSlot--
                    }
                    return d
                },
                topStack: function(a) {
                    var b = this.isInline() ? this.inlineStack : this.compileStack,
                        d = b[b.length - 1];
                    return !a && d instanceof c ? d.value : d
                },
                quotedString: function(a) {
                    return '"' + a.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029") + '"'
                },
                setupHelper: function(a, b, c) {
                    var d = [],
                        e = this.setupParams(a, d, c),
                        f = this.nameLookup("helpers", b, "helper");
                    return {
                        params: d,
                        paramsInit: e,
                        name: f,
                        callParams: ["depth0"].concat(d).join(", "),
                        helperMissingParams: c && ["depth0", this.quotedString(b)].concat(d).join(", ")
                    }
                },
                setupOptions: function(a, b) {
                    var c, d, e, f = [],
                        g = [],
                        h = [];
                    f.push("hash:" + this.popStack()), this.options.stringParams && (f.push("hashTypes:" + this.popStack()), f.push("hashContexts:" + this.popStack())), d = this.popStack(), e = this.popStack(), (e || d) && (e || (this.context.aliases.self = "this", e = "self.noop"), d || (this.context.aliases.self = "this", d = "self.noop"), f.push("inverse:" + d), f.push("fn:" + e));
                    for (var i = 0; a > i; i++) c = this.popStack(), b.push(c), this.options.stringParams && (h.push(this.popStack()), g.push(this.popStack()));
                    return this.options.stringParams && (f.push("contexts:[" + g.join(",") + "]"), f.push("types:[" + h.join(",") + "]")), this.options.data && f.push("data:data"), f
                },
                setupParams: function(a, b, c) {
                    var d = "{" + this.setupOptions(a, b).join(",") + "}";
                    return c ? (this.useRegister("options"), b.push("options"), "options=" + d) : (b.push(d), "")
                }
            };
            for (var j = "break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield".split(" "), k = d.RESERVED_WORDS = {}, l = 0, m = j.length; m > l; l++) k[j[l]] = !0;
            return d.isValidJavaScriptVariableName = function(a) {
                return !d.RESERVED_WORDS[a] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a) ? !0 : !1
            }, e = d
        }(d, c),
        l = function(a, b, c, d, e) {
            "use strict";
            var f, g = a,
                h = b,
                i = c.parser,
                j = c.parse,
                k = d.Compiler,
                l = d.compile,
                m = d.precompile,
                n = e,
                o = g.create,
                p = function() {
                    var a = o();
                    return a.compile = function(b, c) {
                        return l(b, c, a)
                    }, a.precompile = function(b, c) {
                        return m(b, c, a)
                    }, a.AST = h, a.Compiler = k, a.JavaScriptCompiler = n, a.Parser = i, a.parse = j, a
                };
            return g = p(), g.create = p, f = g
        }(f, g, i, j, k);
    return l
}();
Handlebars.registerHelper("if_eq", function(a, b, c) {
    return a == b ? c.fn(this) : c.inverse(this)
}), this.CP = this.CP || {}, this.CP.Templates = this.CP.Templates || {}, this.CP.Templates["js/templates/widget.hbs"] = Handlebars.template(function(a, b, c, d, e) {
    function f() {
        return "cleanslate"
    }

    function g() {
        return "text-shadow: none !important;"
    }

    function h(a) {
        var b, c = "";
        return c += "min-height: " + P((b = a && a.state, b = null == b || b === !1 ? b : b.minHeight, typeof b === O ? b.apply(a) : b)) + "px !important;"
    }

    function i(a) {
        var b, c = "";
        return c += "\n  <input name='answer_format' type='hidden' value='" + P((b = a && a.calculator, b = null == b || b === !1 ? b : b.answerFormat, typeof b === O ? b.apply(a) : b)) + "'>\n  "
    }

    function j() {
        return "hidden_class"
    }

    function k(a, b) {
        var d, e = "";
        return e += "\n    <div class='cp_input_area_only ", d = c["if"].call(a, (d = a && a.state, null == d || d === !1 ? d : d.showLeadForm), {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(9, j, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "'>\n    "
    }

    function l(a, b) {
        var d, e = "";
        return e += "\n      ", d = c["if"].call(a, a && a.input, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(14, m, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.date, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(16, n, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.select, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(18, o, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n    "
    }

    function m(a, b) {
        var d, e, f = "";
        return f += "\n        <div class='field'>", (e = c.label) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.label, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), (d || 0 === d) && (f += d), f += ":<div class='buffer'><input class='inputArea' name='input", (e = c.index) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.index, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "' value='", (e = c.value) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.value, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "'/></div></div>\n      "
    }

    function n(a, b) {
        var d, e, f = "";
        return f += "\n        <div class='field'>", (e = c.label) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.label, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + " (MM/DD/YYYY):<div class='buffer'><input class='inputArea' name='input", (e = c.index) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.index, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "' value=''/></div></div>\n      "
    }

    function o(a, b) {
        var d, e, f = "";
        return f += "\n        <div class='field'>", (e = c.label) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.label, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), (d || 0 === d) && (f += d), f += ":<div class='select_shadow'>\n          <select class='inputArea' name='input", (e = c.index) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.index, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "'>\n            ", d = c.each.call(a, a && a.options, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(19, p, b),
            data: b
        }), (d || 0 === d) && (f += d), f += "\n          </select>\n        </div></div>\n      "
    }

    function p(a, b) {
        var d, e, f = "";
        return f += "\n              <option value='", (e = c.value) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.value, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "' ", d = c["if"].call(a, a && a.selected, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(20, q, b),
            data: b
        }), (d || 0 === d) && (f += d), f += ">", (e = c.label) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.label, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "</option>\n            "
    }

    function q() {
        return "selected"
    }

    function r(a, b) {
        var d, e = "";
        return e += "\n    </div>\n    <div class='cp_leads_required_area ", d = c.unless.call(a, (d = a && a.state, null == d || d === !1 ? d : d.showLeadForm), {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(9, j, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "'>\n      ", d = c["if"].call(a, a && a.first_name_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(23, s, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.last_name_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(25, t, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.phone_number_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(27, u, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.email_address_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(29, v, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.zip_code_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(31, w, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      ", d = c["if"].call(a, a && a.additional_info_enabled, {
            hash: {},
            inverse: Q.noop,
            fn: Q.program(33, x, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n    </div>\n  "
    }

    function s() {
        return "\n        <div class='field'>First name:<div class='buffer'><input class='inputArea' name='input_required_fname' value=''/></div></div>\n      "
    }

    function t() {
        return "\n        <div class='field'>Last name:<div class='buffer'><input class='inputArea' name='input_required_lname' value=''/></div></div>\n      "
    }

    function u() {
        return "\n        <div class='field'>Phone number:<div class='buffer'><input id='cp_leads_required_phone_number' class='inputArea' name='input_required_phone' value=''/></div></div>\n      "
    }

    function v() {
        return "\n        <div class='field'>Email address:<div class='buffer'><input class='inputArea' name='input_required_email' value=''/></div></div>\n      "
    }

    function w() {
        return "\n        <div class='field'>Zip code:<div class='buffer'><input class='inputArea' name='input_required_zip' value=''/></div></div>\n      "
    }

    function x() {
        return "\n        <div class='field'>Additional information:<div class='buffer'><input class='inputArea' name='input_required_additional' value=''/></div></div>\n      "
    }

    function y(a, b) {
        var d, e;
        return (e = c.custcalcbtntext) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.custcalcbtntext, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), P(d)
    }

    function z() {
        return "Calculate"
    }

    function A(a) {
        var b, c = "";
        return c += "style='min-height: " + P((b = a && a.state, b = null == b || b === !1 ? b : b.minHeightInner, typeof b === O ? b.apply(a) : b)) + "px !important;'"
    }

    function B(a) {
        var b, c = "";
        return c += "\n        " + P((b = a && a.state, b = null == b || b === !1 ? b : b.loadingError, typeof b === O ? b.apply(a) : b)) + "\n      "
    }

    function C(a, b) {
        var d, e = "";
        return e += "\n        ", d = c["if"].call(a, a && a.custloadingtext, {
            hash: {},
            inverse: Q.program(46, E, b),
            fn: Q.program(44, D, b),
            data: b
        }), (d || 0 === d) && (e += d), e += "\n      "
    }

    function D(a, b) {
        var d, e;
        return (e = c.custloadingtext) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.custloadingtext, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), P(d)
    }

    function E() {
        return "loading..."
    }

    function F(a, b) {
        var d, e, f = "";
        return f += " style='font-size: ", (e = c.answersize) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.answersize, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "px !important; line-height: 1.5em !important;'"
    }

    function G(a, b) {
        var d, e;
        return (e = c.custloadingbtntext) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.custloadingbtntext, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), P(d)
    }

    function H() {
        return "&lt; back"
    }

    function I(a, b) {
        var d, e, f = "";
        return f += "\n    <div class='linkArea'>\n      <a class='pageLink' href='http://\" + dev_domain + \"/calculator/", (e = c.name) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.name, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "/' style='color: ", (e = c.textcolor) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.textcolor, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + " !important;'>", (e = c.tag) ? d = e.call(a, {
            hash: {},
            data: b
        }) : (e = a && a.tag, d = typeof e === O ? e.call(a, {
            hash: {},
            data: b
        }) : e), f += P(d) + "</a>\n    </div>\n  "
    }

    function J() {
        return "\n    <div class='clearFloatOnly'></div>\n  "
    }
    this.compilerInfo = [4, ">= 1.0.0"], c = this.merge(c, a.helpers), e = e || {};
    var K, L, M, N = "",
        O = "function",
        P = this.escapeExpression,
        Q = this,
        R = c.helperMissing;
    return N += "<style>", (L = c.customCss) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.customCss, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + "</style>\n<form class='widgetForm ", K = c["if"].call(b, b && b.cleanslate, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(1, f, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "' id='widgetForm' method='post' style='width: ", (L = c.calcwidth) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.calcwidth, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; background-color: ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; border-color: ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; color: ", (L = c.textcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.textcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; font-size: ", (L = c.textsize) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.textsize, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; ", L = c.if_eq || b && b.if_eq, M = {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(3, g, e),
        data: e
    }, K = L ? L.call(b, b && b.shadow, "false", M) : R.call(b, "if_eq", b && b.shadow, "false", M), (K || 0 === K) && (N += K), N += " ", K = c["if"].call(b, (K = b && b.state, null == K || K === !1 ? K : K.minHeight), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(5, h, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "'>\n  <input name='numFields' type='hidden' value='", (L = c.numFields) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.numFields, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + "'>\n  <input name='calcId' type='hidden' value='" + P((K = b && b.calculator, K = null == K || K === !1 ? K : K.id, typeof K === O ? K.apply(b) : K)) + "'/>\n  <input name='purchaseId' type='hidden' value='" + P((K = b && b.calculator, K = null == K || K === !1 ? K : K.hash, typeof K === O ? K.apply(b) : K)) + "'/>\n  ", K = c["if"].call(b, (K = b && b.calculator, null == K || K === !1 ? K : K.answerFormat), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(7, i, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n  <div class='widgetTitle'>\n    ", (L = c.title) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.title, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), (K || 0 === K) && (N += K), N += "\n  </div>\n  <hr style='color:", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; background-color: ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important;'>\n  <div class='form_area ", K = c["if"].call(b, (K = b && b.state, null == K || K === !1 ? K : K.showAnswer), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(9, j, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "'>\n    ", K = c["if"].call(b, b && b.has_leads, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(11, k, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n    ", K = c.each.call(b, b && b.fields, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(13, l, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n  ", K = c["if"].call(b, b && b.has_leads, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(22, r, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n    <input type='submit' id='calcButton" + P((K = b && b.calculator, K = null == K || K === !1 ? K : K.id, typeof K === O ? K.apply(b) : K)) + "' class='widgetSubmit calc_button' value='", K = c["if"].call(b, b && b.custcalcbtntext, {
        hash: {},
        inverse: Q.program(37, z, e),
        fn: Q.program(35, y, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "' style='color: ", (L = c.textcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.textcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; background-image: -moz-linear-gradient(top, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ") !important; background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + "),color-stop(1, ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ")) !important; filter: progid:DXImageTransform.Microsoft.Gradient(startColorStr=", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", endColorStr=", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", GradientType=0 ); background-image: linear-gradient(to bottom, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ") !important; border-color: ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; ", K = c["if"].call(b, b && b.shadow, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(3, g, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n    '>\n  </div>\n  <div class='answer_area ", K = c.unless.call(b, (K = b && b.state, null == K || K === !1 ? K : K.showAnswer), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(9, j, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "' ", K = c["if"].call(b, (K = b && b.state, null == K || K === !1 ? K : K.minHeightInner), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(39, A, e),
        data: e
    }), (K || 0 === K) && (N += K), N += ">\n    <div class='loading ", K = c.unless.call(b, (K = b && b.state, null == K || K === !1 ? K : K.showLoading), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(9, j, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "'>\n      ", K = c["if"].call(b, (K = b && b.state, null == K || K === !1 ? K : K.loadingError), {
        hash: {},
        inverse: Q.program(43, C, e),
        fn: Q.program(41, B, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n    </div>\n    <div class='actual_answer ", K = c["if"].call(b, (K = b && b.state, null == K || K === !1 ? K : K.showLoading), {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(9, j, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "'>\n      <span class='pre_answer'>", K = b && b.state, K = null == K || K === !1 ? K : K.preAnswer, K = typeof K === O ? K.apply(b) : K, (K || 0 === K) && (N += K), N += "</span>\n      <div class='answer'", K = c["if"].call(b, b && b.answersize, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(48, F, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "><span class='return_answer'>", K = b && b.state, K = null == K || K === !1 ? K : K.answer, K = typeof K === O ? K.apply(b) : K, (K || 0 === K) && (N += K), N += "</span></div>\n    </div>\n    <div><input type='button' class='backButton calc_button' value='", K = c["if"].call(b, b && b.custloadingbtntext, {
        hash: {},
        inverse: Q.program(52, H, e),
        fn: Q.program(50, G, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "' style='color: ", (L = c.textcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.textcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; background-image: -moz-linear-gradient(top, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ") !important; background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + "),color-stop(1, ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ")) !important; filter: progid:DXImageTransform.Microsoft.Gradient(startColorStr=", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", endColorStr=", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", GradientType=0 ); background-image: linear-gradient(to bottom, ", (L = c.backcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.backcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ", ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + ") !important; border-color: ", (L = c.bordcolor) ? K = L.call(b, {
        hash: {},
        data: e
    }) : (L = b && b.bordcolor, K = typeof L === O ? L.call(b, {
        hash: {},
        data: e
    }) : L), N += P(K) + " !important; ", K = c["if"].call(b, b && b.shadow, {
        hash: {},
        inverse: Q.noop,
        fn: Q.program(3, g, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n    '></div>\n  </div>\n  ", K = c["if"].call(b, b && b.showLink, {
        hash: {},
        inverse: Q.program(56, J, e),
        fn: Q.program(54, I, e),
        data: e
    }), (K || 0 === K) && (N += K), N += "\n</form>\n\n"
});
